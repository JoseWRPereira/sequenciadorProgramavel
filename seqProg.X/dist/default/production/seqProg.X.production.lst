

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Nov 30 08:24:06 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     	FNCALL	_main,___lmul
  1180                           	FNCALL	_main,_addContCiclos
  1181                           	FNCALL	_main,_addIndicePassos
  1182                           	FNCALL	_main,_alt_atuador
  1183                           	FNCALL	_main,_delay
  1184                           	FNCALL	_main,_dignum_apagar
  1185                           	FNCALL	_main,_dignum_conc
  1186                           	FNCALL	_main,_dispLCD
  1187                           	FNCALL	_main,_dispLCD_clr
  1188                           	FNCALL	_main,_dispLCD_dataReg
  1189                           	FNCALL	_main,_dispLCD_init
  1190                           	FNCALL	_main,_dispLCD_lincol
  1191                           	FNCALL	_main,_dispLCD_num
  1192                           	FNCALL	_main,_fifo_add
  1193                           	FNCALL	_main,_fifo_add_ciclo
  1194                           	FNCALL	_main,_fifo_add_tempo
  1195                           	FNCALL	_main,_fifo_delete
  1196                           	FNCALL	_main,_fifo_disponivel
  1197                           	FNCALL	_main,_fifo_indice
  1198                           	FNCALL	_main,_fifo_indicePrint_dec
  1199                           	FNCALL	_main,_fifo_indicePrint_inc
  1200                           	FNCALL	_main,_fifo_lerPos
  1201                           	FNCALL	_main,_fifo_print
  1202                           	FNCALL	_main,_fifo_tam
  1203                           	FNCALL	_main,_getCiclos
  1204                           	FNCALL	_main,_getContCiclos
  1205                           	FNCALL	_main,_getIndicePassos
  1206                           	FNCALL	_main,_initSerialIO
  1207                           	FNCALL	_main,_init_atuadores
  1208                           	FNCALL	_main,_ler_atuador
  1209                           	FNCALL	_main,_ler_sensor
  1210                           	FNCALL	_main,_printExec
  1211                           	FNCALL	_main,_resetContCiclos
  1212                           	FNCALL	_main,_resetIndicePassos
  1213                           	FNCALL	_main,_serialIOscan
  1214                           	FNCALL	_main,_setT1
  1215                           	FNCALL	_main,_set_passo
  1216                           	FNCALL	_main,_statusT1
  1217                           	FNCALL	_main,_teclado_borda
  1218                           	FNCALL	_main,_teclado_init
  1219                           	FNCALL	_main,_timer1_init
  1220                           	FNCALL	_teclado_borda,_teclado_scan
  1221                           	FNCALL	_serialIOscan,_serialIObyteShift
  1222                           	FNCALL	_serialIOscan,_serialIOload
  1223                           	FNCALL	_printExec,_dignum_tam
  1224                           	FNCALL	_printExec,_dispLCD_dataReg
  1225                           	FNCALL	_printExec,_dispLCD_lincol
  1226                           	FNCALL	_printExec,_dispLCD_num
  1227                           	FNCALL	_printExec,_posAtual
  1228                           	FNCALL	_posAtual,_fifo_lerPos
  1229                           	FNCALL	_posAtual,_getIndicePassos
  1230                           	FNCALL	_dispLCD_num,___awdiv
  1231                           	FNCALL	_dispLCD_num,___awmod
  1232                           	FNCALL	_dispLCD_num,_dispLCD_dataReg
  1233                           	FNCALL	_dispLCD_num,_dispLCD_lincol
  1234                           	FNCALL	_fifo_print,___awdiv
  1235                           	FNCALL	_fifo_print,___awmod
  1236                           	FNCALL	_fifo_print,_dispLCD_dataReg
  1237                           	FNCALL	_fifo_print,_dispLCD_lincol
  1238                           	FNCALL	_fifo_delete,_alt_atuador
  1239                           	FNCALL	_fifo_delete,_fifo_alinharPrint
  1240                           	FNCALL	_fifo_add_tempo,_fifo_alinharPrint
  1241                           	FNCALL	_fifo_add,_fifo_alinharPrint
  1242                           	FNCALL	_fifo_alinharPrint,_dignum_tam
  1243                           	FNCALL	_dignum_tam,___awdiv
  1244                           	FNCALL	_dispLCD_init,_delay
  1245                           	FNCALL	_dispLCD_init,_dispLCD_instReg
  1246                           	FNCALL	_dispLCD_clr,_dispLCD_instReg
  1247                           	FNCALL	_dispLCD,_dispLCD_dataReg
  1248                           	FNCALL	_dispLCD,_dispLCD_lincol
  1249                           	FNCALL	_dispLCD_lincol,_dispLCD_instReg
  1250                           	FNCALL	_dignum_conc,___wmul
  1251                           	FNCALL	_dignum_apagar,___lwdiv
  1252                           	FNROOT	_main
  1253                           	FNCALL	_irq,_intt1_1ms
  1254                           	FNCALL	intlevel1,_irq
  1255                           	global	intlevel1
  1256                           	FNROOT	intlevel1
  1257                           	global	_indice_passos
  1258                           	global	_teclas
  1259                           	global	_ind_print
  1260                           	global	_ind_fila
  1261                           	global	main@F1358
  1262                           psect	idataCOMMON,class=CODE,space=0,delta=2,noexec
  1263                           global __pidataCOMMON
  1264                           __pidataCOMMON:
  1265  0003                     	file	"fifo.c"
  1266                           	line	14
  1267                           
  1268                           ;initializer for _indice_passos
  1269                           	retlw	02h
  1270  0003  3402               psect	idataBANK0,class=CODE,space=0,delta=2,noexec
  1271                           global __pidataBANK0
  1272                           __pidataBANK0:
  1273  1483                     	file	"teclado.c"
  1274                           	line	50
  1275                           
  1276                           ;initializer for _teclas
  1277                           	retlw	031h
  1278  1483  3431               	retlw	032h
  1279  1484  3432               	retlw	033h
  1280  1485  3433               	retlw	041h
  1281  1486  3441               	retlw	034h
  1282  1487  3434               	retlw	035h
  1283  1488  3435               	retlw	036h
  1284  1489  3436               	retlw	042h
  1285  148A  3442               	retlw	037h
  1286  148B  3437               	retlw	038h
  1287  148C  3438               	retlw	039h
  1288  148D  3439               	retlw	043h
  1289  148E  3443               	retlw	02Ah
  1290  148F  342A               	retlw	030h
  1291  1490  3430               	retlw	023h
  1292  1491  3423               	retlw	044h
  1293  1492  3444               	file	"fifo.c"
  1294                           	line	11
  1295                           
  1296                           ;initializer for _ind_print
  1297                           	retlw	02h
  1298  1493  3402               	line	10
  1299                           
  1300                           ;initializer for _ind_fila
  1301                           	retlw	02h
  1302  1494  3402               psect	idataBANK1,class=CODE,space=0,delta=2,noexec
  1303                           global __pidataBANK1
  1304                           __pidataBANK1:
  1305  1472                     	file	"main.c"
  1306                           	line	54
  1307                           
  1308                           ;initializer for main@F1358
  1309                           	retlw	020h
  1310  1472  3420               	retlw	020h
  1311  1473  3420               	retlw	020h
  1312  1474  3420               	retlw	020h
  1313  1475  3420               	retlw	020h
  1314  1476  3420               	retlw	020h
  1315  1477  3420               	retlw	020h
  1316  1478  3420               	retlw	020h
  1317  1479  3420               	retlw	020h
  1318  147A  3420               	retlw	020h
  1319  147B  3420               	retlw	020h
  1320  147C  3420               	retlw	020h
  1321  147D  3420               	retlw	020h
  1322  147E  3420               	retlw	020h
  1323  147F  3420               	retlw	020h
  1324  1480  3420               	retlw	020h
  1325  1481  3420               	retlw	low(0)
  1326  1482  3400               	global	_cont_ciclos
  1327                           	global	_atuador
  1328                           	global	_t1cont
  1329                           	global	_lenSerialIO
  1330                           	global	_ptrSerialOut
  1331                           	global	_ptrSerialIn
  1332                           	global	_teclaAnterior
  1333                           	global	main@F1363
  1334                           	global	main@F1361
  1335                           	global	_fila
  1336                           	global	_T1CONbits
  1337                           _T1CONbits	set	0x10
  1338  0010                     	global	_TMR1L
  1339                           _TMR1L	set	0xE
  1340  000E                     	global	_TMR1H
  1341                           _TMR1H	set	0xF
  1342  000F                     	global	_SERIALIO
  1343                           _SERIALIO	set	5
  1344  0005                     	global	_PORTAbits
  1345                           _PORTAbits	set	0x5
  1346  0005                     	global	_PORTD
  1347                           _PORTD	set	0x8
  1348  0008                     	global	_PIR1bits
  1349                           _PIR1bits	set	0xC
  1350  000C                     	global	_INTCONbits
  1351                           _INTCONbits	set	0xB
  1352  000B                     	global	_LCDbits
  1353                           _LCDbits	set	6
  1354  0006                     	global	_TRISAbits
  1355                           _TRISAbits	set	0x85
  1356  0085                     	global	_TRISD
  1357                           _TRISD	set	0x88
  1358  0088                     	global	_PIE1bits
  1359                           _PIE1bits	set	0x8C
  1360  008C                     	global	_TRISBbits
  1361                           _TRISBbits	set	0x86
  1362  0086                     	global	_ANSELbits
  1363                           _ANSELbits	set	0x188
  1364  0188                     	global	_ANSELH
  1365                           _ANSELH	set	0x189
  1366  0189                     psect	strings,class=STRING,delta=2,noexec
  1367                           global __pstrings
  1368                           __pstrings:
  1369  1105                     stringtab:
  1370  1105                     	global    __stringtab
  1371                           __stringtab:
  1372  1105                     ;	String table - string pointers are 2 bytes each
  1373                           	btfsc	(btemp+1),7
  1374  1105  1BFF               	ljmp	stringcode
  1375  1106  290F               	bcf	status,7
  1376  1107  1383               	btfsc	(btemp+1),0
  1377  1108  187F               	bsf	status,7
  1378  1109  1783               	movf	indf,w
  1379  110A  0800               	incf fsr
  1380  110B  0A84               skipnz
  1381  110C  1903               incf btemp+1
  1382  110D  0AFF               	return
  1383  110E  0008               stringcode:
  1384  110F                     	movf btemp+1,w
  1385  110F  087F               andlw 7Fh
  1386  1110  397F               movwf	pclath
  1387  1111  008A               	movf	fsr,w
  1388  1112  0804               incf fsr
  1389  1113  0A84               skipnz
  1390  1114  1903               incf btemp+1
  1391  1115  0AFF               	movwf pc
  1392  1116  0082               	global __stringbase
  1393                           __stringbase:
  1394  1117                     	global    __end_of__stringtab
  1395                           __end_of__stringtab:
  1396  1117                     psect	stringtext,class=STRCODE,delta=2,reloc=256,noexec
  1397                           global __pstringtext
  1398                           __pstringtext:
  1399  1000                     	
  1400                           STR_16:	
  1401  1000                     	retlw	32	;' '
  1402  1000  3420               	retlw	32	;' '
  1403  1001  3420               	retlw	32	;' '
  1404  1002  3420               	retlw	32	;' '
  1405  1003  3420               	retlw	32	;' '
  1406  1004  3420               	retlw	32	;' '
  1407  1005  3420               	retlw	32	;' '
  1408  1006  3420               	retlw	32	;' '
  1409  1007  3420               	retlw	32	;' '
  1410  1008  3420               	retlw	32	;' '
  1411  1009  3420               	retlw	32	;' '
  1412  100A  3420               	retlw	32	;' '
  1413  100B  3420               	retlw	32	;' '
  1414  100C  3420               	retlw	32	;' '
  1415  100D  3420               	retlw	32	;' '
  1416  100E  3420               	retlw	32	;' '
  1417  100F  3420               	retlw	0
  1418  1010  3400               psect	stringtext
  1419                           	
  1420                           STR_17:	
  1421  1011                     	retlw	67	;'C'
  1422  1011  3443               	retlw	105	;'i'
  1423  1012  3469               	retlw	99	;'c'
  1424  1013  3463               	retlw	108	;'l'
  1425  1014  346C               	retlw	111	;'o'
  1426  1015  346F               	retlw	115	;'s'
  1427  1016  3473               	retlw	58	;':'
  1428  1017  343A               	retlw	32	;' '
  1429  1018  3420               	retlw	32	;' '
  1430  1019  3420               	retlw	32	;' '
  1431  101A  3420               	retlw	32	;' '
  1432  101B  3420               	retlw	32	;' '
  1433  101C  3420               	retlw	32	;' '
  1434  101D  3420               	retlw	32	;' '
  1435  101E  3420               	retlw	32	;' '
  1436  101F  3420               	retlw	32	;' '
  1437  1020  3420               	retlw	0
  1438  1021  3400               psect	stringtext
  1439                           	
  1440                           STR_10:	
  1441  1022                     	retlw	60	;'<'
  1442  1022  343C               	retlw	32	;' '
  1443  1023  3420               	retlw	32	;' '
  1444  1024  3420               	retlw	47	;'/'
  1445  1025  342F               	retlw	32	;' '
  1446  1026  3420               	retlw	32	;' '
  1447  1027  3420               	retlw	62	;'>'
  1448  1028  343E               	retlw	32	;' '
  1449  1029  3420               	retlw	99	;'c'
  1450  102A  3463               	retlw	58	;':'
  1451  102B  343A               	retlw	32	;' '
  1452  102C  3420               	retlw	32	;' '
  1453  102D  3420               	retlw	32	;' '
  1454  102E  3420               	retlw	32	;' '
  1455  102F  3420               	retlw	32	;' '
  1456  1030  3420               	retlw	32	;' '
  1457  1031  3420               	retlw	0
  1458  1032  3400               psect	stringtext
  1459                           	
  1460                           STR_9:	
  1461  1033                     	retlw	32	;' '
  1462  1033  3420               	retlw	32	;' '
  1463  1034  3420               	retlw	32	;' '
  1464  1035  3420               	retlw	32	;' '
  1465  1036  3420               	retlw	32	;' '
  1466  1037  3420               	retlw	91	;'['
  1467  1038  345B               	retlw	32	;' '
  1468  1039  3420               	retlw	32	;' '
  1469  103A  3420               	retlw	32	;' '
  1470  103B  3420               	retlw	32	;' '
  1471  103C  3420               	retlw	93	;']'
  1472  103D  345D               	retlw	32	;' '
  1473  103E  3420               	retlw	32	;' '
  1474  103F  3420               	retlw	32	;' '
  1475  1040  3420               	retlw	32	;' '
  1476  1041  3420               	retlw	32	;' '
  1477  1042  3420               	retlw	0
  1478  1043  3400               psect	stringtext
  1479                           	
  1480                           STR_12:	
  1481  1044                     	retlw	32	;' '
  1482  1044  3420               	retlw	32	;' '
  1483  1045  3420               	retlw	32	;' '
  1484  1046  3420               	retlw	32	;' '
  1485  1047  3420               	retlw	84	;'T'
  1486  1048  3454               	retlw	101	;'e'
  1487  1049  3465               	retlw	108	;'l'
  1488  104A  346C               	retlw	97	;'a'
  1489  104B  3461               	retlw	32	;' '
  1490  104C  3420               	retlw	100	;'d'
  1491  104D  3464               	retlw	101	;'e'
  1492  104E  3465               	retlw	32	;' '
  1493  104F  3420               	retlw	32	;' '
  1494  1050  3420               	retlw	32	;' '
  1495  1051  3420               	retlw	32	;' '
  1496  1052  3420               	retlw	32	;' '
  1497  1053  3420               	retlw	0
  1498  1054  3400               psect	stringtext
  1499                           	
  1500                           STR_13:	
  1501  1055                     	retlw	32	;' '
  1502  1055  3420               	retlw	32	;' '
  1503  1056  3420               	retlw	32	;' '
  1504  1057  3420               	retlw	82	;'R'
  1505  1058  3452               	retlw	101	;'e'
  1506  1059  3465               	retlw	112	;'p'
  1507  105A  3470               	retlw	101	;'e'
  1508  105B  3465               	retlw	116	;'t'
  1509  105C  3474               	retlw	105	;'i'
  1510  105D  3469               	retlw	99	;'c'
  1511  105E  3463               	retlw	97	;'a'
  1512  105F  3461               	retlw	111	;'o'
  1513  1060  346F               	retlw	32	;' '
  1514  1061  3420               	retlw	32	;' '
  1515  1062  3420               	retlw	32	;' '
  1516  1063  3420               	retlw	32	;' '
  1517  1064  3420               	retlw	0
  1518  1065  3400               psect	stringtext
  1519                           	
  1520                           STR_5:	
  1521  1066                     	retlw	32	;' '
  1522  1066  3420               	retlw	32	;' '
  1523  1067  3420               	retlw	32	;' '
  1524  1068  3420               	retlw	100	;'d'
  1525  1069  3464               	retlw	111	;'o'
  1526  106A  346F               	retlw	32	;' '
  1527  106B  3420               	retlw	115	;'s'
  1528  106C  3473               	retlw	105	;'i'
  1529  106D  3469               	retlw	115	;'s'
  1530  106E  3473               	retlw	116	;'t'
  1531  106F  3474               	retlw	101	;'e'
  1532  1070  3465               	retlw	109	;'m'
  1533  1071  346D               	retlw	97	;'a'
  1534  1072  3461               	retlw	32	;' '
  1535  1073  3420               	retlw	32	;' '
  1536  1074  3420               	retlw	32	;' '
  1537  1075  3420               	retlw	0
  1538  1076  3400               psect	stringtext
  1539                           	
  1540                           STR_6:	
  1541  1077                     	retlw	32	;' '
  1542  1077  3420               	retlw	32	;' '
  1543  1078  3420               	retlw	32	;' '
  1544  1079  3420               	retlw	65	;'A'
  1545  107A  3441               	retlw	45	;'-'
  1546  107B  342D               	retlw	32	;' '
  1547  107C  3420               	retlw	66	;'B'
  1548  107D  3442               	retlw	45	;'-'
  1549  107E  342D               	retlw	32	;' '
  1550  107F  3420               	retlw	67	;'C'
  1551  1080  3443               	retlw	45	;'-'
  1552  1081  342D               	retlw	32	;' '
  1553  1082  3420               	retlw	68	;'D'
  1554  1083  3444               	retlw	45	;'-'
  1555  1084  342D               	retlw	32	;' '
  1556  1085  3420               	retlw	32	;' '
  1557  1086  3420               	retlw	0
  1558  1087  3400               psect	stringtext
  1559                           	
  1560                           STR_15:	
  1561  1088                     	retlw	32	;' '
  1562  1088  3420               	retlw	100	;'d'
  1563  1089  3464               	retlw	101	;'e'
  1564  108A  3465               	retlw	32	;' '
  1565  108B  3420               	retlw	114	;'r'
  1566  108C  3472               	retlw	101	;'e'
  1567  108D  3465               	retlw	112	;'p'
  1568  108E  3470               	retlw	101	;'e'
  1569  108F  3465               	retlw	116	;'t'
  1570  1090  3474               	retlw	105	;'i'
  1571  1091  3469               	retlw	99	;'c'
  1572  1092  3463               	retlw	111	;'o'
  1573  1093  346F               	retlw	101	;'e'
  1574  1094  3465               	retlw	115	;'s'
  1575  1095  3473               	retlw	32	;' '
  1576  1096  3420               	retlw	32	;' '
  1577  1097  3420               	retlw	0
  1578  1098  3400               psect	stringtext
  1579                           	
  1580                           STR_4:	
  1581  1099                     	retlw	65	;'A'
  1582  1099  3441               	retlw	106	;'j'
  1583  109A  346A               	retlw	117	;'u'
  1584  109B  3475               	retlw	115	;'s'
  1585  109C  3473               	retlw	116	;'t'
  1586  109D  3474               	retlw	101	;'e'
  1587  109E  3465               	retlw	32	;' '
  1588  109F  3420               	retlw	111	;'o'
  1589  10A0  346F               	retlw	32	;' '
  1590  10A1  3420               	retlw	105	;'i'
  1591  10A2  3469               	retlw	110	;'n'
  1592  10A3  346E               	retlw	105	;'i'
  1593  10A4  3469               	retlw	99	;'c'
  1594  10A5  3463               	retlw	105	;'i'
  1595  10A6  3469               	retlw	111	;'o'
  1596  10A7  346F               	retlw	32	;' '
  1597  10A8  3420               	retlw	0
  1598  10A9  3400               psect	stringtext
  1599                           	
  1600                           STR_14:	
  1601  10AA                     	retlw	68	;'D'
  1602  10AA  3444               	retlw	105	;'i'
  1603  10AB  3469               	retlw	103	;'g'
  1604  10AC  3467               	retlw	105	;'i'
  1605  10AD  3469               	retlw	116	;'t'
  1606  10AE  3474               	retlw	101	;'e'
  1607  10AF  3465               	retlw	32	;' '
  1608  10B0  3420               	retlw	111	;'o'
  1609  10B1  346F               	retlw	32	;' '
  1610  10B2  3420               	retlw	110	;'n'
  1611  10B3  346E               	retlw	117	;'u'
  1612  10B4  3475               	retlw	109	;'m'
  1613  10B5  346D               	retlw	101	;'e'
  1614  10B6  3465               	retlw	114	;'r'
  1615  10B7  3472               	retlw	111	;'o'
  1616  10B8  346F               	retlw	32	;' '
  1617  10B9  3420               	retlw	0
  1618  10BA  3400               psect	stringtext
  1619                           	
  1620                           STR_18:	
  1621  10BB                     	retlw	48	;'0'
  1622  10BB  3430               	retlw	45	;'-'
  1623  10BC  342D               	retlw	67	;'C'
  1624  10BD  3443               	retlw	105	;'i'
  1625  10BE  3469               	retlw	99	;'c'
  1626  10BF  3463               	retlw	108	;'l'
  1627  10C0  346C               	retlw	111	;'o'
  1628  10C1  346F               	retlw	32	;' '
  1629  10C2  3420               	retlw	99	;'c'
  1630  10C3  3463               	retlw	111	;'o'
  1631  10C4  346F               	retlw	110	;'n'
  1632  10C5  346E               	retlw	116	;'t'
  1633  10C6  3474               	retlw	105	;'i'
  1634  10C7  3469               	retlw	110	;'n'
  1635  10C8  346E               	retlw	117	;'u'
  1636  10C9  3475               	retlw	111	;'o'
  1637  10CA  346F               	retlw	0
  1638  10CB  3400               psect	stringtext
  1639                           	
  1640                           STR_11:	
  1641  10CC                     	retlw	99	;'c'
  1642  10CC  3463               	retlw	102	;'f'
  1643  10CD  3466               	retlw	103	;'g'
  1644  10CE  3467               	retlw	32	;' '
  1645  10CF  3420               	retlw	116	;'t'
  1646  10D0  3474               	retlw	101	;'e'
  1647  10D1  3465               	retlw	109	;'m'
  1648  10D2  346D               	retlw	112	;'p'
  1649  10D3  3470               	retlw	111	;'o'
  1650  10D4  346F               	retlw	58	;':'
  1651  10D5  343A               	retlw	32	;' '
  1652  10D6  3420               	retlw	32	;' '
  1653  10D7  3420               	retlw	32	;' '
  1654  10D8  3420               	retlw	32	;' '
  1655  10D9  3420               	retlw	32	;' '
  1656  10DA  3420               	retlw	115	;'s'
  1657  10DB  3473               	retlw	0
  1658  10DC  3400               psect	stringtext
  1659                           	
  1660                           STR_7:	
  1661  10DD                     	retlw	73	;'I'
  1662  10DD  3449               	retlw	110	;'n'
  1663  10DE  346E               	retlw	115	;'s'
  1664  10DF  3473               	retlw	105	;'i'
  1665  10E0  3469               	retlw	114	;'r'
  1666  10E1  3472               	retlw	97	;'a'
  1667  10E2  3461               	retlw	32	;' '
  1668  10E3  3420               	retlw	111	;'o'
  1669  10E4  346F               	retlw	115	;'s'
  1670  10E5  3473               	retlw	32	;' '
  1671  10E6  3420               	retlw	112	;'p'
  1672  10E7  3470               	retlw	97	;'a'
  1673  10E8  3461               	retlw	115	;'s'
  1674  10E9  3473               	retlw	115	;'s'
  1675  10EA  3473               	retlw	111	;'o'
  1676  10EB  346F               	retlw	115	;'s'
  1677  10EC  3473               	retlw	0
  1678  10ED  3400               psect	stringtext
  1679                           	
  1680                           STR_3:	
  1681  10EE                     	retlw	80	;'P'
  1682  10EE  3450               	retlw	73	;'I'
  1683  10EF  3449               	retlw	67	;'C'
  1684  10F0  3443               	retlw	111	;'o'
  1685  10F1  346F               	retlw	110	;'n'
  1686  10F2  346E               	retlw	116	;'t'
  1687  10F3  3474               	retlw	114	;'r'
  1688  10F4  3472               	retlw	111	;'o'
  1689  10F5  346F               	retlw	108	;'l'
  1690  10F6  346C               	retlw	108	;'l'
  1691  10F7  346C               	retlw	101	;'e'
  1692  10F8  3465               	retlw	114	;'r'
  1693  10F9  3472               	retlw	0
  1694  10FA  3400               psect	stringtext
  1695                           	
  1696                           STR_8:	
  1697  10FB                     	retlw	60	;'<'
  1698  10FB  343C               	retlw	32	;' '
  1699  10FC  3420               	retlw	32	;' '
  1700  10FD  3420               	retlw	47	;'/'
  1701  10FE  342F               	retlw	32	;' '
  1702  10FF  3420               	retlw	32	;' '
  1703  1100  3420               	retlw	62	;'>'
  1704  1101  343E               	retlw	0
  1705  1102  3400               psect	stringtext
  1706                           	
  1707                           STR_1:	
  1708  1103                     	retlw	-1
  1709  1103  34FF               	retlw	0
  1710  1104  3400               psect	stringtext
  1711                           STR_2	equ	STR_16+15
  1712  100F                     ; #config settings
  1713                           global __CFG_FOSC$HS
  1714                           __CFG_FOSC$HS equ 0x0
  1715  0000                     global __CFG_WDTE$OFF
  1716                           __CFG_WDTE$OFF equ 0x0
  1717  0000                     global __CFG_PWRTE$ON
  1718                           __CFG_PWRTE$ON equ 0x0
  1719  0000                     global __CFG_MCLRE$OFF
  1720                           __CFG_MCLRE$OFF equ 0x0
  1721  0000                     global __CFG_CP$OFF
  1722                           __CFG_CP$OFF equ 0x0
  1723  0000                     global __CFG_CPD$OFF
  1724                           __CFG_CPD$OFF equ 0x0
  1725  0000                     global __CFG_BOREN$OFF
  1726                           __CFG_BOREN$OFF equ 0x0
  1727  0000                     global __CFG_IESO$OFF
  1728                           __CFG_IESO$OFF equ 0x0
  1729  0000                     global __CFG_FCMEN$OFF
  1730                           __CFG_FCMEN$OFF equ 0x0
  1731  0000                     global __CFG_LVP$OFF
  1732                           __CFG_LVP$OFF equ 0x0
  1733  0000                     global __CFG_BOR4V$BOR40V
  1734                           __CFG_BOR4V$BOR40V equ 0x0
  1735  0000                     global __CFG_WRT$OFF
  1736                           __CFG_WRT$OFF equ 0x0
  1737  0000                     	file	"C:\Users\19180064\AppData\Local\Temp\s67g."
  1738                           	line	#
  1739                           psect cinit,class=CODE,delta=2
  1740                           global start_initialization
  1741                           start_initialization:
  1742  000F                     
  1743                           global __initialization
  1744                           __initialization:
  1745  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1746                           global __pbssCOMMON
  1747                           __pbssCOMMON:
  1748  0076                     _cont_ciclos:
  1749  0076                            ds      2
  1750  0076                     
  1751                           _ciclos:
  1752  0078                            ds      2
  1753  0078                     
  1754                           _atuador:
  1755  007A                            ds      1
  1756  007A                     
  1757                           psect	dataCOMMON,class=COMMON,space=1,noexec
  1758                           global __pdataCOMMON
  1759                           __pdataCOMMON:
  1760  007B                     	file	"fifo.c"
  1761                           	line	14
  1762                           _indice_passos:
  1763  007B                            ds      1
  1764  007B                     
  1765                           psect	bssBANK0,class=BANK0,space=1,noexec
  1766                           global __pbssBANK0
  1767                           __pbssBANK0:
  1768  005A                     _t1cont:
  1769  005A                            ds      4
  1770  005A                     
  1771                           _lenSerialIO:
  1772  005E                            ds      1
  1773  005E                     
  1774                           _ptrSerialOut:
  1775  005F                            ds      1
  1776  005F                     
  1777                           _ptrSerialIn:
  1778  0060                            ds      1
  1779  0060                     
  1780                           _teclaAnterior:
  1781  0061                            ds      1
  1782  0061                     
  1783                           psect	dataBANK0,class=BANK0,space=1,noexec
  1784                           global __pdataBANK0
  1785                           __pdataBANK0:
  1786  0048                     	file	"teclado.c"
  1787                           	line	50
  1788                           _teclas:
  1789  0048                            ds      16
  1790  0048                     
  1791                           psect	dataBANK0
  1792                           	file	"fifo.c"
  1793                           	line	11
  1794                           _ind_print:
  1795  0058                            ds      1
  1796  0058                     
  1797                           psect	dataBANK0
  1798                           	file	"fifo.c"
  1799                           	line	10
  1800                           _ind_fila:
  1801  0059                            ds      1
  1802  0059                     
  1803                           psect	bssBANK1,class=BANK1,space=1,noexec
  1804                           global __pbssBANK1
  1805                           __pbssBANK1:
  1806  00E3                     main@F1363:
  1807  00E3                            ds      1
  1808  00E3                     
  1809                           main@F1361:
  1810  00E4                            ds      1
  1811  00E4                     
  1812                           psect	dataBANK1,class=BANK1,space=1,noexec
  1813                           global __pdataBANK1
  1814                           __pdataBANK1:
  1815  00D2                     	file	"main.c"
  1816                           	line	54
  1817                           main@F1358:
  1818  00D2                            ds      17
  1819  00D2                     
  1820                           psect	bssBANK3,class=BANK3,space=1,noexec
  1821                           global __pbssBANK3
  1822                           __pbssBANK3:
  1823  0190                     _fila:
  1824  0190                            ds      62
  1825  0190                     
  1826                           	file	"C:\Users\19180064\AppData\Local\Temp\s67g."
  1827                           	line	#
  1828                           global btemp
  1829                           psect inittext,class=CODE,delta=2
  1830                           global init_fetch0,btemp
  1831                           ;	Called with low address in FSR and high address in W
  1832                           init_fetch0:
  1833  1495                     	movf btemp,w
  1834  1495  087E               	movwf pclath
  1835  1496  008A               	movf btemp+1,w
  1836  1497  087F               	movwf pc
  1837  1498  0082               global init_ram0
  1838                           ;Called with:
  1839                           ;	high address of idata address in btemp 
  1840                           ;	low address of idata address in btemp+1 
  1841                           ;	low address of data in FSR
  1842                           ;	high address + 1 of data in btemp-1
  1843                           init_ram0:
  1844  1499                     	fcall init_fetch0
  1845  1499  160A  118A  2495  160A  118A  	movwf indf,f
  1846  149E  0080               	incf fsr,f
  1847  149F  0A84               	movf fsr,w
  1848  14A0  0804               	xorwf btemp-1,w
  1849  14A1  067D               	btfsc status,2
  1850  14A2  1903               	retlw 0
  1851  14A3  3400               	incf btemp+1,f
  1852  14A4  0AFF               	btfsc status,2
  1853  14A5  1903               	incf btemp,f
  1854  14A6  0AFE               	goto init_ram0
  1855  14A7  2C99               ; Initialize objects allocated to BANK1
  1856                           psect cinit,class=CODE,delta=2,merge=1
  1857                           global init_ram0, __pidataBANK1
  1858                           	bcf	status, 7	;select IRP bank0
  1859  000F  1383               	movlw low(__pdataBANK1+17)
  1860  0010  30E3               	movwf btemp-1,f
  1861  0011  00FD               	movlw high(__pidataBANK1)
  1862  0012  3014               	movwf btemp,f
  1863  0013  00FE               	movlw low(__pidataBANK1)
  1864  0014  3072               	movwf btemp+1,f
  1865  0015  00FF               	movlw low(__pdataBANK1)
  1866  0016  30D2               	movwf fsr,f
  1867  0017  0084               	fcall init_ram0
  1868  0018  160A  118A  2499  120A  118A  ; Initialize objects allocated to BANK0
  1869                           psect cinit,class=CODE,delta=2,merge=1
  1870                           global init_ram0, __pidataBANK0
  1871                           	movlw low(__pdataBANK0+18)
  1872  001D  305A               	movwf btemp-1,f
  1873  001E  00FD               	movlw high(__pidataBANK0)
  1874  001F  3014               	movwf btemp,f
  1875  0020  00FE               	movlw low(__pidataBANK0)
  1876  0021  3083               	movwf btemp+1,f
  1877  0022  00FF               	movlw low(__pdataBANK0)
  1878  0023  3048               	movwf fsr,f
  1879  0024  0084               	fcall init_ram0
  1880  0025  160A  118A  2499  120A  118A  ; Initialize objects allocated to COMMON
  1881                           	global __pidataCOMMON
  1882                           psect cinit,class=CODE,delta=2,merge=1
  1883                           	fcall	__pidataCOMMON+0		;fetch initializer
  1884  002A  120A  118A  2003  120A  118A  	movwf	__pdataCOMMON+0&07fh		
  1885  002F  00FB               	line	#
  1886                           psect clrtext,class=CODE,delta=2
  1887                           global clear_ram0
  1888                           ;	Called with FSR containing the base address, and
  1889                           ;	W with the last address+1
  1890                           clear_ram0:
  1891  1400                     	clrwdt			;clear the watchdog before getting into this loop
  1892  1400  0064               clrloop0:
  1893  1401                     	clrf	indf		;clear RAM location pointed to by FSR
  1894  1401  0180               	incf	fsr,f		;increment pointer
  1895  1402  0A84               	xorwf	fsr,w		;XOR with final address
  1896  1403  0604               	btfsc	status,2	;have we reached the end yet?
  1897  1404  1903               	retlw	0		;all done for this memory range, return
  1898  1405  3400               	xorwf	fsr,w		;XOR again to restore value
  1899  1406  0604               	goto	clrloop0		;do the next byte
  1900  1407  2C01               
  1901                           ; Clear objects allocated to BANK3
  1902                           psect cinit,class=CODE,delta=2,merge=1
  1903                           	bsf	status, 7	;select IRP bank2
  1904  0030  1783               	movlw	low(__pbssBANK3)
  1905  0031  3090               	movwf	fsr
  1906  0032  0084               	movlw	low((__pbssBANK3)+03Eh)
  1907  0033  30CE               	fcall	clear_ram0
  1908  0034  160A  118A  2400  120A  118A  ; Clear objects allocated to BANK1
  1909                           psect cinit,class=CODE,delta=2,merge=1
  1910                           	bsf	status, 5	;RP0=1, select bank1
  1911  0039  1683               	bcf	status, 6	;RP1=0, select bank1
  1912  003A  1303               	clrf	((__pbssBANK1)+0)&07Fh
  1913  003B  01E3               	clrf	((__pbssBANK1)+1)&07Fh
  1914  003C  01E4               ; Clear objects allocated to BANK0
  1915                           psect cinit,class=CODE,delta=2,merge=1
  1916                           	bcf	status, 7	;select IRP bank0
  1917  003D  1383               	movlw	low(__pbssBANK0)
  1918  003E  305A               	movwf	fsr
  1919  003F  0084               	movlw	low((__pbssBANK0)+08h)
  1920  0040  3062               	fcall	clear_ram0
  1921  0041  160A  118A  2400  120A  118A  ; Clear objects allocated to COMMON
  1922                           psect cinit,class=CODE,delta=2,merge=1
  1923                           	clrf	((__pbssCOMMON)+0)&07Fh
  1924  0046  01F6               	clrf	((__pbssCOMMON)+1)&07Fh
  1925  0047  01F7               	clrf	((__pbssCOMMON)+2)&07Fh
  1926  0048  01F8               	clrf	((__pbssCOMMON)+3)&07Fh
  1927  0049  01F9               	clrf	((__pbssCOMMON)+4)&07Fh
  1928  004A  01FA               psect cinit,class=CODE,delta=2,merge=1
  1929                           global end_of_initialization,__end_of__initialization
  1930                           
  1931                           ;End of C runtime variable initialization code
  1932                           
  1933                           end_of_initialization:
  1934  004B                     __end_of__initialization:
  1935  004B                     clrf status
  1936  004B  0183               ljmp _main	;jump to C main() function
  1937  004C  120A  118A  2982   psect	cstackBANK1,class=BANK1,space=1,noexec
  1938                           global __pcstackBANK1
  1939                           __pcstackBANK1:
  1940  00A0                     	global	main@lin2
  1941                           main@lin2:	; 17 bytes @ 0x0
  1942  00A0                     	ds	17
  1943  00A0                     	global	main@contPassos
  1944                           main@contPassos:	; 1 bytes @ 0x11
  1945  00B1                     	ds	1
  1946  00B1                     	global	main@aux
  1947                           main@aux:	; 1 bytes @ 0x12
  1948  00B2                     	ds	1
  1949  00B2                     	global	main@boolPause
  1950                           main@boolPause:	; 1 bytes @ 0x13
  1951  00B3                     	ds	1
  1952  00B3                     	global	main@boolStop
  1953                           main@boolStop:	; 1 bytes @ 0x14
  1954  00B4                     	ds	1
  1955  00B4                     	global	main@pauseLeft
  1956                           main@pauseLeft:	; 1 bytes @ 0x15
  1957  00B5                     	ds	1
  1958  00B5                     	global	main@pauseRight
  1959                           main@pauseRight:	; 1 bytes @ 0x16
  1960  00B6                     	ds	1
  1961  00B6                     	global	main@meAtAux
  1962                           main@meAtAux:	; 1 bytes @ 0x17
  1963  00B7                     	ds	1
  1964  00B7                     	global	main@next
  1965                           main@next:	; 1 bytes @ 0x18
  1966  00B8                     	ds	1
  1967  00B8                     	global	_main$428
  1968                           _main$428:	; 2 bytes @ 0x19
  1969  00B9                     	ds	2
  1970  00B9                     	global	_main$429
  1971                           _main$429:	; 2 bytes @ 0x1B
  1972  00BB                     	ds	2
  1973  00BB                     	global	_main$430
  1974                           _main$430:	; 2 bytes @ 0x1D
  1975  00BD                     	ds	2
  1976  00BD                     	global	_main$431
  1977                           _main$431:	; 2 bytes @ 0x1F
  1978  00BF                     	ds	2
  1979  00BF                     	global	_main$435
  1980                           _main$435:	; 2 bytes @ 0x21
  1981  00C1                     	ds	2
  1982  00C1                     	global	main@i
  1983                           main@i:	; 1 bytes @ 0x23
  1984  00C3                     	ds	1
  1985  00C3                     	global	main@j
  1986                           main@j:	; 1 bytes @ 0x24
  1987  00C4                     	ds	1
  1988  00C4                     	global	main@i_418
  1989                           main@i_418:	; 1 bytes @ 0x25
  1990  00C5                     	ds	1
  1991  00C5                     	global	main@j_419
  1992                           main@j_419:	; 1 bytes @ 0x26
  1993  00C6                     	ds	1
  1994  00C6                     	global	main@auxPasso
  1995                           main@auxPasso:	; 1 bytes @ 0x27
  1996  00C7                     	ds	1
  1997  00C7                     	global	main@vetorIn
  1998                           main@vetorIn:	; 1 bytes @ 0x28
  1999  00C8                     	ds	1
  2000  00C8                     	global	main@meAtuadores
  2001                           main@meAtuadores:	; 1 bytes @ 0x29
  2002  00C9                     	ds	1
  2003  00C9                     	global	main@num
  2004                           main@num:	; 2 bytes @ 0x2A
  2005  00CA                     	ds	2
  2006  00CA                     	global	main@ciclos
  2007                           main@ciclos:	; 2 bytes @ 0x2C
  2008  00CC                     	ds	2
  2009  00CC                     	global	main@vetorOut
  2010                           main@vetorOut:	; 1 bytes @ 0x2E
  2011  00CE                     	ds	1
  2012  00CE                     	global	main@botao
  2013                           main@botao:	; 1 bytes @ 0x2F
  2014  00CF                     	ds	1
  2015  00CF                     	global	main@estado
  2016                           main@estado:	; 1 bytes @ 0x30
  2017  00D0                     	ds	1
  2018  00D0                     	global	main@tecla
  2019                           main@tecla:	; 1 bytes @ 0x31
  2020  00D1                     	ds	1
  2021  00D1                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  2022                           global __pcstackCOMMON
  2023                           __pcstackCOMMON:
  2024  0070                     ?_fifo_alinharPrint:	; 1 bytes @ 0x0
  2025  0070                     ?_intt1_1ms:	; 1 bytes @ 0x0
  2026  0070                     ??_intt1_1ms:	; 1 bytes @ 0x0
  2027  0070                     ?_teclado_init:	; 1 bytes @ 0x0
  2028  0070                     ?_timer1_init:	; 1 bytes @ 0x0
  2029  0070                     ?_teclado_borda:	; 1 bytes @ 0x0
  2030  0070                     ?_serialIOscan:	; 1 bytes @ 0x0
  2031  0070                     ?_dispLCD_instReg:	; 1 bytes @ 0x0
  2032  0070                     ?_dispLCD_dataReg:	; 1 bytes @ 0x0
  2033  0070                     ?_dispLCD_init:	; 1 bytes @ 0x0
  2034  0070                     ?_dispLCD_clr:	; 1 bytes @ 0x0
  2035  0070                     ?_addIndicePassos:	; 1 bytes @ 0x0
  2036  0070                     ?_getIndicePassos:	; 1 bytes @ 0x0
  2037  0070                     ?_resetIndicePassos:	; 1 bytes @ 0x0
  2038  0070                     ?_resetContCiclos:	; 1 bytes @ 0x0
  2039  0070                     ?_addContCiclos:	; 1 bytes @ 0x0
  2040  0070                     ?_ler_atuador:	; 1 bytes @ 0x0
  2041  0070                     ?_alt_atuador:	; 1 bytes @ 0x0
  2042  0070                     ?_init_atuadores:	; 1 bytes @ 0x0
  2043  0070                     ?_fifo_lerPos:	; 1 bytes @ 0x0
  2044  0070                     ?_fifo_delete:	; 1 bytes @ 0x0
  2045  0070                     ?_fifo_add:	; 1 bytes @ 0x0
  2046  0070                     ?_fifo_add_tempo:	; 1 bytes @ 0x0
  2047  0070                     ?_fifo_indice:	; 1 bytes @ 0x0
  2048  0070                     ?_fifo_disponivel:	; 1 bytes @ 0x0
  2049  0070                     ?_fifo_tam:	; 1 bytes @ 0x0
  2050  0070                     ?_fifo_indicePrint_inc:	; 1 bytes @ 0x0
  2051  0070                     ?_fifo_indicePrint_dec:	; 1 bytes @ 0x0
  2052  0070                     ?_fifo_print:	; 1 bytes @ 0x0
  2053  0070                     ?_dignum_apagar:	; 1 bytes @ 0x0
  2054  0070                     ?_posAtual:	; 1 bytes @ 0x0
  2055  0070                     ?_irq:	; 1 bytes @ 0x0
  2056  0070                     ?_main:	; 1 bytes @ 0x0
  2057  0070                     ?_teclado_scan:	; 1 bytes @ 0x0
  2058  0070                     ?_serialIOload:	; 1 bytes @ 0x0
  2059  0070                     ?_serialIObyteShift:	; 1 bytes @ 0x0
  2060  0070                     	ds	4
  2061  0070                     ??_irq:	; 1 bytes @ 0x4
  2062  0074                     	ds	2
  2063  0074                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2064                           global __pcstackBANK0
  2065                           __pcstackBANK0:
  2066  0020                     ??_teclado_init:	; 1 bytes @ 0x0
  2067  0020                     ??_timer1_init:	; 1 bytes @ 0x0
  2068  0020                     ?_initSerialIO:	; 1 bytes @ 0x0
  2069  0020                     ?_set_passo:	; 1 bytes @ 0x0
  2070  0020                     ?_ler_sensor:	; 1 bytes @ 0x0
  2071  0020                     ?_delay:	; 1 bytes @ 0x0
  2072  0020                     ??_dispLCD_instReg:	; 1 bytes @ 0x0
  2073  0020                     ??_dispLCD_dataReg:	; 1 bytes @ 0x0
  2074  0020                     ??_addIndicePassos:	; 1 bytes @ 0x0
  2075  0020                     ??_getIndicePassos:	; 1 bytes @ 0x0
  2076  0020                     ??_resetIndicePassos:	; 1 bytes @ 0x0
  2077  0020                     ??_resetContCiclos:	; 1 bytes @ 0x0
  2078  0020                     ??_addContCiclos:	; 1 bytes @ 0x0
  2079  0020                     ??_ler_atuador:	; 1 bytes @ 0x0
  2080  0020                     ??_alt_atuador:	; 1 bytes @ 0x0
  2081  0020                     ??_init_atuadores:	; 1 bytes @ 0x0
  2082  0020                     ??_fifo_lerPos:	; 1 bytes @ 0x0
  2083  0020                     ?_fifo_add_ciclo:	; 1 bytes @ 0x0
  2084  0020                     ??_fifo_indice:	; 1 bytes @ 0x0
  2085  0020                     ??_fifo_disponivel:	; 1 bytes @ 0x0
  2086  0020                     ??_fifo_tam:	; 1 bytes @ 0x0
  2087  0020                     ??_fifo_indicePrint_inc:	; 1 bytes @ 0x0
  2088  0020                     ??_fifo_indicePrint_dec:	; 1 bytes @ 0x0
  2089  0020                     ??_teclado_scan:	; 1 bytes @ 0x0
  2090  0020                     ??_serialIOload:	; 1 bytes @ 0x0
  2091  0020                     ??_serialIObyteShift:	; 1 bytes @ 0x0
  2092  0020                     	global	?_getCiclos
  2093                           ?_getCiclos:	; 2 bytes @ 0x0
  2094  0020                     	global	?_getContCiclos
  2095                           ?_getContCiclos:	; 2 bytes @ 0x0
  2096  0020                     	global	?___wmul
  2097                           ?___wmul:	; 2 bytes @ 0x0
  2098  0020                     	global	?___awdiv
  2099                           ?___awdiv:	; 2 bytes @ 0x0
  2100  0020                     	global	?___awmod
  2101                           ?___awmod:	; 2 bytes @ 0x0
  2102  0020                     	global	?___lwdiv
  2103                           ?___lwdiv:	; 2 bytes @ 0x0
  2104  0020                     	global	?_statusT1
  2105                           ?_statusT1:	; 4 bytes @ 0x0
  2106  0020                     	global	?___lmul
  2107                           ?___lmul:	; 4 bytes @ 0x0
  2108  0020                     	global	fifo_lerPos@i
  2109                           fifo_lerPos@i:	; 1 bytes @ 0x0
  2110  0020                     	global	set_passo@ptr
  2111                           set_passo@ptr:	; 1 bytes @ 0x0
  2112  0020                     	global	ler_sensor@ptr
  2113                           ler_sensor@ptr:	; 1 bytes @ 0x0
  2114  0020                     	global	initSerialIO@ptrOut
  2115                           initSerialIO@ptrOut:	; 1 bytes @ 0x0
  2116  0020                     	global	delay@t
  2117                           delay@t:	; 2 bytes @ 0x0
  2118  0020                     	global	fifo_add_ciclo@ciclos
  2119                           fifo_add_ciclo@ciclos:	; 2 bytes @ 0x0
  2120  0020                     	global	___wmul@multiplier
  2121                           ___wmul@multiplier:	; 2 bytes @ 0x0
  2122  0020                     	global	___awdiv@divisor
  2123                           ___awdiv@divisor:	; 2 bytes @ 0x0
  2124  0020                     	global	___awmod@divisor
  2125                           ___awmod@divisor:	; 2 bytes @ 0x0
  2126  0020                     	global	___lwdiv@divisor
  2127                           ___lwdiv@divisor:	; 2 bytes @ 0x0
  2128  0020                     	global	___lmul@multiplier
  2129                           ___lmul@multiplier:	; 4 bytes @ 0x0
  2130  0020                     	ds	1
  2131  0020                     ??_set_passo:	; 1 bytes @ 0x1
  2132  0021                     ??_ler_sensor:	; 1 bytes @ 0x1
  2133  0021                     ??_posAtual:	; 1 bytes @ 0x1
  2134  0021                     	global	dispLCD_dataReg@d
  2135                           dispLCD_dataReg@d:	; 1 bytes @ 0x1
  2136  0021                     	global	serialIObyteShift@dataIn
  2137                           serialIObyteShift@dataIn:	; 1 bytes @ 0x1
  2138  0021                     	global	initSerialIO@length
  2139                           initSerialIO@length:	; 1 bytes @ 0x1
  2140  0021                     	ds	1
  2141  0021                     ??_initSerialIO:	; 1 bytes @ 0x2
  2142  0022                     ??_delay:	; 1 bytes @ 0x2
  2143  0022                     ??_getCiclos:	; 1 bytes @ 0x2
  2144  0022                     ??_getContCiclos:	; 1 bytes @ 0x2
  2145  0022                     ??_fifo_add_ciclo:	; 1 bytes @ 0x2
  2146  0022                     	global	dispLCD_instReg@i
  2147                           dispLCD_instReg@i:	; 1 bytes @ 0x2
  2148  0022                     	global	ler_atuador@tecla
  2149                           ler_atuador@tecla:	; 1 bytes @ 0x2
  2150  0022                     	global	alt_atuador@tecla
  2151                           alt_atuador@tecla:	; 1 bytes @ 0x2
  2152  0022                     	global	posAtual@ind
  2153                           posAtual@ind:	; 1 bytes @ 0x2
  2154  0022                     	global	serialIObyteShift@dataOut
  2155                           serialIObyteShift@dataOut:	; 1 bytes @ 0x2
  2156  0022                     	global	___wmul@multiplicand
  2157                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  2158  0022                     	global	___awdiv@dividend
  2159                           ___awdiv@dividend:	; 2 bytes @ 0x2
  2160  0022                     	global	___awmod@dividend
  2161                           ___awmod@dividend:	; 2 bytes @ 0x2
  2162  0022                     	global	___lwdiv@dividend
  2163                           ___lwdiv@dividend:	; 2 bytes @ 0x2
  2164  0022                     	ds	1
  2165  0022                     ?_dispLCD_lincol:	; 1 bytes @ 0x3
  2166  0023                     ??_dispLCD_clr:	; 1 bytes @ 0x3
  2167  0023                     	global	dispLCD_lincol@col
  2168                           dispLCD_lincol@col:	; 1 bytes @ 0x3
  2169  0023                     	global	posAtual@passo
  2170                           posAtual@passo:	; 1 bytes @ 0x3
  2171  0023                     	global	set_passo@passo
  2172                           set_passo@passo:	; 1 bytes @ 0x3
  2173  0023                     	global	ler_sensor@passo
  2174                           ler_sensor@passo:	; 1 bytes @ 0x3
  2175  0023                     	global	serialIObyteShift@dataBit
  2176                           serialIObyteShift@dataBit:	; 1 bytes @ 0x3
  2177  0023                     	global	initSerialIO@ptrIn
  2178                           initSerialIO@ptrIn:	; 1 bytes @ 0x3
  2179  0023                     	ds	1
  2180  0023                     ??_statusT1:	; 1 bytes @ 0x4
  2181  0024                     ??_serialIOscan:	; 1 bytes @ 0x4
  2182  0024                     ??_dispLCD_lincol:	; 1 bytes @ 0x4
  2183  0024                     ??_dispLCD_init:	; 1 bytes @ 0x4
  2184  0024                     ??___wmul:	; 1 bytes @ 0x4
  2185  0024                     ??___awdiv:	; 1 bytes @ 0x4
  2186  0024                     ??___awmod:	; 1 bytes @ 0x4
  2187  0024                     ??___lwdiv:	; 1 bytes @ 0x4
  2188  0024                     	global	teclado_scan@tecla
  2189                           teclado_scan@tecla:	; 1 bytes @ 0x4
  2190  0024                     	global	getCiclos@aux
  2191                           getCiclos@aux:	; 2 bytes @ 0x4
  2192  0024                     	global	___wmul@product
  2193                           ___wmul@product:	; 2 bytes @ 0x4
  2194  0024                     	global	___lmul@multiplicand
  2195                           ___lmul@multiplicand:	; 4 bytes @ 0x4
  2196  0024                     	ds	1
  2197  0024                     	global	dispLCD_lincol@lin
  2198                           dispLCD_lincol@lin:	; 1 bytes @ 0x5
  2199  0025                     	global	teclado_scan@l
  2200                           teclado_scan@l:	; 1 bytes @ 0x5
  2201  0025                     	global	___awdiv@counter
  2202                           ___awdiv@counter:	; 1 bytes @ 0x5
  2203  0025                     	global	___awmod@counter
  2204                           ___awmod@counter:	; 1 bytes @ 0x5
  2205  0025                     	global	___lwdiv@counter
  2206                           ___lwdiv@counter:	; 1 bytes @ 0x5
  2207  0025                     	ds	1
  2208  0025                     ?_dispLCD:	; 1 bytes @ 0x6
  2209  0026                     ?_dignum_conc:	; 1 bytes @ 0x6
  2210  0026                     	global	dispLCD@col
  2211                           dispLCD@col:	; 1 bytes @ 0x6
  2212  0026                     	global	dignum_conc@ptrNum
  2213                           dignum_conc@ptrNum:	; 1 bytes @ 0x6
  2214  0026                     	global	teclado_scan@c
  2215                           teclado_scan@c:	; 1 bytes @ 0x6
  2216  0026                     	global	___awdiv@sign
  2217                           ___awdiv@sign:	; 1 bytes @ 0x6
  2218  0026                     	global	___awmod@sign
  2219                           ___awmod@sign:	; 1 bytes @ 0x6
  2220  0026                     	global	___lwdiv@quotient
  2221                           ___lwdiv@quotient:	; 2 bytes @ 0x6
  2222  0026                     	ds	1
  2223  0026                     ??_teclado_borda:	; 1 bytes @ 0x7
  2224  0027                     ??_dignum_conc:	; 1 bytes @ 0x7
  2225  0027                     	global	serialIOscan@j
  2226                           serialIOscan@j:	; 1 bytes @ 0x7
  2227  0027                     	global	dispLCD@str
  2228                           dispLCD@str:	; 2 bytes @ 0x7
  2229  0027                     	global	___awdiv@quotient
  2230                           ___awdiv@quotient:	; 2 bytes @ 0x7
  2231  0027                     	ds	1
  2232  0027                     ??_dignum_apagar:	; 1 bytes @ 0x8
  2233  0028                     ??___lmul:	; 1 bytes @ 0x8
  2234  0028                     	global	dignum_apagar@ptrNum
  2235                           dignum_apagar@ptrNum:	; 1 bytes @ 0x8
  2236  0028                     	global	teclado_borda@aux
  2237                           teclado_borda@aux:	; 1 bytes @ 0x8
  2238  0028                     	global	serialIOscan@i
  2239                           serialIOscan@i:	; 1 bytes @ 0x8
  2240  0028                     	ds	1
  2241  0028                     ??_dispLCD:	; 1 bytes @ 0x9
  2242  0029                     ??_fifo_print:	; 1 bytes @ 0x9
  2243  0029                     ?_dignum_tam:	; 1 bytes @ 0x9
  2244  0029                     	global	teclado_borda@tecla
  2245                           teclado_borda@tecla:	; 1 bytes @ 0x9
  2246  0029                     	global	dignum_tam@num
  2247                           dignum_tam@num:	; 2 bytes @ 0x9
  2248  0029                     	global	___lmul@product
  2249                           ___lmul@product:	; 4 bytes @ 0x9
  2250  0029                     	ds	1
  2251  0029                     	global	dispLCD@pos
  2252                           dispLCD@pos:	; 1 bytes @ 0xA
  2253  002A                     	ds	1
  2254  002A                     ??_dignum_tam:	; 1 bytes @ 0xB
  2255  002B                     	global	dispLCD@lin
  2256                           dispLCD@lin:	; 1 bytes @ 0xB
  2257  002B                     	global	dignum_conc@dig
  2258                           dignum_conc@dig:	; 1 bytes @ 0xB
  2259  002B                     	ds	1
  2260  002B                     	global	dignum_tam@tam
  2261                           dignum_tam@tam:	; 1 bytes @ 0xC
  2262  002C                     	global	_fifo_print$183
  2263                           _fifo_print$183:	; 2 bytes @ 0xC
  2264  002C                     	ds	1
  2265  002C                     ??_fifo_alinharPrint:	; 1 bytes @ 0xD
  2266  002D                     ?_setT1:	; 1 bytes @ 0xD
  2267  002D                     ?_dispLCD_num:	; 1 bytes @ 0xD
  2268  002D                     	global	dispLCD_num@col
  2269                           dispLCD_num@col:	; 1 bytes @ 0xD
  2270  002D                     	global	setT1@c
  2271                           setT1@c:	; 4 bytes @ 0xD
  2272  002D                     	ds	1
  2273  002D                     	global	fifo_print@completar
  2274                           fifo_print@completar:	; 1 bytes @ 0xE
  2275  002E                     	global	dispLCD_num@num
  2276                           dispLCD_num@num:	; 2 bytes @ 0xE
  2277  002E                     	ds	1
  2278  002E                     	global	fifo_print@indPrint
  2279                           fifo_print@indPrint:	; 1 bytes @ 0xF
  2280  002F                     	ds	1
  2281  002F                     	global	dispLCD_num@tam
  2282                           dispLCD_num@tam:	; 1 bytes @ 0x10
  2283  0030                     	global	fifo_print@i
  2284                           fifo_print@i:	; 1 bytes @ 0x10
  2285  0030                     	global	fifo_alinharPrint@cont
  2286                           fifo_alinharPrint@cont:	; 1 bytes @ 0x10
  2287  0030                     	ds	1
  2288  0030                     ??_setT1:	; 1 bytes @ 0x11
  2289  0031                     ??_dispLCD_num:	; 1 bytes @ 0x11
  2290  0031                     	global	fifo_print@comando
  2291                           fifo_print@comando:	; 1 bytes @ 0x11
  2292  0031                     	global	fifo_alinharPrint@aux
  2293                           fifo_alinharPrint@aux:	; 1 bytes @ 0x11
  2294  0031                     	ds	1
  2295  0031                     	global	fifo_print@atraso
  2296                           fifo_print@atraso:	; 1 bytes @ 0x12
  2297  0032                     	global	fifo_alinharPrint@i
  2298                           fifo_alinharPrint@i:	; 1 bytes @ 0x12
  2299  0032                     	ds	1
  2300  0032                     ??_fifo_delete:	; 1 bytes @ 0x13
  2301  0033                     ??_fifo_add:	; 1 bytes @ 0x13
  2302  0033                     ??_fifo_add_tempo:	; 1 bytes @ 0x13
  2303  0033                     	ds	1
  2304  0033                     	global	dispLCD_num@lin
  2305                           dispLCD_num@lin:	; 1 bytes @ 0x14
  2306  0034                     	global	fifo_add@passo
  2307                           fifo_add@passo:	; 1 bytes @ 0x14
  2308  0034                     	global	fifo_add_tempo@t
  2309                           fifo_add_tempo@t:	; 1 bytes @ 0x14
  2310  0034                     	ds	1
  2311  0034                     	global	dispLCD_num@size
  2312                           dispLCD_num@size:	; 1 bytes @ 0x15
  2313  0035                     	ds	1
  2314  0035                     	global	dispLCD_num@sinal
  2315                           dispLCD_num@sinal:	; 1 bytes @ 0x16
  2316  0036                     	ds	1
  2317  0036                     	global	dispLCD_num@div
  2318                           dispLCD_num@div:	; 2 bytes @ 0x17
  2319  0037                     	ds	2
  2320  0037                     ?_printExec:	; 1 bytes @ 0x19
  2321  0039                     	global	printExec@ind
  2322                           printExec@ind:	; 1 bytes @ 0x19
  2323  0039                     	ds	1
  2324  0039                     ??_printExec:	; 1 bytes @ 0x1A
  2325  003A                     	ds	6
  2326  003A                     	global	_printExec$208
  2327                           _printExec$208:	; 2 bytes @ 0x20
  2328  0040                     	ds	2
  2329  0040                     	global	printExec@col
  2330                           printExec@col:	; 1 bytes @ 0x22
  2331  0042                     	ds	1
  2332  0042                     	global	printExec@passo
  2333                           printExec@passo:	; 1 bytes @ 0x23
  2334  0043                     	ds	1
  2335  0043                     ??_main:	; 1 bytes @ 0x24
  2336  0044                     	ds	4
  2337  0044                     ;!
  2338                           ;!Data Sizes:
  2339                           ;!    Strings     261
  2340                           ;!    Constant    0
  2341                           ;!    Data        36
  2342                           ;!    BSS         77
  2343                           ;!    Persistent  0
  2344                           ;!    Stack       0
  2345                           ;!
  2346                           ;!Auto Spaces:
  2347                           ;!    Space          Size  Autos    Used
  2348                           ;!    COMMON           14      6      12
  2349                           ;!    BANK0            80     40      66
  2350                           ;!    BANK1            80     50      69
  2351                           ;!    BANK3            96      0      62
  2352                           ;!    BANK2            96      0       0
  2353                           
  2354                           ;!
  2355                           ;!Pointer List with Targets:
  2356                           ;!
  2357                           ;!    initSerialIO@ptrOut	PTR unsigned char  size(1) Largest target is 1
  2358                           ;!		 -> main@vetorOut(BANK1[1]), 
  2359                           ;!
  2360                           ;!    initSerialIO@ptrIn	PTR unsigned char  size(1) Largest target is 1
  2361                           ;!		 -> main@vetorIn(BANK1[1]), 
  2362                           ;!
  2363                           ;!    ptrSerialOut	PTR unsigned char  size(1) Largest target is 1
  2364                           ;!		 -> NULL(NULL[0]), main@vetorOut(BANK1[1]), 
  2365                           ;!
  2366                           ;!    ptrSerialIn	PTR unsigned char  size(1) Largest target is 1
  2367                           ;!		 -> NULL(NULL[0]), main@vetorIn(BANK1[1]), 
  2368                           ;!
  2369                           ;!    ler_sensor@ptr	PTR unsigned char  size(1) Largest target is 1
  2370                           ;!		 -> main@vetorIn(BANK1[1]), 
  2371                           ;!
  2372                           ;!    set_passo@ptr	PTR unsigned char  size(1) Largest target is 1
  2373                           ;!		 -> main@vetorOut(BANK1[1]), 
  2374                           ;!
  2375                           ;!    dignum_apagar@ptrNum	PTR unsigned int  size(1) Largest target is 2
  2376                           ;!		 -> main@ciclos(BANK1[2]), main@num(BANK1[2]), 
  2377                           ;!
  2378                           ;!    dignum_conc@ptrNum	PTR unsigned int  size(1) Largest target is 2
  2379                           ;!		 -> main@ciclos(BANK1[2]), main@num(BANK1[2]), 
  2380                           ;!
  2381                           ;!    sp__fifo_adrs	PTR unsigned char  size(1) Largest target is 62
  2382                           ;!		 -> fila(BANK3[62]), 
  2383                           ;!
  2384                           ;!    dispLCD@str	PTR const unsigned char  size(2) Largest target is 17
  2385                           ;!		 -> STR_18(CODE[17]), STR_17(CODE[17]), STR_16(CODE[17]), STR_15(CODE[17]), 
  2386                           ;!		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[17]), 
  2387                           ;!		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[8]), STR_7(CODE[17]), 
  2388                           ;!		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[13]), 
  2389                           ;!		 -> STR_2(CODE[2]), STR_1(CODE[2]), 
  2390                           ;!
  2391                           
  2392                           
  2393                           ;!
  2394                           ;!Critical Paths under _main in COMMON
  2395                           ;!
  2396                           ;!    None.
  2397                           ;!
  2398                           ;!Critical Paths under _irq in COMMON
  2399                           ;!
  2400                           ;!    _irq->_intt1_1ms
  2401                           ;!
  2402                           ;!Critical Paths under _main in BANK0
  2403                           ;!
  2404                           ;!    _main->_printExec
  2405                           ;!    _teclado_borda->_teclado_scan
  2406                           ;!    _setT1->___lmul
  2407                           ;!    _serialIOscan->_serialIObyteShift
  2408                           ;!    _printExec->_dispLCD_num
  2409                           ;!    _posAtual->_fifo_lerPos
  2410                           ;!    _dispLCD_num->_dignum_tam
  2411                           ;!    _fifo_print->___awdiv
  2412                           ;!    _fifo_delete->_fifo_alinharPrint
  2413                           ;!    _fifo_add_tempo->_fifo_alinharPrint
  2414                           ;!    _fifo_add->_fifo_alinharPrint
  2415                           ;!    _fifo_alinharPrint->_dignum_tam
  2416                           ;!    _dignum_tam->___awdiv
  2417                           ;!    _dispLCD_init->_delay
  2418                           ;!    _dispLCD_clr->_dispLCD_instReg
  2419                           ;!    _dispLCD->_dispLCD_lincol
  2420                           ;!    _dispLCD_lincol->_dispLCD_instReg
  2421                           ;!    _dignum_conc->___wmul
  2422                           ;!    _dignum_apagar->___lwdiv
  2423                           ;!
  2424                           ;!Critical Paths under _irq in BANK0
  2425                           ;!
  2426                           ;!    None.
  2427                           ;!
  2428                           ;!Critical Paths under _main in BANK1
  2429                           ;!
  2430                           ;!    None.
  2431                           ;!
  2432                           ;!Critical Paths under _irq in BANK1
  2433                           ;!
  2434                           ;!    None.
  2435                           ;!
  2436                           ;!Critical Paths under _main in BANK3
  2437                           ;!
  2438                           ;!    None.
  2439                           ;!
  2440                           ;!Critical Paths under _irq in BANK3
  2441                           ;!
  2442                           ;!    None.
  2443                           ;!
  2444                           ;!Critical Paths under _main in BANK2
  2445                           ;!
  2446                           ;!    None.
  2447                           ;!
  2448                           ;!Critical Paths under _irq in BANK2
  2449                           ;!
  2450                           ;!    None.
  2451                           
  2452 ;;
  2453 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2454 ;;
  2455                           
  2456                           ;!
  2457                           ;!Call Graph Tables:
  2458                           ;!
  2459                           ;! ---------------------------------------------------------------------------------
  2460                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2461                           ;! ---------------------------------------------------------------------------------
  2462                           ;! (0) _main                                                57    57      0   40509
  2463                           ;!                                             36 BANK0      4     4      0
  2464                           ;!                                              0 BANK1     50    50      0
  2465                           ;!                             ___lmul
  2466                           ;!                      _addContCiclos
  2467                           ;!                    _addIndicePassos
  2468                           ;!                        _alt_atuador
  2469                           ;!                              _delay
  2470                           ;!                      _dignum_apagar
  2471                           ;!                        _dignum_conc
  2472                           ;!                            _dispLCD
  2473                           ;!                        _dispLCD_clr
  2474                           ;!                    _dispLCD_dataReg
  2475                           ;!                       _dispLCD_init
  2476                           ;!                     _dispLCD_lincol
  2477                           ;!                        _dispLCD_num
  2478                           ;!                           _fifo_add
  2479                           ;!                     _fifo_add_ciclo
  2480                           ;!                     _fifo_add_tempo
  2481                           ;!                        _fifo_delete
  2482                           ;!                    _fifo_disponivel
  2483                           ;!                        _fifo_indice
  2484                           ;!               _fifo_indicePrint_dec
  2485                           ;!               _fifo_indicePrint_inc
  2486                           ;!                        _fifo_lerPos
  2487                           ;!                         _fifo_print
  2488                           ;!                           _fifo_tam
  2489                           ;!                          _getCiclos
  2490                           ;!                      _getContCiclos
  2491                           ;!                    _getIndicePassos
  2492                           ;!                       _initSerialIO
  2493                           ;!                     _init_atuadores
  2494                           ;!                        _ler_atuador
  2495                           ;!                         _ler_sensor
  2496                           ;!                          _printExec
  2497                           ;!                    _resetContCiclos
  2498                           ;!                  _resetIndicePassos
  2499                           ;!                       _serialIOscan
  2500                           ;!                              _setT1
  2501                           ;!                          _set_passo
  2502                           ;!                           _statusT1
  2503                           ;!                      _teclado_borda
  2504                           ;!                       _teclado_init
  2505                           ;!                        _timer1_init
  2506                           ;! ---------------------------------------------------------------------------------
  2507                           ;! (1) _timer1_init                                          0     0      0       0
  2508                           ;! ---------------------------------------------------------------------------------
  2509                           ;! (1) _teclado_init                                         0     0      0       0
  2510                           ;! ---------------------------------------------------------------------------------
  2511                           ;! (1) _teclado_borda                                        3     3      0     340
  2512                           ;!                                              7 BANK0      3     3      0
  2513                           ;!                       _teclado_scan
  2514                           ;! ---------------------------------------------------------------------------------
  2515                           ;! (2) _teclado_scan                                         7     7      0     204
  2516                           ;!                                              0 BANK0      7     7      0
  2517                           ;! ---------------------------------------------------------------------------------
  2518                           ;! (1) _statusT1                                             4     0      4       0
  2519                           ;!                                              0 BANK0      4     0      4
  2520                           ;! ---------------------------------------------------------------------------------
  2521                           ;! (1) _set_passo                                            4     3      1     369
  2522                           ;!                                              0 BANK0      4     3      1
  2523                           ;! ---------------------------------------------------------------------------------
  2524                           ;! (1) _setT1                                                4     0      4     481
  2525                           ;!                                             13 BANK0      4     0      4
  2526                           ;!                             ___lmul (ARG)
  2527                           ;! ---------------------------------------------------------------------------------
  2528                           ;! (1) _serialIOscan                                         5     5      0     300
  2529                           ;!                                              4 BANK0      5     5      0
  2530                           ;!                  _serialIObyteShift
  2531                           ;!                       _serialIOload
  2532                           ;! ---------------------------------------------------------------------------------
  2533                           ;! (2) _serialIOload                                         0     0      0       0
  2534                           ;! ---------------------------------------------------------------------------------
  2535                           ;! (2) _serialIObyteShift                                    4     4      0     167
  2536                           ;!                                              0 BANK0      4     4      0
  2537                           ;! ---------------------------------------------------------------------------------
  2538                           ;! (1) _resetIndicePassos                                    1     1      0       0
  2539                           ;!                                              0 BANK0      1     1      0
  2540                           ;! ---------------------------------------------------------------------------------
  2541                           ;! (1) _resetContCiclos                                      0     0      0       0
  2542                           ;! ---------------------------------------------------------------------------------
  2543                           ;! (1) _printExec                                           11    10      1   10142
  2544                           ;!                                             25 BANK0     11    10      1
  2545                           ;!                         _dignum_tam
  2546                           ;!                    _dispLCD_dataReg
  2547                           ;!                     _dispLCD_lincol
  2548                           ;!                        _dispLCD_num
  2549                           ;!                           _posAtual
  2550                           ;! ---------------------------------------------------------------------------------
  2551                           ;! (2) _posAtual                                             3     3      0      99
  2552                           ;!                                              1 BANK0      3     3      0
  2553                           ;!                        _fifo_lerPos
  2554                           ;!                    _getIndicePassos
  2555                           ;! ---------------------------------------------------------------------------------
  2556                           ;! (3) _getIndicePassos                                      0     0      0       0
  2557                           ;! ---------------------------------------------------------------------------------
  2558                           ;! (3) _fifo_lerPos                                          1     1      0      31
  2559                           ;!                                              0 BANK0      1     1      0
  2560                           ;! ---------------------------------------------------------------------------------
  2561                           ;! (2) _dispLCD_num                                         12     8      4    6397
  2562                           ;!                                             13 BANK0     12     8      4
  2563                           ;!                            ___awdiv
  2564                           ;!                            ___awmod
  2565                           ;!                         _dignum_tam (ARG)
  2566                           ;!                    _dispLCD_dataReg
  2567                           ;!                     _dispLCD_lincol
  2568                           ;!                        _fifo_indice (ARG)
  2569                           ;!                           _fifo_tam (ARG)
  2570                           ;!                      _getContCiclos (ARG)
  2571                           ;!                    _getIndicePassos (ARG)
  2572                           ;! ---------------------------------------------------------------------------------
  2573                           ;! (1) _ler_sensor                                           4     3      1     369
  2574                           ;!                                              0 BANK0      4     3      1
  2575                           ;! ---------------------------------------------------------------------------------
  2576                           ;! (1) _ler_atuador                                          3     3      0      31
  2577                           ;!                                              0 BANK0      3     3      0
  2578                           ;! ---------------------------------------------------------------------------------
  2579                           ;! (1) _init_atuadores                                       0     0      0       0
  2580                           ;! ---------------------------------------------------------------------------------
  2581                           ;! (1) _initSerialIO                                         4     2      2     309
  2582                           ;!                                              0 BANK0      4     2      2
  2583                           ;! ---------------------------------------------------------------------------------
  2584                           ;! (1) _getContCiclos                                        2     0      2       0
  2585                           ;!                                              0 BANK0      2     0      2
  2586                           ;! ---------------------------------------------------------------------------------
  2587                           ;! (1) _getCiclos                                            6     4      2      40
  2588                           ;!                                              0 BANK0      6     4      2
  2589                           ;! ---------------------------------------------------------------------------------
  2590                           ;! (1) _fifo_tam                                             0     0      0       0
  2591                           ;! ---------------------------------------------------------------------------------
  2592                           ;! (1) _fifo_print                                          10    10      0    4180
  2593                           ;!                                              9 BANK0     10    10      0
  2594                           ;!                            ___awdiv
  2595                           ;!                            ___awmod
  2596                           ;!                    _dispLCD_dataReg
  2597                           ;!                     _dispLCD_lincol
  2598                           ;! ---------------------------------------------------------------------------------
  2599                           ;! (3) ___awmod                                              7     3      4     973
  2600                           ;!                                              0 BANK0      7     3      4
  2601                           ;! ---------------------------------------------------------------------------------
  2602                           ;! (1) _fifo_indicePrint_inc                                 2     2      0       0
  2603                           ;!                                              0 BANK0      2     2      0
  2604                           ;! ---------------------------------------------------------------------------------
  2605                           ;! (1) _fifo_indicePrint_dec                                 0     0      0       0
  2606                           ;! ---------------------------------------------------------------------------------
  2607                           ;! (1) _fifo_indice                                          0     0      0       0
  2608                           ;! ---------------------------------------------------------------------------------
  2609                           ;! (1) _fifo_disponivel                                      0     0      0       0
  2610                           ;! ---------------------------------------------------------------------------------
  2611                           ;! (1) _fifo_delete                                          0     0      0    2225
  2612                           ;!                        _alt_atuador
  2613                           ;!                  _fifo_alinharPrint
  2614                           ;! ---------------------------------------------------------------------------------
  2615                           ;! (2) _alt_atuador                                          3     3      0      31
  2616                           ;!                                              0 BANK0      3     3      0
  2617                           ;! ---------------------------------------------------------------------------------
  2618                           ;! (1) _fifo_add_tempo                                       2     2      0    2256
  2619                           ;!                                             19 BANK0      2     2      0
  2620                           ;!                  _fifo_alinharPrint
  2621                           ;! ---------------------------------------------------------------------------------
  2622                           ;! (1) _fifo_add_ciclo                                       3     1      2     152
  2623                           ;!                                              0 BANK0      3     1      2
  2624                           ;! ---------------------------------------------------------------------------------
  2625                           ;! (1) _fifo_add                                             2     2      0    2256
  2626                           ;!                                             19 BANK0      2     2      0
  2627                           ;!                  _fifo_alinharPrint
  2628                           ;! ---------------------------------------------------------------------------------
  2629                           ;! (2) _fifo_alinharPrint                                    6     6      0    2194
  2630                           ;!                                             13 BANK0      6     6      0
  2631                           ;!                         _dignum_tam
  2632                           ;! ---------------------------------------------------------------------------------
  2633                           ;! (2) _dignum_tam                                           4     2      2    1897
  2634                           ;!                                              9 BANK0      4     2      2
  2635                           ;!                            ___awdiv
  2636                           ;! ---------------------------------------------------------------------------------
  2637                           ;! (3) ___awdiv                                              9     5      4    1525
  2638                           ;!                                              0 BANK0      9     5      4
  2639                           ;! ---------------------------------------------------------------------------------
  2640                           ;! (1) _dispLCD_init                                         0     0      0     552
  2641                           ;!                              _delay
  2642                           ;!                    _dispLCD_instReg
  2643                           ;! ---------------------------------------------------------------------------------
  2644                           ;! (2) _delay                                                4     2      2     304
  2645                           ;!                                              0 BANK0      4     2      2
  2646                           ;! ---------------------------------------------------------------------------------
  2647                           ;! (1) _dispLCD_clr                                          0     0      0     248
  2648                           ;!                    _dispLCD_instReg
  2649                           ;! ---------------------------------------------------------------------------------
  2650                           ;! (1) _dispLCD                                              6     3      3    4496
  2651                           ;!                                              6 BANK0      6     3      3
  2652                           ;!                    _dispLCD_dataReg
  2653                           ;!                     _dispLCD_lincol
  2654                           ;! ---------------------------------------------------------------------------------
  2655                           ;! (3) _dispLCD_lincol                                       3     2      1    1030
  2656                           ;!                                              3 BANK0      3     2      1
  2657                           ;!                    _dispLCD_instReg
  2658                           ;! ---------------------------------------------------------------------------------
  2659                           ;! (4) _dispLCD_instReg                                      3     3      0     248
  2660                           ;!                                              0 BANK0      3     3      0
  2661                           ;! ---------------------------------------------------------------------------------
  2662                           ;! (3) _dispLCD_dataReg                                      2     2      0      62
  2663                           ;!                                              0 BANK0      2     2      0
  2664                           ;! ---------------------------------------------------------------------------------
  2665                           ;! (1) _dignum_conc                                          6     5      1     589
  2666                           ;!                                              6 BANK0      6     5      1
  2667                           ;!                             ___wmul
  2668                           ;! ---------------------------------------------------------------------------------
  2669                           ;! (2) ___wmul                                               6     2      4     316
  2670                           ;!                                              0 BANK0      6     2      4
  2671                           ;! ---------------------------------------------------------------------------------
  2672                           ;! (1) _dignum_apagar                                        1     1      0     555
  2673                           ;!                                              8 BANK0      1     1      0
  2674                           ;!                            ___lwdiv
  2675                           ;! ---------------------------------------------------------------------------------
  2676                           ;! (2) ___lwdiv                                              8     4      4     421
  2677                           ;!                                              0 BANK0      8     4      4
  2678                           ;! ---------------------------------------------------------------------------------
  2679                           ;! (1) _addIndicePassos                                      1     1      0       0
  2680                           ;!                                              0 BANK0      1     1      0
  2681                           ;! ---------------------------------------------------------------------------------
  2682                           ;! (1) _addContCiclos                                        0     0      0       0
  2683                           ;! ---------------------------------------------------------------------------------
  2684                           ;! (1) ___lmul                                              13     5      8     316
  2685                           ;!                                              0 BANK0     13     5      8
  2686                           ;! ---------------------------------------------------------------------------------
  2687                           ;! Estimated maximum stack depth 4
  2688                           ;! ---------------------------------------------------------------------------------
  2689                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2690                           ;! ---------------------------------------------------------------------------------
  2691                           ;! (5) _irq                                                  2     2      0       0
  2692                           ;!                                              4 COMMON     2     2      0
  2693                           ;!                          _intt1_1ms
  2694                           ;! ---------------------------------------------------------------------------------
  2695                           ;! (6) _intt1_1ms                                            4     4      0       0
  2696                           ;!                                              0 COMMON     4     4      0
  2697                           ;! ---------------------------------------------------------------------------------
  2698                           ;! Estimated maximum stack depth 6
  2699                           ;! ---------------------------------------------------------------------------------
  2700                           ;!
  2701                           ;! Call Graph Graphs:
  2702                           ;!
  2703                           ;! _main (ROOT)
  2704                           ;!   ___lmul
  2705                           ;!   _addContCiclos
  2706                           ;!   _addIndicePassos
  2707                           ;!   _alt_atuador
  2708                           ;!   _delay
  2709                           ;!   _dignum_apagar
  2710                           ;!     ___lwdiv
  2711                           ;!   _dignum_conc
  2712                           ;!     ___wmul
  2713                           ;!   _dispLCD
  2714                           ;!     _dispLCD_dataReg
  2715                           ;!     _dispLCD_lincol
  2716                           ;!       _dispLCD_instReg
  2717                           ;!   _dispLCD_clr
  2718                           ;!     _dispLCD_instReg
  2719                           ;!   _dispLCD_dataReg
  2720                           ;!   _dispLCD_init
  2721                           ;!     _delay
  2722                           ;!     _dispLCD_instReg
  2723                           ;!   _dispLCD_lincol
  2724                           ;!     _dispLCD_instReg
  2725                           ;!   _dispLCD_num
  2726                           ;!     ___awdiv
  2727                           ;!     ___awmod
  2728                           ;!     _dignum_tam (ARG)
  2729                           ;!       ___awdiv
  2730                           ;!     _dispLCD_dataReg (ARG)
  2731                           ;!     _dispLCD_lincol (ARG)
  2732                           ;!       _dispLCD_instReg
  2733                           ;!     _fifo_indice (ARG)
  2734                           ;!     _fifo_tam (ARG)
  2735                           ;!     _getContCiclos (ARG)
  2736                           ;!     _getIndicePassos (ARG)
  2737                           ;!   _fifo_add
  2738                           ;!     _fifo_alinharPrint
  2739                           ;!       _dignum_tam
  2740                           ;!         ___awdiv
  2741                           ;!   _fifo_add_ciclo
  2742                           ;!   _fifo_add_tempo
  2743                           ;!     _fifo_alinharPrint
  2744                           ;!       _dignum_tam
  2745                           ;!         ___awdiv
  2746                           ;!   _fifo_delete
  2747                           ;!     _alt_atuador
  2748                           ;!     _fifo_alinharPrint
  2749                           ;!       _dignum_tam
  2750                           ;!         ___awdiv
  2751                           ;!   _fifo_disponivel
  2752                           ;!   _fifo_indice
  2753                           ;!   _fifo_indicePrint_dec
  2754                           ;!   _fifo_indicePrint_inc
  2755                           ;!   _fifo_lerPos
  2756                           ;!   _fifo_print
  2757                           ;!     ___awdiv
  2758                           ;!     ___awmod
  2759                           ;!     _dispLCD_dataReg
  2760                           ;!     _dispLCD_lincol
  2761                           ;!       _dispLCD_instReg
  2762                           ;!   _fifo_tam
  2763                           ;!   _getCiclos
  2764                           ;!   _getContCiclos
  2765                           ;!   _getIndicePassos
  2766                           ;!   _initSerialIO
  2767                           ;!   _init_atuadores
  2768                           ;!   _ler_atuador
  2769                           ;!   _ler_sensor
  2770                           ;!   _printExec
  2771                           ;!     _dignum_tam
  2772                           ;!       ___awdiv
  2773                           ;!     _dispLCD_dataReg
  2774                           ;!     _dispLCD_lincol
  2775                           ;!       _dispLCD_instReg
  2776                           ;!     _dispLCD_num
  2777                           ;!       ___awdiv
  2778                           ;!       ___awmod
  2779                           ;!       _dignum_tam (ARG)
  2780                           ;!         ___awdiv
  2781                           ;!       _dispLCD_dataReg (ARG)
  2782                           ;!       _dispLCD_lincol (ARG)
  2783                           ;!         _dispLCD_instReg
  2784                           ;!       _fifo_indice (ARG)
  2785                           ;!       _fifo_tam (ARG)
  2786                           ;!       _getContCiclos (ARG)
  2787                           ;!       _getIndicePassos (ARG)
  2788                           ;!     _posAtual
  2789                           ;!       _fifo_lerPos
  2790                           ;!       _getIndicePassos
  2791                           ;!   _resetContCiclos
  2792                           ;!   _resetIndicePassos
  2793                           ;!   _serialIOscan
  2794                           ;!     _serialIObyteShift
  2795                           ;!     _serialIOload
  2796                           ;!   _setT1
  2797                           ;!     ___lmul (ARG)
  2798                           ;!   _set_passo
  2799                           ;!   _statusT1
  2800                           ;!   _teclado_borda
  2801                           ;!     _teclado_scan
  2802                           ;!   _teclado_init
  2803                           ;!   _timer1_init
  2804                           ;!
  2805                           ;! _irq (ROOT)
  2806                           ;!   _intt1_1ms
  2807                           ;!
  2808                           
  2809                           ;! Address spaces:
  2810                           
  2811                           ;!Name               Size   Autos  Total    Cost      Usage
  2812                           ;!BANK3               60      0      3E       9       64.6%
  2813                           ;!BITBANK3            60      0       0       8        0.0%
  2814                           ;!SFR3                 0      0       0       4        0.0%
  2815                           ;!BITSFR3              0      0       0       4        0.0%
  2816                           ;!BANK2               60      0       0      11        0.0%
  2817                           ;!BITBANK2            60      0       0      10        0.0%
  2818                           ;!SFR2                 0      0       0       5        0.0%
  2819                           ;!BITSFR2              0      0       0       5        0.0%
  2820                           ;!BANK1               50     32      45       7       86.3%
  2821                           ;!BITBANK1            50      0       0       6        0.0%
  2822                           ;!SFR1                 0      0       0       2        0.0%
  2823                           ;!BITSFR1              0      0       0       2        0.0%
  2824                           ;!BANK0               50     28      42       5       82.5%
  2825                           ;!BITBANK0            50      0       0       4        0.0%
  2826                           ;!SFR0                 0      0       0       1        0.0%
  2827                           ;!BITSFR0              0      0       0       1        0.0%
  2828                           ;!COMMON               E      6       C       1       85.7%
  2829                           ;!BITCOMMON            E      0       0       0        0.0%
  2830                           ;!CODE                 0      0       0       0        0.0%
  2831                           ;!DATA                 0      0      D1      12        0.0%
  2832                           ;!ABS                  0      0      D1       3        0.0%
  2833                           ;!NULL                 0      0       0       0        0.0%
  2834                           ;!STACK                0      0       0       2        0.0%
  2835                           ;!EEDATA             100      0       0       0        0.0%
  2836                           
  2837                           	global	_main
  2838                           
  2839 ;; *************** function _main *****************
  2840 ;; Defined at:
  2841 ;;		line 45 in file "main.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;		None
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;  j               1   38[BANK1 ] unsigned char 
  2846 ;;  j               1   36[BANK1 ] unsigned char 
  2847 ;;  i               1   37[BANK1 ] unsigned char 
  2848 ;;  i               1   35[BANK1 ] unsigned char 
  2849 ;;  lin2           17    0[BANK1 ] unsigned char [17]
  2850 ;;  ciclos          2   44[BANK1 ] unsigned int 
  2851 ;;  num             2   42[BANK1 ] unsigned int 
  2852 ;;  texto           2    0        PTR unsigned char 
  2853 ;;  tecla           1   49[BANK1 ] unsigned char 
  2854 ;;  estado          1   48[BANK1 ] unsigned char 
  2855 ;;  botao           1   47[BANK1 ] unsigned char 
  2856 ;;  vetorOut        1   46[BANK1 ] unsigned char [1]
  2857 ;;  meAtuadores     1   41[BANK1 ] unsigned char 
  2858 ;;  vetorIn         1   40[BANK1 ] unsigned char [1]
  2859 ;;  auxPasso        1   39[BANK1 ] unsigned char 
  2860 ;;  next            1   24[BANK1 ] unsigned char 
  2861 ;;  meAtAux         1   23[BANK1 ] unsigned char 
  2862 ;;  pauseRight      1   22[BANK1 ] unsigned char 
  2863 ;;  pauseLeft       1   21[BANK1 ] unsigned char 
  2864 ;;  boolStop        1   20[BANK1 ] unsigned char 
  2865 ;;  boolPause       1   19[BANK1 ] unsigned char 
  2866 ;;  aux             1   18[BANK1 ] unsigned char 
  2867 ;;  contPassos      1   17[BANK1 ] unsigned char 
  2868 ;;  atuador         1    0        unsigned char 
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  1    wreg      void 
  2871 ;; Registers used:
  2872 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2873 ;; Tracked objects:
  2874 ;;		On entry : B00/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2878 ;;      Params:         0       0       0       0       0
  2879 ;;      Locals:         0       0      50       0       0
  2880 ;;      Temps:          0       4       0       0       0
  2881 ;;      Totals:         0       4      50       0       0
  2882 ;;Total ram usage:       54 bytes
  2883 ;; Hardware stack levels required when called:    6
  2884 ;; This function calls:
  2885 ;;		___lmul
  2886 ;;		_addContCiclos
  2887 ;;		_addIndicePassos
  2888 ;;		_alt_atuador
  2889 ;;		_delay
  2890 ;;		_dignum_apagar
  2891 ;;		_dignum_conc
  2892 ;;		_dispLCD
  2893 ;;		_dispLCD_clr
  2894 ;;		_dispLCD_dataReg
  2895 ;;		_dispLCD_init
  2896 ;;		_dispLCD_lincol
  2897 ;;		_dispLCD_num
  2898 ;;		_fifo_add
  2899 ;;		_fifo_add_ciclo
  2900 ;;		_fifo_add_tempo
  2901 ;;		_fifo_delete
  2902 ;;		_fifo_disponivel
  2903 ;;		_fifo_indice
  2904 ;;		_fifo_indicePrint_dec
  2905 ;;		_fifo_indicePrint_inc
  2906 ;;		_fifo_lerPos
  2907 ;;		_fifo_print
  2908 ;;		_fifo_tam
  2909 ;;		_getCiclos
  2910 ;;		_getContCiclos
  2911 ;;		_getIndicePassos
  2912 ;;		_initSerialIO
  2913 ;;		_init_atuadores
  2914 ;;		_ler_atuador
  2915 ;;		_ler_sensor
  2916 ;;		_printExec
  2917 ;;		_resetContCiclos
  2918 ;;		_resetIndicePassos
  2919 ;;		_serialIOscan
  2920 ;;		_setT1
  2921 ;;		_set_passo
  2922 ;;		_statusT1
  2923 ;;		_teclado_borda
  2924 ;;		_teclado_init
  2925 ;;		_timer1_init
  2926 ;; This function is called by:
  2927 ;;		Startup code after reset
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  2931                           	file	"main.c"
  2932                           	line	45
  2933                           global __pmaintext
  2934                           __pmaintext:	;psect for function _main
  2935  0182                     psect	maintext
  2936                           	file	"main.c"
  2937                           	line	45
  2938                           	global	__size_of_main
  2939                           	__size_of_main	equ	__end_of_main-_main
  2940  0E7B                     	
  2941                           _main:	
  2942  0182                     ;incstack = 0
  2943                           	opt	stack 2
  2944                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2945                           	line	47
  2946                           	
  2947                           l5071:	
  2948  0182                     ;main.c: 47:     dispLCD_init();
  2949                           	fcall	_dispLCD_init
  2950  0182  160A  118A  26C5  120A  118A  	line	48
  2951                           ;main.c: 48:     teclado_init();
  2952                           	fcall	_teclado_init
  2953  0187  160A  118A  23F8  120A  118A  	line	49
  2954                           ;main.c: 49:     timer1_init();
  2955                           	fcall	_timer1_init
  2956  018C  160A  118A  2461  120A  118A  	line	52
  2957                           	
  2958                           l5073:	
  2959  0191                     ;main.c: 51:     char *texto;;main.c: 52:     char tecla = 0;
  2960                           	bsf	status, 5	;RP0=1, select bank1
  2961  0191  1683               	bcf	status, 6	;RP1=0, select bank1
  2962  0192  1303               	clrf	(main@tecla)^080h
  2963  0193  01D1               	line	53
  2964                           	
  2965                           l5075:	
  2966  0194                     ;main.c: 53:     char estado = 0;
  2967                           	clrf	(main@estado)^080h
  2968  0194  01D0               	line	55
  2969                           	
  2970                           l5077:	
  2971  0195                     ;main.c: 54:     char atuador;;main.c: 55:     char lin2[17] = "                ";
  2972                           	movlw	(main@lin2)&0ffh
  2973  0195  30A0               	movwf	fsr0
  2974  0196  0084               	movlw	low(main@F1358)
  2975  0197  30D2               	bcf	status, 5	;RP0=0, select bank0
  2976  0198  1283               	bcf	status, 6	;RP1=0, select bank0
  2977  0199  1303               	movwf	(??_main+0)+0
  2978  019A  00C4               	movf	fsr0,w
  2979  019B  0804               	movwf	((??_main+0)+0+1)
  2980  019C  00C5               	movlw	17
  2981  019D  3011               	movwf	((??_main+0)+0+2)
  2982  019E  00C6               u4200:
  2983  019F                     	movf	(??_main+0)+0,w
  2984  019F  0844               	movwf	fsr0
  2985  01A0  0084               	bcf	status, 7	;select IRP bank1
  2986  01A1  1383               	
  2987                           	movf	indf,w
  2988  01A2  0800               	movwf	((??_main+0)+0+3)
  2989  01A3  00C7               	incf	(??_main+0)+0,f
  2990  01A4  0AC4               	movf	((??_main+0)+0+1),w
  2991  01A5  0845               	movwf	fsr0
  2992  01A6  0084               	
  2993                           	movf	((??_main+0)+0+3),w
  2994  01A7  0847               	movwf	indf
  2995  01A8  0080               	incf	((??_main+0)+0+1),f
  2996  01A9  0AC5               	decfsz	((??_main+0)+0+2),f
  2997  01AA  0BC6               	goto	u4200
  2998  01AB  299F               	
  2999                           	line	56
  3000                           	
  3001                           l5079:	
  3002  01AC                     ;main.c: 56:     char contPassos = 0;
  3003                           	bsf	status, 5	;RP0=1, select bank1
  3004  01AC  1683               	bcf	status, 6	;RP1=0, select bank1
  3005  01AD  1303               	clrf	(main@contPassos)^080h
  3006  01AE  01B1               	line	57
  3007                           	
  3008                           l5081:	
  3009  01AF                     ;main.c: 57:     char vetorIn[1] = { 0 };
  3010                           	movf	(main@F1361)^080h,w
  3011  01AF  0864               	bcf	status, 5	;RP0=0, select bank0
  3012  01B0  1283               	bcf	status, 6	;RP1=0, select bank0
  3013  01B1  1303               	movwf	(??_main+0)+0
  3014  01B2  00C4               	movf	(??_main+0)+0,w
  3015  01B3  0844               	bsf	status, 5	;RP0=1, select bank1
  3016  01B4  1683               	bcf	status, 6	;RP1=0, select bank1
  3017  01B5  1303               	movwf	(main@vetorIn)^080h
  3018  01B6  00C8               	line	58
  3019                           	
  3020                           l5083:	
  3021  01B7                     ;main.c: 58:     char vetorOut[1] = { 0 };
  3022                           	movf	(main@F1363)^080h,w
  3023  01B7  0863               	bcf	status, 5	;RP0=0, select bank0
  3024  01B8  1283               	bcf	status, 6	;RP1=0, select bank0
  3025  01B9  1303               	movwf	(??_main+0)+0
  3026  01BA  00C4               	movf	(??_main+0)+0,w
  3027  01BB  0844               	bsf	status, 5	;RP0=1, select bank1
  3028  01BC  1683               	bcf	status, 6	;RP1=0, select bank1
  3029  01BD  1303               	movwf	(main@vetorOut)^080h
  3030  01BE  00CE               	line	59
  3031                           	
  3032                           l5085:	
  3033  01BF                     ;main.c: 59:     initSerialIO( vetorIn, vetorOut, 1 );
  3034                           	movlw	(low(main@vetorOut|((0x0)<<8)))&0ffh
  3035  01BF  30CE               	bcf	status, 5	;RP0=0, select bank0
  3036  01C0  1283               	bcf	status, 6	;RP1=0, select bank0
  3037  01C1  1303               	movwf	(??_main+0)+0
  3038  01C2  00C4               	movf	(??_main+0)+0,w
  3039  01C3  0844               	movwf	(initSerialIO@ptrOut)
  3040  01C4  00A0               	clrf	(initSerialIO@length)
  3041  01C5  01A1               	incf	(initSerialIO@length),f
  3042  01C6  0AA1               	movlw	(low(main@vetorIn|((0x0)<<8)))&0ffh
  3043  01C7  30C8               	fcall	_initSerialIO
  3044  01C8  160A  118A  2756  120A  118A  	line	60
  3045                           	
  3046                           l5087:	
  3047  01CD                     ;main.c: 60:     char meAtuadores = -1;
  3048                           	movlw	low(0FFh)
  3049  01CD  30FF               	bcf	status, 5	;RP0=0, select bank0
  3050  01CE  1283               	bcf	status, 6	;RP1=0, select bank0
  3051  01CF  1303               	movwf	(??_main+0)+0
  3052  01D0  00C4               	movf	(??_main+0)+0,w
  3053  01D1  0844               	bsf	status, 5	;RP0=1, select bank1
  3054  01D2  1683               	bcf	status, 6	;RP1=0, select bank1
  3055  01D3  1303               	movwf	(main@meAtuadores)^080h
  3056  01D4  00C9               	line	61
  3057                           	
  3058                           l5089:	
  3059  01D5                     ;main.c: 61:     char auxPasso = 0;
  3060                           	clrf	(main@auxPasso)^080h
  3061  01D5  01C7               	line	62
  3062                           	
  3063                           l5091:	
  3064  01D6                     ;main.c: 62:     char aux = 2;
  3065                           	movlw	low(02h)
  3066  01D6  3002               	bcf	status, 5	;RP0=0, select bank0
  3067  01D7  1283               	bcf	status, 6	;RP1=0, select bank0
  3068  01D8  1303               	movwf	(??_main+0)+0
  3069  01D9  00C4               	movf	(??_main+0)+0,w
  3070  01DA  0844               	bsf	status, 5	;RP0=1, select bank1
  3071  01DB  1683               	bcf	status, 6	;RP1=0, select bank1
  3072  01DC  1303               	movwf	(main@aux)^080h
  3073  01DD  00B2               	line	63
  3074                           	
  3075                           l5093:	
  3076  01DE                     ;main.c: 63:     unsigned int num = 0;
  3077                           	clrf	(main@num)^080h
  3078  01DE  01CA               	clrf	(main@num+1)^080h
  3079  01DF  01CB               	line	64
  3080                           	
  3081                           l5095:	
  3082  01E0                     ;main.c: 64:     unsigned int ciclos = 0;
  3083                           	clrf	(main@ciclos)^080h
  3084  01E0  01CC               	clrf	(main@ciclos+1)^080h
  3085  01E1  01CD               	line	65
  3086                           	
  3087                           l5097:	
  3088  01E2                     ;main.c: 65:     char botao = 0;
  3089                           	clrf	(main@botao)^080h
  3090  01E2  01CF               	line	70
  3091                           	
  3092                           l5099:	
  3093  01E3                     ;main.c: 70:     char boolPause = 0;
  3094                           	clrf	(main@boolPause)^080h
  3095  01E3  01B3               	line	72
  3096                           	
  3097                           l5101:	
  3098  01E4                     ;main.c: 72:     char boolStop = 0;
  3099                           	clrf	(main@boolStop)^080h
  3100  01E4  01B4               	line	73
  3101                           	
  3102                           l5103:	
  3103  01E5                     ;main.c: 73:     char pauseLeft = 0;
  3104                           	clrf	(main@pauseLeft)^080h
  3105  01E5  01B5               	line	74
  3106                           	
  3107                           l5105:	
  3108  01E6                     ;main.c: 74:     char pauseRight = 0;
  3109                           	clrf	(main@pauseRight)^080h
  3110  01E6  01B6               	line	75
  3111                           	
  3112                           l5107:	
  3113  01E7                     ;main.c: 75:     char meAtAux = 0;
  3114                           	clrf	(main@meAtAux)^080h
  3115  01E7  01B7               	line	76
  3116                           	
  3117                           l5109:	
  3118  01E8                     ;main.c: 76:     char next = 0;
  3119                           	clrf	(main@next)^080h
  3120  01E8  01B8               	goto	l5435
  3121  01E9  29EA               	line	78
  3122                           ;main.c: 78:     while(1)
  3123                           	
  3124                           l356:	
  3125  01EA                     	line	80
  3126                           ;main.c: 79:     {;main.c: 80:          switch(estado)
  3127                           	goto	l5435
  3128  01EA  120A  158A  2E21   	line	82
  3129                           ;main.c: 81:         {;main.c: 82:              case 0:
  3130                           	
  3131                           l358:	
  3132  01ED                     	line	83
  3133                           	
  3134                           l5111:	
  3135  01ED                     ;main.c: 83:                             for(char i = 0; i <= 1; i++)
  3136                           	bsf	status, 5	;RP0=1, select bank1
  3137  01ED  1683               	bcf	status, 6	;RP1=0, select bank1
  3138  01EE  1303               	clrf	(main@i)^080h
  3139  01EF  01C3               	
  3140                           l5113:	
  3141  01F0                     	movlw	low(02h)
  3142  01F0  3002               	subwf	(main@i)^080h,w
  3143  01F1  0243               	skipc
  3144  01F2  1C03               	goto	u4211
  3145  01F3  29F5               	goto	u4210
  3146  01F4  29F6               u4211:
  3147  01F5                     	goto	l5117
  3148  01F5  29F8               u4210:
  3149  01F6                     	goto	l5135
  3150  01F6  2A3C               	
  3151                           l5115:	
  3152  01F7                     	goto	l5135
  3153  01F7  2A3C               	
  3154                           l359:	
  3155  01F8                     	line	85
  3156                           	
  3157                           l5117:	
  3158  01F8                     ;main.c: 84:                             {;main.c: 85:                                 f
                                 or(char j = 0; j <= 15; j++)
  3159                           	clrf	(main@j)^080h
  3160  01F8  01C4               	
  3161                           l5119:	
  3162  01F9                     	movlw	low(010h)
  3163  01F9  3010               	subwf	(main@j)^080h,w
  3164  01FA  0244               	skipc
  3165  01FB  1C03               	goto	u4221
  3166  01FC  29FE               	goto	u4220
  3167  01FD  29FF               u4221:
  3168  01FE                     	goto	l5123
  3169  01FE  2A01               u4220:
  3170  01FF                     	goto	l5131
  3171  01FF  2A2D               	
  3172                           l5121:	
  3173  0200                     	goto	l5131
  3174  0200  2A2D               	
  3175                           l361:	
  3176  0201                     	line	87
  3177                           	
  3178                           l5123:	
  3179  0201                     ;main.c: 86:                                 {;main.c: 87:                              
                                        dispLCD(i, j, "\377");
  3180                           	movf	(main@j)^080h,w
  3181  0201  0844               	bcf	status, 5	;RP0=0, select bank0
  3182  0202  1283               	bcf	status, 6	;RP1=0, select bank0
  3183  0203  1303               	movwf	(??_main+0)+0
  3184  0204  00C4               	movf	(??_main+0)+0,w
  3185  0205  0844               	movwf	(dispLCD@col)
  3186  0206  00A6               	movlw	low(((STR_1)|8000h))
  3187  0207  3003               	movwf	(dispLCD@str)
  3188  0208  00A7               	movlw	high(((STR_1)|8000h))
  3189  0209  3091               	movwf	((dispLCD@str))+1
  3190  020A  00A8               	bsf	status, 5	;RP0=1, select bank1
  3191  020B  1683               	bcf	status, 6	;RP1=0, select bank1
  3192  020C  1303               	movf	(main@i)^080h,w
  3193  020D  0843               	fcall	_dispLCD
  3194  020E  120A  118A  2783  120A  118A  	line	88
  3195                           	
  3196                           l5125:	
  3197  0213                     ;main.c: 88:                                     delay(10);
  3198                           	movlw	0Ah
  3199  0213  300A               	bcf	status, 5	;RP0=0, select bank0
  3200  0214  1283               	bcf	status, 6	;RP1=0, select bank0
  3201  0215  1303               	movwf	(delay@t)
  3202  0216  00A0               	movlw	0
  3203  0217  3000               	movwf	((delay@t))+1
  3204  0218  00A1               	fcall	_delay
  3205  0219  160A  118A  2513  120A  118A  	line	89
  3206                           	
  3207                           l5127:	
  3208  021E                     ;main.c: 89:                                 }
  3209                           	movlw	low(01h)
  3210  021E  3001               	bcf	status, 5	;RP0=0, select bank0
  3211  021F  1283               	bcf	status, 6	;RP1=0, select bank0
  3212  0220  1303               	movwf	(??_main+0)+0
  3213  0221  00C4               	movf	(??_main+0)+0,w
  3214  0222  0844               	bsf	status, 5	;RP0=1, select bank1
  3215  0223  1683               	bcf	status, 6	;RP1=0, select bank1
  3216  0224  1303               	addwf	(main@j)^080h,f
  3217  0225  07C4               	
  3218                           l5129:	
  3219  0226                     	movlw	low(010h)
  3220  0226  3010               	subwf	(main@j)^080h,w
  3221  0227  0244               	skipc
  3222  0228  1C03               	goto	u4231
  3223  0229  2A2B               	goto	u4230
  3224  022A  2A2C               u4231:
  3225  022B                     	goto	l5123
  3226  022B  2A01               u4230:
  3227  022C                     	goto	l5131
  3228  022C  2A2D               	
  3229                           l362:	
  3230  022D                     	line	90
  3231                           	
  3232                           l5131:	
  3233  022D                     ;main.c: 90:                             }
  3234                           	movlw	low(01h)
  3235  022D  3001               	bcf	status, 5	;RP0=0, select bank0
  3236  022E  1283               	bcf	status, 6	;RP1=0, select bank0
  3237  022F  1303               	movwf	(??_main+0)+0
  3238  0230  00C4               	movf	(??_main+0)+0,w
  3239  0231  0844               	bsf	status, 5	;RP0=1, select bank1
  3240  0232  1683               	bcf	status, 6	;RP1=0, select bank1
  3241  0233  1303               	addwf	(main@i)^080h,f
  3242  0234  07C3               	
  3243                           l5133:	
  3244  0235                     	movlw	low(02h)
  3245  0235  3002               	subwf	(main@i)^080h,w
  3246  0236  0243               	skipc
  3247  0237  1C03               	goto	u4241
  3248  0238  2A3A               	goto	u4240
  3249  0239  2A3B               u4241:
  3250  023A                     	goto	l5117
  3251  023A  29F8               u4240:
  3252  023B                     	goto	l5135
  3253  023B  2A3C               	
  3254                           l360:	
  3255  023C                     	line	92
  3256                           	
  3257                           l5135:	
  3258  023C                     ;main.c: 92:                             for(char i = 0; i <= 1; i++)
  3259                           	clrf	(main@i_418)^080h
  3260  023C  01C5               	
  3261                           l5137:	
  3262  023D                     	movlw	low(02h)
  3263  023D  3002               	subwf	(main@i_418)^080h,w
  3264  023E  0245               	skipc
  3265  023F  1C03               	goto	u4251
  3266  0240  2A42               	goto	u4250
  3267  0241  2A43               u4251:
  3268  0242                     	goto	l5141
  3269  0242  2A45               u4250:
  3270  0243                     	goto	l364
  3271  0243  2A88               	
  3272                           l5139:	
  3273  0244                     	goto	l364
  3274  0244  2A88               	
  3275                           l363:	
  3276  0245                     	line	94
  3277                           	
  3278                           l5141:	
  3279  0245                     ;main.c: 93:                             {;main.c: 94:                                 f
                                 or(char j = 0; j <= 15; j++)
  3280                           	clrf	(main@j_419)^080h
  3281  0245  01C6               	
  3282                           l5143:	
  3283  0246                     	movlw	low(010h)
  3284  0246  3010               	subwf	(main@j_419)^080h,w
  3285  0247  0246               	skipc
  3286  0248  1C03               	goto	u4261
  3287  0249  2A4B               	goto	u4260
  3288  024A  2A4C               u4261:
  3289  024B                     	goto	l5147
  3290  024B  2A4E               u4260:
  3291  024C                     	goto	l5155
  3292  024C  2A7A               	
  3293                           l5145:	
  3294  024D                     	goto	l5155
  3295  024D  2A7A               	
  3296                           l365:	
  3297  024E                     	line	96
  3298                           	
  3299                           l5147:	
  3300  024E                     ;main.c: 95:                                 {;main.c: 96:                              
                                        dispLCD(i, j, " ");
  3301                           	movf	(main@j_419)^080h,w
  3302  024E  0846               	bcf	status, 5	;RP0=0, select bank0
  3303  024F  1283               	bcf	status, 6	;RP1=0, select bank0
  3304  0250  1303               	movwf	(??_main+0)+0
  3305  0251  00C4               	movf	(??_main+0)+0,w
  3306  0252  0844               	movwf	(dispLCD@col)
  3307  0253  00A6               	movlw	low(((STR_2)|8000h))
  3308  0254  300F               	movwf	(dispLCD@str)
  3309  0255  00A7               	movlw	high(((STR_2)|8000h))
  3310  0256  3090               	movwf	((dispLCD@str))+1
  3311  0257  00A8               	bsf	status, 5	;RP0=1, select bank1
  3312  0258  1683               	bcf	status, 6	;RP1=0, select bank1
  3313  0259  1303               	movf	(main@i_418)^080h,w
  3314  025A  0845               	fcall	_dispLCD
  3315  025B  120A  118A  2783  120A  118A  	line	97
  3316                           	
  3317                           l5149:	
  3318  0260                     ;main.c: 97:                                     delay(10);
  3319                           	movlw	0Ah
  3320  0260  300A               	bcf	status, 5	;RP0=0, select bank0
  3321  0261  1283               	bcf	status, 6	;RP1=0, select bank0
  3322  0262  1303               	movwf	(delay@t)
  3323  0263  00A0               	movlw	0
  3324  0264  3000               	movwf	((delay@t))+1
  3325  0265  00A1               	fcall	_delay
  3326  0266  160A  118A  2513  120A  118A  	line	98
  3327                           	
  3328                           l5151:	
  3329  026B                     ;main.c: 98:                                 }
  3330                           	movlw	low(01h)
  3331  026B  3001               	bcf	status, 5	;RP0=0, select bank0
  3332  026C  1283               	bcf	status, 6	;RP1=0, select bank0
  3333  026D  1303               	movwf	(??_main+0)+0
  3334  026E  00C4               	movf	(??_main+0)+0,w
  3335  026F  0844               	bsf	status, 5	;RP0=1, select bank1
  3336  0270  1683               	bcf	status, 6	;RP1=0, select bank1
  3337  0271  1303               	addwf	(main@j_419)^080h,f
  3338  0272  07C6               	
  3339                           l5153:	
  3340  0273                     	movlw	low(010h)
  3341  0273  3010               	subwf	(main@j_419)^080h,w
  3342  0274  0246               	skipc
  3343  0275  1C03               	goto	u4271
  3344  0276  2A78               	goto	u4270
  3345  0277  2A79               u4271:
  3346  0278                     	goto	l5147
  3347  0278  2A4E               u4270:
  3348  0279                     	goto	l5155
  3349  0279  2A7A               	
  3350                           l366:	
  3351  027A                     	line	99
  3352                           	
  3353                           l5155:	
  3354  027A                     ;main.c: 99:                             }
  3355                           	movlw	low(01h)
  3356  027A  3001               	bcf	status, 5	;RP0=0, select bank0
  3357  027B  1283               	bcf	status, 6	;RP1=0, select bank0
  3358  027C  1303               	movwf	(??_main+0)+0
  3359  027D  00C4               	movf	(??_main+0)+0,w
  3360  027E  0844               	bsf	status, 5	;RP0=1, select bank1
  3361  027F  1683               	bcf	status, 6	;RP1=0, select bank1
  3362  0280  1303               	addwf	(main@i_418)^080h,f
  3363  0281  07C5               	
  3364                           l5157:	
  3365  0282                     	movlw	low(02h)
  3366  0282  3002               	subwf	(main@i_418)^080h,w
  3367  0283  0245               	skipc
  3368  0284  1C03               	goto	u4281
  3369  0285  2A87               	goto	u4280
  3370  0286  2A88               u4281:
  3371  0287                     	goto	l5141
  3372  0287  2A45               u4280:
  3373  0288                     	
  3374                           l364:	
  3375  0288                     	line	100
  3376                           ;main.c: 100:                             estado = 1;
  3377                           	clrf	(main@estado)^080h
  3378  0288  01D0               	incf	(main@estado)^080h,f
  3379  0289  0AD0               	line	101
  3380                           ;main.c: 101:                             break;
  3381                           	goto	l5437
  3382  028A  120A  158A  2E74   	line	103
  3383                           ;main.c: 103:             case 1:
  3384                           	
  3385                           l368:	
  3386  0801                     	line	104
  3387                           	
  3388                           l5159:	
  3389  0801                     ;main.c: 104:                             dispLCD(0, 2, "PIController");
  3390                           	movlw	low(02h)
  3391  0801  3002               	bcf	status, 5	;RP0=0, select bank0
  3392  0802  1283               	movwf	(??_main+0)+0
  3393  0803  00C4               	movf	(??_main+0)+0,w
  3394  0804  0844               	movwf	(dispLCD@col)
  3395  0805  00A6               	movlw	low(((STR_3)|8000h))
  3396  0806  30EE               	movwf	(dispLCD@str)
  3397  0807  00A7               	movlw	high(((STR_3)|8000h))
  3398  0808  3090               	movwf	((dispLCD@str))+1
  3399  0809  00A8               	movlw	low(0)
  3400  080A  3000               	fcall	_dispLCD
  3401  080B  120A  118A  2783  120A  158A  	line	105
  3402                           	
  3403                           l5161:	
  3404  0810                     ;main.c: 105:                             setT1(1000);
  3405                           	movlw	0
  3406  0810  3000               	bcf	status, 5	;RP0=0, select bank0
  3407  0811  1283               	bcf	status, 6	;RP1=0, select bank0
  3408  0812  1303               	movwf	(setT1@c+3)
  3409  0813  00B0               	movlw	0
  3410  0814  3000               	movwf	(setT1@c+2)
  3411  0815  00AF               	movlw	03h
  3412  0816  3003               	movwf	(setT1@c+1)
  3413  0817  00AE               	movlw	0E8h
  3414  0818  30E8               	movwf	(setT1@c)
  3415  0819  00AD               
  3416                           	fcall	_setT1
  3417  081A  160A  118A  242A  120A  158A  	line	106
  3418                           	
  3419                           l5163:	
  3420  081F                     ;main.c: 106:                             estado = 2;
  3421                           	movlw	low(02h)
  3422  081F  3002               	bcf	status, 5	;RP0=0, select bank0
  3423  0820  1283               	bcf	status, 6	;RP1=0, select bank0
  3424  0821  1303               	movwf	(??_main+0)+0
  3425  0822  00C4               	movf	(??_main+0)+0,w
  3426  0823  0844               	bsf	status, 5	;RP0=1, select bank1
  3427  0824  1683               	bcf	status, 6	;RP1=0, select bank1
  3428  0825  1303               	movwf	(main@estado)^080h
  3429  0826  00D0               	line	107
  3430                           ;main.c: 107:                             break;
  3431                           	goto	l5437
  3432  0827  2E74               	line	109
  3433                           ;main.c: 109:              case 2:
  3434                           	
  3435                           l369:	
  3436  0828                     	line	110
  3437                           	
  3438                           l5165:	
  3439  0828                     ;main.c: 110:                             if(!statusT1())
  3440                           	fcall	_statusT1
  3441  0828  160A  118A  2436  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  3442  082D  1283               	bcf	status, 6	;RP1=0, select bank0
  3443  082E  1303               	movf	(3+(?_statusT1)),w
  3444  082F  0823               	iorwf	(2+(?_statusT1)),w
  3445  0830  0422               	iorwf	(1+(?_statusT1)),w
  3446  0831  0421               	iorwf	(0+(?_statusT1)),w
  3447  0832  0420               	skipz
  3448  0833  1D03               	goto	u4291
  3449  0834  2836               	goto	u4290
  3450  0835  2837               u4291:
  3451  0836                     	goto	l5437
  3452  0836  2E74               u4290:
  3453  0837                     	line	111
  3454                           	
  3455                           l5167:	
  3456  0837                     ;main.c: 111:                                 estado = 3;
  3457                           	movlw	low(03h)
  3458  0837  3003               	movwf	(??_main+0)+0
  3459  0838  00C4               	movf	(??_main+0)+0,w
  3460  0839  0844               	bsf	status, 5	;RP0=1, select bank1
  3461  083A  1683               	bcf	status, 6	;RP1=0, select bank1
  3462  083B  1303               	movwf	(main@estado)^080h
  3463  083C  00D0               	goto	l5437
  3464  083D  2E74               	
  3465                           l370:	
  3466  083E                     	line	112
  3467                           ;main.c: 112:                             break;
  3468                           	goto	l5437
  3469  083E  2E74               	line	114
  3470                           ;main.c: 114:              case 3:
  3471                           	
  3472                           l371:	
  3473  083F                     	line	115
  3474                           	
  3475                           l5169:	
  3476  083F                     ;main.c: 115:                             dispLCD_clr();
  3477                           	fcall	_dispLCD_clr
  3478  083F  160A  118A  23E2  120A  158A  	line	116
  3479                           	
  3480                           l5171:	
  3481  0844                     ;main.c: 116:                             dispLCD(0, 0, "Ajuste o inicio ");
  3482                           	bcf	status, 5	;RP0=0, select bank0
  3483  0844  1283               	bcf	status, 6	;RP1=0, select bank0
  3484  0845  1303               	clrf	(dispLCD@col)
  3485  0846  01A6               	movlw	low(((STR_4)|8000h))
  3486  0847  3099               	movwf	(dispLCD@str)
  3487  0848  00A7               	movlw	high(((STR_4)|8000h))
  3488  0849  3090               	movwf	((dispLCD@str))+1
  3489  084A  00A8               	movlw	low(0)
  3490  084B  3000               	fcall	_dispLCD
  3491  084C  120A  118A  2783  120A  158A  	line	117
  3492                           	
  3493                           l5173:	
  3494  0851                     ;main.c: 117:                             dispLCD(1, 0, "   do sistema   ");
  3495                           	bcf	status, 5	;RP0=0, select bank0
  3496  0851  1283               	bcf	status, 6	;RP1=0, select bank0
  3497  0852  1303               	clrf	(dispLCD@col)
  3498  0853  01A6               	movlw	low(((STR_5)|8000h))
  3499  0854  3066               	movwf	(dispLCD@str)
  3500  0855  00A7               	movlw	high(((STR_5)|8000h))
  3501  0856  3090               	movwf	((dispLCD@str))+1
  3502  0857  00A8               	movlw	low(01h)
  3503  0858  3001               	fcall	_dispLCD
  3504  0859  120A  118A  2783  120A  158A  	line	118
  3505                           ;main.c: 118:                             setT1(1000);
  3506                           	movlw	0
  3507  085E  3000               	bcf	status, 5	;RP0=0, select bank0
  3508  085F  1283               	bcf	status, 6	;RP1=0, select bank0
  3509  0860  1303               	movwf	(setT1@c+3)
  3510  0861  00B0               	movlw	0
  3511  0862  3000               	movwf	(setT1@c+2)
  3512  0863  00AF               	movlw	03h
  3513  0864  3003               	movwf	(setT1@c+1)
  3514  0865  00AE               	movlw	0E8h
  3515  0866  30E8               	movwf	(setT1@c)
  3516  0867  00AD               
  3517                           	fcall	_setT1
  3518  0868  160A  118A  242A  120A  158A  	line	119
  3519                           	
  3520                           l5175:	
  3521  086D                     ;main.c: 119:                             estado = 4;
  3522                           	movlw	low(04h)
  3523  086D  3004               	bcf	status, 5	;RP0=0, select bank0
  3524  086E  1283               	bcf	status, 6	;RP1=0, select bank0
  3525  086F  1303               	movwf	(??_main+0)+0
  3526  0870  00C4               	movf	(??_main+0)+0,w
  3527  0871  0844               	bsf	status, 5	;RP0=1, select bank1
  3528  0872  1683               	bcf	status, 6	;RP1=0, select bank1
  3529  0873  1303               	movwf	(main@estado)^080h
  3530  0874  00D0               	line	120
  3531                           ;main.c: 120:                             break;
  3532                           	goto	l5437
  3533  0875  2E74               	line	122
  3534                           ;main.c: 122:              case 4:
  3535                           	
  3536                           l372:	
  3537  0876                     	line	123
  3538                           	
  3539                           l5177:	
  3540  0876                     ;main.c: 123:                             if(!statusT1())
  3541                           	fcall	_statusT1
  3542  0876  160A  118A  2436  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  3543  087B  1283               	bcf	status, 6	;RP1=0, select bank0
  3544  087C  1303               	movf	(3+(?_statusT1)),w
  3545  087D  0823               	iorwf	(2+(?_statusT1)),w
  3546  087E  0422               	iorwf	(1+(?_statusT1)),w
  3547  087F  0421               	iorwf	(0+(?_statusT1)),w
  3548  0880  0420               	skipz
  3549  0881  1D03               	goto	u4301
  3550  0882  2884               	goto	u4300
  3551  0883  2885               u4301:
  3552  0884                     	goto	l5437
  3553  0884  2E74               u4300:
  3554  0885                     	line	124
  3555                           	
  3556                           l5179:	
  3557  0885                     ;main.c: 124:                                 estado = 5;
  3558                           	movlw	low(05h)
  3559  0885  3005               	movwf	(??_main+0)+0
  3560  0886  00C4               	movf	(??_main+0)+0,w
  3561  0887  0844               	bsf	status, 5	;RP0=1, select bank1
  3562  0888  1683               	bcf	status, 6	;RP1=0, select bank1
  3563  0889  1303               	movwf	(main@estado)^080h
  3564  088A  00D0               	goto	l5437
  3565  088B  2E74               	
  3566                           l373:	
  3567  088C                     	line	125
  3568                           ;main.c: 125:                             break;
  3569                           	goto	l5437
  3570  088C  2E74               	line	127
  3571                           ;main.c: 127:             case 5:
  3572                           	
  3573                           l374:	
  3574  088D                     	line	128
  3575                           	
  3576                           l5181:	
  3577  088D                     ;main.c: 128:                             init_atuadores();
  3578                           	fcall	_init_atuadores
  3579  088D  160A  118A  23D1  120A  158A  	line	129
  3580                           	
  3581                           l5183:	
  3582  0892                     ;main.c: 129:                             estado = 6;
  3583                           	movlw	low(06h)
  3584  0892  3006               	bcf	status, 5	;RP0=0, select bank0
  3585  0893  1283               	bcf	status, 6	;RP1=0, select bank0
  3586  0894  1303               	movwf	(??_main+0)+0
  3587  0895  00C4               	movf	(??_main+0)+0,w
  3588  0896  0844               	bsf	status, 5	;RP0=1, select bank1
  3589  0897  1683               	bcf	status, 6	;RP1=0, select bank1
  3590  0898  1303               	movwf	(main@estado)^080h
  3591  0899  00D0               	line	130
  3592                           ;main.c: 130:                             break;
  3593                           	goto	l5437
  3594  089A  2E74               	line	132
  3595                           ;main.c: 132:             case 6:
  3596                           	
  3597                           l375:	
  3598  089B                     	line	133
  3599                           	
  3600                           l5185:	
  3601  089B                     ;main.c: 133:                             dispLCD_clr();
  3602                           	fcall	_dispLCD_clr
  3603  089B  160A  118A  23E2  120A  158A  	line	134
  3604                           	
  3605                           l5187:	
  3606  08A0                     ;main.c: 134:                             dispLCD(0,0,"   A- B- C- D-  ");
  3607                           	bcf	status, 5	;RP0=0, select bank0
  3608  08A0  1283               	bcf	status, 6	;RP1=0, select bank0
  3609  08A1  1303               	clrf	(dispLCD@col)
  3610  08A2  01A6               	movlw	low(((STR_6)|8000h))
  3611  08A3  3077               	movwf	(dispLCD@str)
  3612  08A4  00A7               	movlw	high(((STR_6)|8000h))
  3613  08A5  3090               	movwf	((dispLCD@str))+1
  3614  08A6  00A8               	movlw	low(0)
  3615  08A7  3000               	fcall	_dispLCD
  3616  08A8  120A  118A  2783  120A  158A  	line	135
  3617                           	
  3618                           l5189:	
  3619  08AD                     ;main.c: 135:                             estado = 7;
  3620                           	movlw	low(07h)
  3621  08AD  3007               	bcf	status, 5	;RP0=0, select bank0
  3622  08AE  1283               	bcf	status, 6	;RP1=0, select bank0
  3623  08AF  1303               	movwf	(??_main+0)+0
  3624  08B0  00C4               	movf	(??_main+0)+0,w
  3625  08B1  0844               	bsf	status, 5	;RP0=1, select bank1
  3626  08B2  1683               	bcf	status, 6	;RP1=0, select bank1
  3627  08B3  1303               	movwf	(main@estado)^080h
  3628  08B4  00D0               	line	136
  3629                           ;main.c: 136:                             break;
  3630                           	goto	l5437
  3631  08B5  2E74               	line	138
  3632                           ;main.c: 138:             case 7:
  3633                           	
  3634                           l376:	
  3635  08B6                     	line	139
  3636                           	
  3637                           l5191:	
  3638  08B6                     ;main.c: 139:                             tecla = teclado_borda();
  3639                           	fcall	_teclado_borda
  3640  08B6  160A  118A  2532  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  3641  08BB  1283               	bcf	status, 6	;RP1=0, select bank0
  3642  08BC  1303               	movwf	(??_main+0)+0
  3643  08BD  00C4               	movf	(??_main+0)+0,w
  3644  08BE  0844               	bsf	status, 5	;RP0=1, select bank1
  3645  08BF  1683               	bcf	status, 6	;RP1=0, select bank1
  3646  08C0  1303               	movwf	(main@tecla)^080h
  3647  08C1  00D1               	line	140
  3648                           ;main.c: 140:                             switch(tecla)
  3649                           	goto	l5245
  3650  08C2  299D               	line	142
  3651                           ;main.c: 141:                             {;main.c: 142:                                
                                  case 'A': alt_atuador(tecla); dispLCD_lincol(0, 4); dispLCD_dataReg(ler_atuador('A') ? 
                                 '+' : '-'); break;
  3652                           	
  3653                           l378:	
  3654  08C3                     	
  3655                           l5193:	
  3656  08C3                     	bsf	status, 5	;RP0=1, select bank1
  3657  08C3  1683               	bcf	status, 6	;RP1=0, select bank1
  3658  08C4  1303               	movf	(main@tecla)^080h,w
  3659  08C5  0851               	fcall	_alt_atuador
  3660  08C6  160A  118A  27C6  120A  158A  	
  3661                           l5195:	
  3662  08CB                     	movlw	low(04h)
  3663  08CB  3004               	bcf	status, 5	;RP0=0, select bank0
  3664  08CC  1283               	bcf	status, 6	;RP1=0, select bank0
  3665  08CD  1303               	movwf	(??_main+0)+0
  3666  08CE  00C4               	movf	(??_main+0)+0,w
  3667  08CF  0844               	movwf	(dispLCD_lincol@col)
  3668  08D0  00A3               	movlw	low(0)
  3669  08D1  3000               	fcall	_dispLCD_lincol
  3670  08D2  160A  118A  24A8  120A  158A  	
  3671                           l5197:	
  3672  08D7                     	movlw	low(041h)
  3673  08D7  3041               	fcall	_ler_atuador
  3674  08D8  160A  118A  278D  120A  158A  	xorlw	0
  3675  08DD  3A00               	skipz
  3676  08DE  1D03               	goto	u4311
  3677  08DF  28E1               	goto	u4310
  3678  08E0  28E2               u4311:
  3679  08E1                     	goto	l5201
  3680  08E1  28E9               u4310:
  3681  08E2                     	
  3682                           l5199:	
  3683  08E2                     	movlw	02Dh
  3684  08E2  302D               	bsf	status, 5	;RP0=1, select bank1
  3685  08E3  1683               	bcf	status, 6	;RP1=0, select bank1
  3686  08E4  1303               	movwf	(_main$428)^080h
  3687  08E5  00B9               	movlw	0
  3688  08E6  3000               	movwf	((_main$428)^080h)+1
  3689  08E7  00BA               	goto	l5203
  3690  08E8  28F0               	
  3691                           l380:	
  3692  08E9                     	
  3693                           l5201:	
  3694  08E9                     	movlw	02Bh
  3695  08E9  302B               	bsf	status, 5	;RP0=1, select bank1
  3696  08EA  1683               	bcf	status, 6	;RP1=0, select bank1
  3697  08EB  1303               	movwf	(_main$428)^080h
  3698  08EC  00B9               	movlw	0
  3699  08ED  3000               	movwf	((_main$428)^080h)+1
  3700  08EE  00BA               	goto	l5203
  3701  08EF  28F0               	
  3702                           l382:	
  3703  08F0                     	
  3704                           l5203:	
  3705  08F0                     	movf	(_main$428)^080h,w
  3706  08F0  0839               	fcall	_dispLCD_dataReg
  3707  08F1  160A  118A  2725  120A  158A  	goto	l5437
  3708  08F6  2E74               	line	143
  3709                           ;main.c: 143:                                 case 'B': alt_atuador(tecla); dispLCD_linc
                                 ol(0, 7); dispLCD_dataReg(ler_atuador('B') ? '+' : '-'); break;
  3710                           	
  3711                           l384:	
  3712  08F7                     	
  3713                           l5205:	
  3714  08F7                     	bsf	status, 5	;RP0=1, select bank1
  3715  08F7  1683               	bcf	status, 6	;RP1=0, select bank1
  3716  08F8  1303               	movf	(main@tecla)^080h,w
  3717  08F9  0851               	fcall	_alt_atuador
  3718  08FA  160A  118A  27C6  120A  158A  	
  3719                           l5207:	
  3720  08FF                     	movlw	low(07h)
  3721  08FF  3007               	bcf	status, 5	;RP0=0, select bank0
  3722  0900  1283               	bcf	status, 6	;RP1=0, select bank0
  3723  0901  1303               	movwf	(??_main+0)+0
  3724  0902  00C4               	movf	(??_main+0)+0,w
  3725  0903  0844               	movwf	(dispLCD_lincol@col)
  3726  0904  00A3               	movlw	low(0)
  3727  0905  3000               	fcall	_dispLCD_lincol
  3728  0906  160A  118A  24A8  120A  158A  	
  3729                           l5209:	
  3730  090B                     	movlw	low(042h)
  3731  090B  3042               	fcall	_ler_atuador
  3732  090C  160A  118A  278D  120A  158A  	xorlw	0
  3733  0911  3A00               	skipz
  3734  0912  1D03               	goto	u4321
  3735  0913  2915               	goto	u4320
  3736  0914  2916               u4321:
  3737  0915                     	goto	l5213
  3738  0915  291D               u4320:
  3739  0916                     	
  3740                           l5211:	
  3741  0916                     	movlw	02Dh
  3742  0916  302D               	bsf	status, 5	;RP0=1, select bank1
  3743  0917  1683               	bcf	status, 6	;RP1=0, select bank1
  3744  0918  1303               	movwf	(_main$429)^080h
  3745  0919  00BB               	movlw	0
  3746  091A  3000               	movwf	((_main$429)^080h)+1
  3747  091B  00BC               	goto	l5215
  3748  091C  2924               	
  3749                           l386:	
  3750  091D                     	
  3751                           l5213:	
  3752  091D                     	movlw	02Bh
  3753  091D  302B               	bsf	status, 5	;RP0=1, select bank1
  3754  091E  1683               	bcf	status, 6	;RP1=0, select bank1
  3755  091F  1303               	movwf	(_main$429)^080h
  3756  0920  00BB               	movlw	0
  3757  0921  3000               	movwf	((_main$429)^080h)+1
  3758  0922  00BC               	goto	l5215
  3759  0923  2924               	
  3760                           l388:	
  3761  0924                     	
  3762                           l5215:	
  3763  0924                     	movf	(_main$429)^080h,w
  3764  0924  083B               	fcall	_dispLCD_dataReg
  3765  0925  160A  118A  2725  120A  158A  	goto	l5437
  3766  092A  2E74               	line	144
  3767                           ;main.c: 144:                                 case 'C': alt_atuador(tecla); dispLCD_linc
                                 ol(0,10); dispLCD_dataReg(ler_atuador('C') ? '+' : '-'); break;
  3768                           	
  3769                           l389:	
  3770  092B                     	
  3771                           l5217:	
  3772  092B                     	bsf	status, 5	;RP0=1, select bank1
  3773  092B  1683               	bcf	status, 6	;RP1=0, select bank1
  3774  092C  1303               	movf	(main@tecla)^080h,w
  3775  092D  0851               	fcall	_alt_atuador
  3776  092E  160A  118A  27C6  120A  158A  	
  3777                           l5219:	
  3778  0933                     	movlw	low(0Ah)
  3779  0933  300A               	bcf	status, 5	;RP0=0, select bank0
  3780  0934  1283               	bcf	status, 6	;RP1=0, select bank0
  3781  0935  1303               	movwf	(??_main+0)+0
  3782  0936  00C4               	movf	(??_main+0)+0,w
  3783  0937  0844               	movwf	(dispLCD_lincol@col)
  3784  0938  00A3               	movlw	low(0)
  3785  0939  3000               	fcall	_dispLCD_lincol
  3786  093A  160A  118A  24A8  120A  158A  	
  3787                           l5221:	
  3788  093F                     	movlw	low(043h)
  3789  093F  3043               	fcall	_ler_atuador
  3790  0940  160A  118A  278D  120A  158A  	xorlw	0
  3791  0945  3A00               	skipz
  3792  0946  1D03               	goto	u4331
  3793  0947  2949               	goto	u4330
  3794  0948  294A               u4331:
  3795  0949                     	goto	l5225
  3796  0949  2951               u4330:
  3797  094A                     	
  3798                           l5223:	
  3799  094A                     	movlw	02Dh
  3800  094A  302D               	bsf	status, 5	;RP0=1, select bank1
  3801  094B  1683               	bcf	status, 6	;RP1=0, select bank1
  3802  094C  1303               	movwf	(_main$430)^080h
  3803  094D  00BD               	movlw	0
  3804  094E  3000               	movwf	((_main$430)^080h)+1
  3805  094F  00BE               	goto	l5227
  3806  0950  2958               	
  3807                           l391:	
  3808  0951                     	
  3809                           l5225:	
  3810  0951                     	movlw	02Bh
  3811  0951  302B               	bsf	status, 5	;RP0=1, select bank1
  3812  0952  1683               	bcf	status, 6	;RP1=0, select bank1
  3813  0953  1303               	movwf	(_main$430)^080h
  3814  0954  00BD               	movlw	0
  3815  0955  3000               	movwf	((_main$430)^080h)+1
  3816  0956  00BE               	goto	l5227
  3817  0957  2958               	
  3818                           l393:	
  3819  0958                     	
  3820                           l5227:	
  3821  0958                     	movf	(_main$430)^080h,w
  3822  0958  083D               	fcall	_dispLCD_dataReg
  3823  0959  160A  118A  2725  120A  158A  	goto	l5437
  3824  095E  2E74               	line	145
  3825                           ;main.c: 145:                                 case 'D': alt_atuador(tecla); dispLCD_linc
                                 ol(0,13); dispLCD_dataReg(ler_atuador('D') ? '+' : '-'); break;
  3826                           	
  3827                           l394:	
  3828  095F                     	
  3829                           l5229:	
  3830  095F                     	bsf	status, 5	;RP0=1, select bank1
  3831  095F  1683               	bcf	status, 6	;RP1=0, select bank1
  3832  0960  1303               	movf	(main@tecla)^080h,w
  3833  0961  0851               	fcall	_alt_atuador
  3834  0962  160A  118A  27C6  120A  158A  	
  3835                           l5231:	
  3836  0967                     	movlw	low(0Dh)
  3837  0967  300D               	bcf	status, 5	;RP0=0, select bank0
  3838  0968  1283               	bcf	status, 6	;RP1=0, select bank0
  3839  0969  1303               	movwf	(??_main+0)+0
  3840  096A  00C4               	movf	(??_main+0)+0,w
  3841  096B  0844               	movwf	(dispLCD_lincol@col)
  3842  096C  00A3               	movlw	low(0)
  3843  096D  3000               	fcall	_dispLCD_lincol
  3844  096E  160A  118A  24A8  120A  158A  	
  3845                           l5233:	
  3846  0973                     	movlw	low(044h)
  3847  0973  3044               	fcall	_ler_atuador
  3848  0974  160A  118A  278D  120A  158A  	xorlw	0
  3849  0979  3A00               	skipz
  3850  097A  1D03               	goto	u4341
  3851  097B  297D               	goto	u4340
  3852  097C  297E               u4341:
  3853  097D                     	goto	l5237
  3854  097D  2985               u4340:
  3855  097E                     	
  3856                           l5235:	
  3857  097E                     	movlw	02Dh
  3858  097E  302D               	bsf	status, 5	;RP0=1, select bank1
  3859  097F  1683               	bcf	status, 6	;RP1=0, select bank1
  3860  0980  1303               	movwf	(_main$431)^080h
  3861  0981  00BF               	movlw	0
  3862  0982  3000               	movwf	((_main$431)^080h)+1
  3863  0983  00C0               	goto	l5239
  3864  0984  298C               	
  3865                           l396:	
  3866  0985                     	
  3867                           l5237:	
  3868  0985                     	movlw	02Bh
  3869  0985  302B               	bsf	status, 5	;RP0=1, select bank1
  3870  0986  1683               	bcf	status, 6	;RP1=0, select bank1
  3871  0987  1303               	movwf	(_main$431)^080h
  3872  0988  00BF               	movlw	0
  3873  0989  3000               	movwf	((_main$431)^080h)+1
  3874  098A  00C0               	goto	l5239
  3875  098B  298C               	
  3876                           l398:	
  3877  098C                     	
  3878                           l5239:	
  3879  098C                     	movf	(_main$431)^080h,w
  3880  098C  083F               	fcall	_dispLCD_dataReg
  3881  098D  160A  118A  2725  120A  158A  	goto	l5437
  3882  0992  2E74               	line	146
  3883                           ;main.c: 146:                                 case '#': estado = 10; break;
  3884                           	
  3885                           l399:	
  3886  0993                     	
  3887                           l5241:	
  3888  0993                     	movlw	low(0Ah)
  3889  0993  300A               	bcf	status, 5	;RP0=0, select bank0
  3890  0994  1283               	bcf	status, 6	;RP1=0, select bank0
  3891  0995  1303               	movwf	(??_main+0)+0
  3892  0996  00C4               	movf	(??_main+0)+0,w
  3893  0997  0844               	bsf	status, 5	;RP0=1, select bank1
  3894  0998  1683               	bcf	status, 6	;RP1=0, select bank1
  3895  0999  1303               	movwf	(main@estado)^080h
  3896  099A  00D0               	goto	l5437
  3897  099B  2E74               	line	147
  3898                           	
  3899                           l5243:	
  3900  099C                     ;main.c: 147:                             }
  3901                           	goto	l5437
  3902  099C  2E74               	
  3903                           l377:	
  3904  099D                     	
  3905                           l5245:	
  3906  099D                     	movf	(main@tecla)^080h,w
  3907  099D  0851               	bcf	status, 5	;RP0=0, select bank0
  3908  099E  1283               	bcf	status, 6	;RP1=0, select bank0
  3909  099F  1303               	movwf	(??_main+0)+0
  3910  09A0  00C4               	clrf	(??_main+0)+0+1
  3911  09A1  01C5               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3912                           ; Switch size 1, requested type "space"
  3913                           ; Number of cases is 1, Range of values is 0 to 0
  3914                           ; switch strategies available:
  3915                           ; Name         Instructions Cycles
  3916                           ; simple_byte            4     3 (average)
  3917                           ; direct_byte           11     8 (fixed)
  3918                           ; jumptable            260     6 (fixed)
  3919                           ;	Chosen strategy is simple_byte
  3920                           
  3921                           	movf 1+(??_main+0)+0,w
  3922  09A2  0845               	opt asmopt_push
  3923                           	opt asmopt_off
  3924                           	xorlw	0^0	; case 0
  3925  09A3  3A00               	skipnz
  3926  09A4  1903               	goto	l5783
  3927  09A5  29A7               	goto	l5437
  3928  09A6  2E74               	opt asmopt_pop
  3929                           	
  3930                           l5783:	
  3931  09A7                     ; Switch size 1, requested type "space"
  3932                           ; Number of cases is 5, Range of values is 35 to 68
  3933                           ; switch strategies available:
  3934                           ; Name         Instructions Cycles
  3935                           ; simple_byte           16     9 (average)
  3936                           ; direct_byte          113    11 (fixed)
  3937                           ; jumptable            263     9 (fixed)
  3938                           ;	Chosen strategy is simple_byte
  3939                           
  3940                           	movf 0+(??_main+0)+0,w
  3941  09A7  0844               	opt asmopt_push
  3942                           	opt asmopt_off
  3943                           	xorlw	35^0	; case 35
  3944  09A8  3A23               	skipnz
  3945  09A9  1903               	goto	l5241
  3946  09AA  2993               	xorlw	65^35	; case 65
  3947  09AB  3A62               	skipnz
  3948  09AC  1903               	goto	l5193
  3949  09AD  28C3               	xorlw	66^65	; case 66
  3950  09AE  3A03               	skipnz
  3951  09AF  1903               	goto	l5205
  3952  09B0  28F7               	xorlw	67^66	; case 67
  3953  09B1  3A01               	skipnz
  3954  09B2  1903               	goto	l5217
  3955  09B3  292B               	xorlw	68^67	; case 68
  3956  09B4  3A07               	skipnz
  3957  09B5  1903               	goto	l5229
  3958  09B6  295F               	goto	l5437
  3959  09B7  2E74               	opt asmopt_pop
  3960                           
  3961                           	
  3962                           l383:	
  3963  09B8                     	line	148
  3964                           ;main.c: 148:                             break;
  3965                           	goto	l5437
  3966  09B8  2E74               	line	152
  3967                           ;main.c: 152:             case 10:
  3968                           	
  3969                           l400:	
  3970  09B9                     	line	153
  3971                           	
  3972                           l5247:	
  3973  09B9                     ;main.c: 153:                             dispLCD_clr();
  3974                           	fcall	_dispLCD_clr
  3975  09B9  160A  118A  23E2  120A  158A  	line	154
  3976                           	
  3977                           l5249:	
  3978  09BE                     ;main.c: 154:                             dispLCD(0, 0, "Insira os passos");
  3979                           	bcf	status, 5	;RP0=0, select bank0
  3980  09BE  1283               	bcf	status, 6	;RP1=0, select bank0
  3981  09BF  1303               	clrf	(dispLCD@col)
  3982  09C0  01A6               	movlw	low(((STR_7)|8000h))
  3983  09C1  30DD               	movwf	(dispLCD@str)
  3984  09C2  00A7               	movlw	high(((STR_7)|8000h))
  3985  09C3  3090               	movwf	((dispLCD@str))+1
  3986  09C4  00A8               	movlw	low(0)
  3987  09C5  3000               	fcall	_dispLCD
  3988  09C6  120A  118A  2783  120A  158A  	line	155
  3989                           	
  3990                           l5251:	
  3991  09CB                     ;main.c: 155:                             estado = 14;
  3992                           	movlw	low(0Eh)
  3993  09CB  300E               	bcf	status, 5	;RP0=0, select bank0
  3994  09CC  1283               	bcf	status, 6	;RP1=0, select bank0
  3995  09CD  1303               	movwf	(??_main+0)+0
  3996  09CE  00C4               	movf	(??_main+0)+0,w
  3997  09CF  0844               	bsf	status, 5	;RP0=1, select bank1
  3998  09D0  1683               	bcf	status, 6	;RP1=0, select bank1
  3999  09D1  1303               	movwf	(main@estado)^080h
  4000  09D2  00D0               	line	156
  4001                           ;main.c: 156:                             break;
  4002                           	goto	l5437
  4003  09D3  2E74               	line	158
  4004                           ;main.c: 158:              case 11:
  4005                           	
  4006                           l401:	
  4007  09D4                     	line	159
  4008                           	
  4009                           l5253:	
  4010  09D4                     ;main.c: 159:                             tecla = teclado_borda();
  4011                           	fcall	_teclado_borda
  4012  09D4  160A  118A  2532  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  4013  09D9  1283               	bcf	status, 6	;RP1=0, select bank0
  4014  09DA  1303               	movwf	(??_main+0)+0
  4015  09DB  00C4               	movf	(??_main+0)+0,w
  4016  09DC  0844               	bsf	status, 5	;RP0=1, select bank1
  4017  09DD  1683               	bcf	status, 6	;RP1=0, select bank1
  4018  09DE  1303               	movwf	(main@tecla)^080h
  4019  09DF  00D1               	line	160
  4020                           ;main.c: 160:                             switch( tecla )
  4021                           	goto	l5285
  4022  09E0  2A68               	line	162
  4023                           ;main.c: 161:                             {;main.c: 162:                                
                                  case 'A':
  4024                           	
  4025                           l403:	
  4026  09E1                     	goto	l5255
  4027  09E1  29E4               	line	163
  4028                           ;main.c: 163:                                 case 'B':
  4029                           	
  4030                           l404:	
  4031  09E2                     	goto	l5255
  4032  09E2  29E4               	line	164
  4033                           ;main.c: 164:                                 case 'C':
  4034                           	
  4035                           l405:	
  4036  09E3                     	goto	l5255
  4037  09E3  29E4               	line	165
  4038                           ;main.c: 165:                                 case 'D':
  4039                           	
  4040                           l406:	
  4041  09E4                     	line	166
  4042                           	
  4043                           l5255:	
  4044  09E4                     ;main.c: 166:                                             if( fifo_disponivel() )
  4045                           	fcall	_fifo_disponivel
  4046  09E4  160A  118A  2412  120A  158A  	xorlw	0
  4047  09E9  3A00               	skipnz
  4048  09EA  1903               	goto	u4351
  4049  09EB  29ED               	goto	u4350
  4050  09EC  29EE               u4351:
  4051  09ED                     	goto	l5437
  4052  09ED  2E74               u4350:
  4053  09EE                     	line	168
  4054                           	
  4055                           l5257:	
  4056  09EE                     ;main.c: 167:                                             {;main.c: 168:                
                                                                  alt_atuador(tecla);
  4057                           	bsf	status, 5	;RP0=1, select bank1
  4058  09EE  1683               	bcf	status, 6	;RP1=0, select bank1
  4059  09EF  1303               	movf	(main@tecla)^080h,w
  4060  09F0  0851               	fcall	_alt_atuador
  4061  09F1  160A  118A  27C6  120A  158A  	line	169
  4062                           ;main.c: 169:                                                 fifo_add( ler_atuador(tecl
                                 a) ? tecla : tecla|0x20 );
  4063                           	bsf	status, 5	;RP0=1, select bank1
  4064  09F6  1683               	bcf	status, 6	;RP1=0, select bank1
  4065  09F7  1303               	movf	(main@tecla)^080h,w
  4066  09F8  0851               	fcall	_ler_atuador
  4067  09F9  160A  118A  278D  120A  158A  	xorlw	0
  4068  09FE  3A00               	skipz
  4069  09FF  1D03               	goto	u4361
  4070  0A00  2A02               	goto	u4360
  4071  0A01  2A03               u4361:
  4072  0A02                     	goto	l5261
  4073  0A02  2A0B               u4360:
  4074  0A03                     	
  4075                           l5259:	
  4076  0A03                     	movlw	020h
  4077  0A03  3020               	bsf	status, 5	;RP0=1, select bank1
  4078  0A04  1683               	bcf	status, 6	;RP1=0, select bank1
  4079  0A05  1303               	iorwf	(main@tecla)^080h,w
  4080  0A06  0451               	movwf	(_main$435)^080h
  4081  0A07  00C1               	movlw	0
  4082  0A08  3000               	movwf	1+(_main$435)^080h
  4083  0A09  00C2               	goto	l5263
  4084  0A0A  2A1D               	
  4085                           l409:	
  4086  0A0B                     	
  4087                           l5261:	
  4088  0A0B                     	bsf	status, 5	;RP0=1, select bank1
  4089  0A0B  1683               	bcf	status, 6	;RP1=0, select bank1
  4090  0A0C  1303               	movf	(main@tecla)^080h,w
  4091  0A0D  0851               	bcf	status, 5	;RP0=0, select bank0
  4092  0A0E  1283               	bcf	status, 6	;RP1=0, select bank0
  4093  0A0F  1303               	movwf	(??_main+0)+0
  4094  0A10  00C4               	clrf	(??_main+0)+0+1
  4095  0A11  01C5               	movf	0+(??_main+0)+0,w
  4096  0A12  0844               	bsf	status, 5	;RP0=1, select bank1
  4097  0A13  1683               	bcf	status, 6	;RP1=0, select bank1
  4098  0A14  1303               	movwf	(_main$435)^080h
  4099  0A15  00C1               	bcf	status, 5	;RP0=0, select bank0
  4100  0A16  1283               	bcf	status, 6	;RP1=0, select bank0
  4101  0A17  1303               	movf	1+(??_main+0)+0,w
  4102  0A18  0845               	bsf	status, 5	;RP0=1, select bank1
  4103  0A19  1683               	bcf	status, 6	;RP1=0, select bank1
  4104  0A1A  1303               	movwf	(_main$435+1)^080h
  4105  0A1B  00C2               	goto	l5263
  4106  0A1C  2A1D               	
  4107                           l411:	
  4108  0A1D                     	
  4109                           l5263:	
  4110  0A1D                     	movf	(_main$435)^080h,w
  4111  0A1D  0841               	fcall	_fifo_add
  4112  0A1E  160A  118A  25A0  120A  158A  	line	170
  4113                           	
  4114                           l5265:	
  4115  0A23                     ;main.c: 170:                                                 estado = 16;
  4116                           	movlw	low(010h)
  4117  0A23  3010               	bcf	status, 5	;RP0=0, select bank0
  4118  0A24  1283               	bcf	status, 6	;RP1=0, select bank0
  4119  0A25  1303               	movwf	(??_main+0)+0
  4120  0A26  00C4               	movf	(??_main+0)+0,w
  4121  0A27  0844               	bsf	status, 5	;RP0=1, select bank1
  4122  0A28  1683               	bcf	status, 6	;RP1=0, select bank1
  4123  0A29  1303               	movwf	(main@estado)^080h
  4124  0A2A  00D0               	goto	l5437
  4125  0A2B  2E74               	line	171
  4126                           ;main.c: 171:                                             }
  4127                           	
  4128                           l407:	
  4129  0A2C                     	line	172
  4130                           ;main.c: 172:                                             break;
  4131                           	goto	l5437
  4132  0A2C  2E74               	line	173
  4133                           ;main.c: 173:                                 case '6':
  4134                           	
  4135                           l413:	
  4136  0A2D                     	line	174
  4137                           	
  4138                           l5267:	
  4139  0A2D                     ;main.c: 174:                                             fifo_indicePrint_inc();
  4140                           	fcall	_fifo_indicePrint_inc
  4141  0A2D  160A  118A  26F5  120A  158A  	line	175
  4142                           	
  4143                           l5269:	
  4144  0A32                     ;main.c: 175:                                             estado = 16;
  4145                           	movlw	low(010h)
  4146  0A32  3010               	bcf	status, 5	;RP0=0, select bank0
  4147  0A33  1283               	bcf	status, 6	;RP1=0, select bank0
  4148  0A34  1303               	movwf	(??_main+0)+0
  4149  0A35  00C4               	movf	(??_main+0)+0,w
  4150  0A36  0844               	bsf	status, 5	;RP0=1, select bank1
  4151  0A37  1683               	bcf	status, 6	;RP1=0, select bank1
  4152  0A38  1303               	movwf	(main@estado)^080h
  4153  0A39  00D0               	line	176
  4154                           ;main.c: 176:                                             break;
  4155                           	goto	l5437
  4156  0A3A  2E74               	line	177
  4157                           ;main.c: 177:                                 case '4':
  4158                           	
  4159                           l414:	
  4160  0A3B                     	line	178
  4161                           	
  4162                           l5271:	
  4163  0A3B                     ;main.c: 178:                                             fifo_indicePrint_dec();
  4164                           	fcall	_fifo_indicePrint_dec
  4165  0A3B  160A  118A  241E  120A  158A  	line	179
  4166                           	
  4167                           l5273:	
  4168  0A40                     ;main.c: 179:                                             estado = 16;
  4169                           	movlw	low(010h)
  4170  0A40  3010               	bcf	status, 5	;RP0=0, select bank0
  4171  0A41  1283               	bcf	status, 6	;RP1=0, select bank0
  4172  0A42  1303               	movwf	(??_main+0)+0
  4173  0A43  00C4               	movf	(??_main+0)+0,w
  4174  0A44  0844               	bsf	status, 5	;RP0=1, select bank1
  4175  0A45  1683               	bcf	status, 6	;RP1=0, select bank1
  4176  0A46  1303               	movwf	(main@estado)^080h
  4177  0A47  00D0               	line	180
  4178                           ;main.c: 180:                                             break;
  4179                           	goto	l5437
  4180  0A48  2E74               	line	182
  4181                           ;main.c: 182:                                 case '*':
  4182                           	
  4183                           l415:	
  4184  0A49                     	line	183
  4185                           	
  4186                           l5275:	
  4187  0A49                     ;main.c: 183:                                             fifo_delete();
  4188                           	fcall	_fifo_delete
  4189  0A49  160A  118A  25ED  120A  158A  	line	184
  4190                           	
  4191                           l5277:	
  4192  0A4E                     ;main.c: 184:                                             estado = 16;
  4193                           	movlw	low(010h)
  4194  0A4E  3010               	bcf	status, 5	;RP0=0, select bank0
  4195  0A4F  1283               	bcf	status, 6	;RP1=0, select bank0
  4196  0A50  1303               	movwf	(??_main+0)+0
  4197  0A51  00C4               	movf	(??_main+0)+0,w
  4198  0A52  0844               	bsf	status, 5	;RP0=1, select bank1
  4199  0A53  1683               	bcf	status, 6	;RP1=0, select bank1
  4200  0A54  1303               	movwf	(main@estado)^080h
  4201  0A55  00D0               	line	185
  4202                           ;main.c: 185:                                             break;
  4203                           	goto	l5437
  4204  0A56  2E74               	line	187
  4205                           ;main.c: 187:                                 case '#': estado = 53; break;
  4206                           	
  4207                           l416:	
  4208  0A57                     	
  4209                           l5279:	
  4210  0A57                     	movlw	low(035h)
  4211  0A57  3035               	bcf	status, 5	;RP0=0, select bank0
  4212  0A58  1283               	movwf	(??_main+0)+0
  4213  0A59  00C4               	movf	(??_main+0)+0,w
  4214  0A5A  0844               	bsf	status, 5	;RP0=1, select bank1
  4215  0A5B  1683               	bcf	status, 6	;RP1=0, select bank1
  4216  0A5C  1303               	movwf	(main@estado)^080h
  4217  0A5D  00D0               	goto	l5437
  4218  0A5E  2E74               	line	189
  4219                           ;main.c: 189:                                 case '0': estado = 41; break;
  4220                           	
  4221                           l417:	
  4222  0A5F                     	
  4223                           l5281:	
  4224  0A5F                     	movlw	low(029h)
  4225  0A5F  3029               	bcf	status, 5	;RP0=0, select bank0
  4226  0A60  1283               	movwf	(??_main+0)+0
  4227  0A61  00C4               	movf	(??_main+0)+0,w
  4228  0A62  0844               	bsf	status, 5	;RP0=1, select bank1
  4229  0A63  1683               	bcf	status, 6	;RP1=0, select bank1
  4230  0A64  1303               	movwf	(main@estado)^080h
  4231  0A65  00D0               	goto	l5437
  4232  0A66  2E74               	line	190
  4233                           	
  4234                           l5283:	
  4235  0A67                     ;main.c: 190:                             }
  4236                           	goto	l5437
  4237  0A67  2E74               	
  4238                           l402:	
  4239  0A68                     	
  4240                           l5285:	
  4241  0A68                     	movf	(main@tecla)^080h,w
  4242  0A68  0851               	bcf	status, 5	;RP0=0, select bank0
  4243  0A69  1283               	bcf	status, 6	;RP1=0, select bank0
  4244  0A6A  1303               	movwf	(??_main+0)+0
  4245  0A6B  00C4               	clrf	(??_main+0)+0+1
  4246  0A6C  01C5               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4247                           ; Switch size 1, requested type "space"
  4248                           ; Number of cases is 1, Range of values is 0 to 0
  4249                           ; switch strategies available:
  4250                           ; Name         Instructions Cycles
  4251                           ; simple_byte            4     3 (average)
  4252                           ; direct_byte           11     8 (fixed)
  4253                           ; jumptable            260     6 (fixed)
  4254                           ;	Chosen strategy is simple_byte
  4255                           
  4256                           	movf 1+(??_main+0)+0,w
  4257  0A6D  0845               	opt asmopt_push
  4258                           	opt asmopt_off
  4259                           	xorlw	0^0	; case 0
  4260  0A6E  3A00               	skipnz
  4261  0A6F  1903               	goto	l5785
  4262  0A70  2A72               	goto	l5437
  4263  0A71  2E74               	opt asmopt_pop
  4264                           	
  4265                           l5785:	
  4266  0A72                     ; Switch size 1, requested type "space"
  4267                           ; Number of cases is 9, Range of values is 35 to 68
  4268                           ; switch strategies available:
  4269                           ; Name         Instructions Cycles
  4270                           ; simple_byte           28    15 (average)
  4271                           ; direct_byte          113    11 (fixed)
  4272                           ; jumptable            263     9 (fixed)
  4273                           ;	Chosen strategy is simple_byte
  4274                           
  4275                           	movf 0+(??_main+0)+0,w
  4276  0A72  0844               	opt asmopt_push
  4277                           	opt asmopt_off
  4278                           	xorlw	35^0	; case 35
  4279  0A73  3A23               	skipnz
  4280  0A74  1903               	goto	l5279
  4281  0A75  2A57               	xorlw	42^35	; case 42
  4282  0A76  3A09               	skipnz
  4283  0A77  1903               	goto	l5275
  4284  0A78  2A49               	xorlw	48^42	; case 48
  4285  0A79  3A1A               	skipnz
  4286  0A7A  1903               	goto	l5281
  4287  0A7B  2A5F               	xorlw	52^48	; case 52
  4288  0A7C  3A04               	skipnz
  4289  0A7D  1903               	goto	l5271
  4290  0A7E  2A3B               	xorlw	54^52	; case 54
  4291  0A7F  3A02               	skipnz
  4292  0A80  1903               	goto	l5267
  4293  0A81  2A2D               	xorlw	65^54	; case 65
  4294  0A82  3A77               	skipnz
  4295  0A83  1903               	goto	l5255
  4296  0A84  29E4               	xorlw	66^65	; case 66
  4297  0A85  3A03               	skipnz
  4298  0A86  1903               	goto	l5255
  4299  0A87  29E4               	xorlw	67^66	; case 67
  4300  0A88  3A01               	skipnz
  4301  0A89  1903               	goto	l5255
  4302  0A8A  29E4               	xorlw	68^67	; case 68
  4303  0A8B  3A07               	skipnz
  4304  0A8C  1903               	goto	l5255
  4305  0A8D  29E4               	goto	l5437
  4306  0A8E  2E74               	opt asmopt_pop
  4307                           
  4308                           	
  4309                           l412:	
  4310  0A8F                     	line	191
  4311                           ;main.c: 191:                             break;
  4312                           	goto	l5437
  4313  0A8F  2E74               	line	193
  4314                           ;main.c: 193:              case 16:
  4315                           	
  4316                           l418:	
  4317  0A90                     	line	194
  4318                           	
  4319                           l5287:	
  4320  0A90                     ;main.c: 194:                             fifo_print();
  4321                           	fcall	_fifo_print
  4322  0A90  120A  118A  204F  120A  158A  	line	195
  4323                           	
  4324                           l5289:	
  4325  0A95                     ;main.c: 195:                             estado = 14;
  4326                           	movlw	low(0Eh)
  4327  0A95  300E               	bcf	status, 5	;RP0=0, select bank0
  4328  0A96  1283               	bcf	status, 6	;RP1=0, select bank0
  4329  0A97  1303               	movwf	(??_main+0)+0
  4330  0A98  00C4               	movf	(??_main+0)+0,w
  4331  0A99  0844               	bsf	status, 5	;RP0=1, select bank1
  4332  0A9A  1683               	bcf	status, 6	;RP1=0, select bank1
  4333  0A9B  1303               	movwf	(main@estado)^080h
  4334  0A9C  00D0               	line	196
  4335                           ;main.c: 196:                             break;
  4336                           	goto	l5437
  4337  0A9D  2E74               	line	198
  4338                           ;main.c: 198:              case 14:
  4339                           	
  4340                           l419:	
  4341  0A9E                     	line	199
  4342                           	
  4343                           l5291:	
  4344  0A9E                     ;main.c: 199:                             dispLCD(1,0,"<  /  >");
  4345                           	bcf	status, 5	;RP0=0, select bank0
  4346  0A9E  1283               	clrf	(dispLCD@col)
  4347  0A9F  01A6               	movlw	low(((STR_8)|8000h))
  4348  0AA0  30FB               	movwf	(dispLCD@str)
  4349  0AA1  00A7               	movlw	high(((STR_8)|8000h))
  4350  0AA2  3090               	movwf	((dispLCD@str))+1
  4351  0AA3  00A8               	movlw	low(01h)
  4352  0AA4  3001               	fcall	_dispLCD
  4353  0AA5  120A  118A  2783  120A  158A  	line	200
  4354                           	
  4355                           l5293:	
  4356  0AAA                     ;main.c: 200:                             dispLCD_num(1, 1,( fifo_indice()-2 ), 2);
  4357                           	bcf	status, 5	;RP0=0, select bank0
  4358  0AAA  1283               	bcf	status, 6	;RP1=0, select bank0
  4359  0AAB  1303               	clrf	(dispLCD_num@col)
  4360  0AAC  01AD               	incf	(dispLCD_num@col),f
  4361  0AAD  0AAD               	fcall	_fifo_indice
  4362  0AAE  160A  118A  23CC  120A  158A  	addlw	low(-2)
  4363  0AB3  3EFE               	bcf	status, 5	;RP0=0, select bank0
  4364  0AB4  1283               	bcf	status, 6	;RP1=0, select bank0
  4365  0AB5  1303               	movwf	(dispLCD_num@num)
  4366  0AB6  00AE               	movlw	high(-2)
  4367  0AB7  30FF               	skipnc
  4368  0AB8  1803               	movlw	(high(-2)+1)&0ffh
  4369  0AB9  3000               	movwf	((dispLCD_num@num))+1
  4370  0ABA  00AF               	movlw	low(02h)
  4371  0ABB  3002               	movwf	(??_main+0)+0
  4372  0ABC  00C4               	movf	(??_main+0)+0,w
  4373  0ABD  0844               	movwf	(dispLCD_num@tam)
  4374  0ABE  00B0               	movlw	low(01h)
  4375  0ABF  3001               	fcall	_dispLCD_num
  4376  0AC0  120A  118A  228D  120A  158A  	line	201
  4377                           	
  4378                           l5295:	
  4379  0AC5                     ;main.c: 201:                             dispLCD_num(1, 4,( fifo_tam()-2 ), 2);
  4380                           	movlw	low(04h)
  4381  0AC5  3004               	bcf	status, 5	;RP0=0, select bank0
  4382  0AC6  1283               	bcf	status, 6	;RP1=0, select bank0
  4383  0AC7  1303               	movwf	(??_main+0)+0
  4384  0AC8  00C4               	movf	(??_main+0)+0,w
  4385  0AC9  0844               	movwf	(dispLCD_num@col)
  4386  0ACA  00AD               	fcall	_fifo_tam
  4387  0ACB  160A  118A  23C6  120A  158A  	addlw	low(-2)
  4388  0AD0  3EFE               	bcf	status, 5	;RP0=0, select bank0
  4389  0AD1  1283               	bcf	status, 6	;RP1=0, select bank0
  4390  0AD2  1303               	movwf	(dispLCD_num@num)
  4391  0AD3  00AE               	movlw	high(-2)
  4392  0AD4  30FF               	skipnc
  4393  0AD5  1803               	movlw	(high(-2)+1)&0ffh
  4394  0AD6  3000               	movwf	((dispLCD_num@num))+1
  4395  0AD7  00AF               	movlw	low(02h)
  4396  0AD8  3002               	movwf	(??_main+1)+0
  4397  0AD9  00C5               	movf	(??_main+1)+0,w
  4398  0ADA  0845               	movwf	(dispLCD_num@tam)
  4399  0ADB  00B0               	movlw	low(01h)
  4400  0ADC  3001               	fcall	_dispLCD_num
  4401  0ADD  120A  118A  228D  120A  158A  	line	202
  4402                           	
  4403                           l5297:	
  4404  0AE2                     ;main.c: 202:                             estado = 11;
  4405                           	movlw	low(0Bh)
  4406  0AE2  300B               	bcf	status, 5	;RP0=0, select bank0
  4407  0AE3  1283               	bcf	status, 6	;RP1=0, select bank0
  4408  0AE4  1303               	movwf	(??_main+0)+0
  4409  0AE5  00C4               	movf	(??_main+0)+0,w
  4410  0AE6  0844               	bsf	status, 5	;RP0=1, select bank1
  4411  0AE7  1683               	bcf	status, 6	;RP1=0, select bank1
  4412  0AE8  1303               	movwf	(main@estado)^080h
  4413  0AE9  00D0               	line	203
  4414                           ;main.c: 203:                             break;
  4415                           	goto	l5437
  4416  0AEA  2E74               	line	205
  4417                           ;main.c: 205:              case 30:
  4418                           	
  4419                           l420:	
  4420  0AEB                     	line	207
  4421                           	
  4422                           l5299:	
  4423  0AEB                     ;main.c: 207:                             estado = 70;
  4424                           	movlw	low(046h)
  4425  0AEB  3046               	bcf	status, 5	;RP0=0, select bank0
  4426  0AEC  1283               	movwf	(??_main+0)+0
  4427  0AED  00C4               	movf	(??_main+0)+0,w
  4428  0AEE  0844               	bsf	status, 5	;RP0=1, select bank1
  4429  0AEF  1683               	bcf	status, 6	;RP1=0, select bank1
  4430  0AF0  1303               	movwf	(main@estado)^080h
  4431  0AF1  00D0               	line	208
  4432                           	
  4433                           l5301:	
  4434  0AF2                     ;main.c: 208:                             meAtuadores = 1;
  4435                           	clrf	(main@meAtuadores)^080h
  4436  0AF2  01C9               	incf	(main@meAtuadores)^080h,f
  4437  0AF3  0AC9               	line	209
  4438                           ;main.c: 209:                             break;
  4439                           	goto	l5437
  4440  0AF4  2E74               	line	211
  4441                           ;main.c: 211:              case 70:
  4442                           	
  4443                           l421:	
  4444  0AF5                     	line	212
  4445                           	
  4446                           l5303:	
  4447  0AF5                     ;main.c: 212:                             if( meAtuadores == 3 && botao != 2 )
  4448                           		movlw	3
  4449  0AF5  3003               	bsf	status, 5	;RP0=1, select bank1
  4450  0AF6  1683               	bcf	status, 6	;RP1=0, select bank1
  4451  0AF7  1303               	xorwf	((main@meAtuadores)^080h),w
  4452  0AF8  0649               	btfss	status,2
  4453  0AF9  1D03               	goto	u4371
  4454  0AFA  2AFC               	goto	u4370
  4455  0AFB  2AFD               u4371:
  4456  0AFC                     	goto	l5315
  4457  0AFC  2B94               u4370:
  4458  0AFD                     	
  4459                           l5305:	
  4460  0AFD                     		movlw	2
  4461  0AFD  3002               	xorwf	((main@botao)^080h),w
  4462  0AFE  064F               	btfsc	status,2
  4463  0AFF  1903               	goto	u4381
  4464  0B00  2B02               	goto	u4380
  4465  0B01  2B03               u4381:
  4466  0B02                     	goto	l5315
  4467  0B02  2B94               u4380:
  4468  0B03                     	line	214
  4469                           	
  4470                           l5307:	
  4471  0B03                     ;main.c: 213:                             {;main.c: 214:                                
                                  dispLCD(0, 0, "     [    ]     ");
  4472                           	bcf	status, 5	;RP0=0, select bank0
  4473  0B03  1283               	bcf	status, 6	;RP1=0, select bank0
  4474  0B04  1303               	clrf	(dispLCD@col)
  4475  0B05  01A6               	movlw	low(((STR_9)|8000h))
  4476  0B06  3033               	movwf	(dispLCD@str)
  4477  0B07  00A7               	movlw	high(((STR_9)|8000h))
  4478  0B08  3090               	movwf	((dispLCD@str))+1
  4479  0B09  00A8               	movlw	low(0)
  4480  0B0A  3000               	fcall	_dispLCD
  4481  0B0B  120A  118A  2783  120A  158A  	line	215
  4482                           ;main.c: 215:                                 printExec(1, -1);
  4483                           	movlw	low(0FFh)
  4484  0B10  30FF               	bcf	status, 5	;RP0=0, select bank0
  4485  0B11  1283               	bcf	status, 6	;RP1=0, select bank0
  4486  0B12  1303               	movwf	(??_main+0)+0
  4487  0B13  00C4               	movf	(??_main+0)+0,w
  4488  0B14  0844               	movwf	(printExec@ind)
  4489  0B15  00B9               	movlw	low(01h)
  4490  0B16  3001               	fcall	_printExec
  4491  0B17  120A  118A  237D  120A  158A  	line	216
  4492                           ;main.c: 216:                                 printExec(7, 0);
  4493                           	bcf	status, 5	;RP0=0, select bank0
  4494  0B1C  1283               	bcf	status, 6	;RP1=0, select bank0
  4495  0B1D  1303               	clrf	(printExec@ind)
  4496  0B1E  01B9               	movlw	low(07h)
  4497  0B1F  3007               	fcall	_printExec
  4498  0B20  120A  118A  237D  120A  158A  	line	217
  4499                           ;main.c: 217:                                 printExec(12, 1);
  4500                           	bcf	status, 5	;RP0=0, select bank0
  4501  0B25  1283               	bcf	status, 6	;RP1=0, select bank0
  4502  0B26  1303               	clrf	(printExec@ind)
  4503  0B27  01B9               	incf	(printExec@ind),f
  4504  0B28  0AB9               	movlw	low(0Ch)
  4505  0B29  300C               	fcall	_printExec
  4506  0B2A  120A  118A  237D  120A  158A  	line	218
  4507                           ;main.c: 218:                                 dispLCD(1, 0, "<  /  > c:      ");
  4508                           	bcf	status, 5	;RP0=0, select bank0
  4509  0B2F  1283               	bcf	status, 6	;RP1=0, select bank0
  4510  0B30  1303               	clrf	(dispLCD@col)
  4511  0B31  01A6               	movlw	low(((STR_10)|8000h))
  4512  0B32  3022               	movwf	(dispLCD@str)
  4513  0B33  00A7               	movlw	high(((STR_10)|8000h))
  4514  0B34  3090               	movwf	((dispLCD@str))+1
  4515  0B35  00A8               	movlw	low(01h)
  4516  0B36  3001               	fcall	_dispLCD
  4517  0B37  120A  118A  2783  120A  158A  	line	219
  4518                           	
  4519                           l5309:	
  4520  0B3C                     ;main.c: 219:                                 dispLCD_num(1, 4,( fifo_indice() - 2 ), 2)
                                 ;
  4521                           	movlw	low(04h)
  4522  0B3C  3004               	bcf	status, 5	;RP0=0, select bank0
  4523  0B3D  1283               	bcf	status, 6	;RP1=0, select bank0
  4524  0B3E  1303               	movwf	(??_main+0)+0
  4525  0B3F  00C4               	movf	(??_main+0)+0,w
  4526  0B40  0844               	movwf	(dispLCD_num@col)
  4527  0B41  00AD               	fcall	_fifo_indice
  4528  0B42  160A  118A  23CC  120A  158A  	addlw	low(-2)
  4529  0B47  3EFE               	bcf	status, 5	;RP0=0, select bank0
  4530  0B48  1283               	bcf	status, 6	;RP1=0, select bank0
  4531  0B49  1303               	movwf	(dispLCD_num@num)
  4532  0B4A  00AE               	movlw	high(-2)
  4533  0B4B  30FF               	skipnc
  4534  0B4C  1803               	movlw	(high(-2)+1)&0ffh
  4535  0B4D  3000               	movwf	((dispLCD_num@num))+1
  4536  0B4E  00AF               	movlw	low(02h)
  4537  0B4F  3002               	movwf	(??_main+1)+0
  4538  0B50  00C5               	movf	(??_main+1)+0,w
  4539  0B51  0845               	movwf	(dispLCD_num@tam)
  4540  0B52  00B0               	movlw	low(01h)
  4541  0B53  3001               	fcall	_dispLCD_num
  4542  0B54  120A  118A  228D  120A  158A  	line	220
  4543                           	
  4544                           l5311:	
  4545  0B59                     ;main.c: 220:                                 dispLCD_num(1, 1, ( getIndicePassos() - 1 
                                 ), 2);
  4546                           	bcf	status, 5	;RP0=0, select bank0
  4547  0B59  1283               	bcf	status, 6	;RP1=0, select bank0
  4548  0B5A  1303               	clrf	(dispLCD_num@col)
  4549  0B5B  01AD               	incf	(dispLCD_num@col),f
  4550  0B5C  0AAD               	fcall	_getIndicePassos
  4551  0B5D  160A  118A  23C9  120A  158A  	addlw	low(-1)
  4552  0B62  3EFF               	bcf	status, 5	;RP0=0, select bank0
  4553  0B63  1283               	bcf	status, 6	;RP1=0, select bank0
  4554  0B64  1303               	movwf	(dispLCD_num@num)
  4555  0B65  00AE               	movlw	high(-1)
  4556  0B66  30FF               	skipnc
  4557  0B67  1803               	movlw	(high(-1)+1)&0ffh
  4558  0B68  3000               	movwf	((dispLCD_num@num))+1
  4559  0B69  00AF               	movlw	low(02h)
  4560  0B6A  3002               	movwf	(??_main+0)+0
  4561  0B6B  00C4               	movf	(??_main+0)+0,w
  4562  0B6C  0844               	movwf	(dispLCD_num@tam)
  4563  0B6D  00B0               	movlw	low(01h)
  4564  0B6E  3001               	fcall	_dispLCD_num
  4565  0B6F  120A  118A  228D  120A  158A  	line	221
  4566                           	
  4567                           l5313:	
  4568  0B74                     ;main.c: 221:                                 dispLCD_num(1, 11, ( getContCiclos() + 1 )
                                 , 5);
  4569                           	movlw	low(0Bh)
  4570  0B74  300B               	bcf	status, 5	;RP0=0, select bank0
  4571  0B75  1283               	bcf	status, 6	;RP1=0, select bank0
  4572  0B76  1303               	movwf	(??_main+0)+0
  4573  0B77  00C4               	movf	(??_main+0)+0,w
  4574  0B78  0844               	movwf	(dispLCD_num@col)
  4575  0B79  00AD               	fcall	_getContCiclos
  4576  0B7A  160A  118A  23F0  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  4577  0B7F  1283               	bcf	status, 6	;RP1=0, select bank0
  4578  0B80  1303               	movf	(0+(?_getContCiclos)),w
  4579  0B81  0820               	addlw	low(01h)
  4580  0B82  3E01               	movwf	(dispLCD_num@num)
  4581  0B83  00AE               	movf	(1+(?_getContCiclos)),w
  4582  0B84  0821               	skipnc
  4583  0B85  1803               	addlw	1
  4584  0B86  3E01               	addlw	high(01h)
  4585  0B87  3E00               	movwf	1+(dispLCD_num@num)
  4586  0B88  00AF               	movlw	low(05h)
  4587  0B89  3005               	movwf	(??_main+1)+0
  4588  0B8A  00C5               	movf	(??_main+1)+0,w
  4589  0B8B  0845               	movwf	(dispLCD_num@tam)
  4590  0B8C  00B0               	movlw	low(01h)
  4591  0B8D  3001               	fcall	_dispLCD_num
  4592  0B8E  120A  118A  228D  120A  158A  	goto	l5315
  4593  0B93  2B94               	line	223
  4594                           ;main.c: 223:                             }
  4595                           	
  4596                           l422:	
  4597  0B94                     	line	224
  4598                           	
  4599                           l5315:	
  4600  0B94                     ;main.c: 224:                             if(meAtuadores == 0)
  4601                           	bsf	status, 5	;RP0=1, select bank1
  4602  0B94  1683               	bcf	status, 6	;RP1=0, select bank1
  4603  0B95  1303               	movf	((main@meAtuadores)^080h),w
  4604  0B96  0849               	btfss	status,2
  4605  0B97  1D03               	goto	u4391
  4606  0B98  2B9A               	goto	u4390
  4607  0B99  2B9B               u4391:
  4608  0B9A                     	goto	l5321
  4609  0B9A  2BA9               u4390:
  4610  0B9B                     	line	226
  4611                           	
  4612                           l5317:	
  4613  0B9B                     ;main.c: 225:                             {;main.c: 226:                                
                                  estado = 16;
  4614                           	movlw	low(010h)
  4615  0B9B  3010               	bcf	status, 5	;RP0=0, select bank0
  4616  0B9C  1283               	bcf	status, 6	;RP1=0, select bank0
  4617  0B9D  1303               	movwf	(??_main+0)+0
  4618  0B9E  00C4               	movf	(??_main+0)+0,w
  4619  0B9F  0844               	bsf	status, 5	;RP0=1, select bank1
  4620  0BA0  1683               	bcf	status, 6	;RP1=0, select bank1
  4621  0BA1  1303               	movwf	(main@estado)^080h
  4622  0BA2  00D0               	line	227
  4623                           	
  4624                           l5319:	
  4625  0BA3                     ;main.c: 227:                                 dispLCD_clr();
  4626                           	fcall	_dispLCD_clr
  4627  0BA3  160A  118A  23E2  120A  158A  	goto	l5321
  4628  0BA8  2BA9               	line	228
  4629                           ;main.c: 228:                             }
  4630                           	
  4631                           l423:	
  4632  0BA9                     	line	229
  4633                           	
  4634                           l5321:	
  4635  0BA9                     ;main.c: 229:                             tecla = teclado_borda();
  4636                           	fcall	_teclado_borda
  4637  0BA9  160A  118A  2532  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  4638  0BAE  1283               	bcf	status, 6	;RP1=0, select bank0
  4639  0BAF  1303               	movwf	(??_main+0)+0
  4640  0BB0  00C4               	movf	(??_main+0)+0,w
  4641  0BB1  0844               	bsf	status, 5	;RP0=1, select bank1
  4642  0BB2  1683               	bcf	status, 6	;RP1=0, select bank1
  4643  0BB3  1303               	movwf	(main@tecla)^080h
  4644  0BB4  00D1               	line	230
  4645                           ;main.c: 230:                             switch(tecla)
  4646                           	goto	l5333
  4647  0BB5  2BDA               	line	232
  4648                           ;main.c: 231:                             {;main.c: 232:                                
                                  case '#':
  4649                           	
  4650                           l425:	
  4651  0BB6                     	line	233
  4652                           ;main.c: 233:                                     botao = 1;
  4653                           	bsf	status, 5	;RP0=1, select bank1
  4654  0BB6  1683               	bcf	status, 6	;RP1=0, select bank1
  4655  0BB7  1303               	clrf	(main@botao)^080h
  4656  0BB8  01CF               	incf	(main@botao)^080h,f
  4657  0BB9  0ACF               	line	234
  4658                           ;main.c: 234:                                     break;
  4659                           	goto	l5437
  4660  0BBA  2E74               	line	236
  4661                           ;main.c: 236:                                 case '5':
  4662                           	
  4663                           l427:	
  4664  0BBB                     	line	237
  4665                           	
  4666                           l5323:	
  4667  0BBB                     ;main.c: 237:                                     botao = 2;
  4668                           	movlw	low(02h)
  4669  0BBB  3002               	bcf	status, 5	;RP0=0, select bank0
  4670  0BBC  1283               	movwf	(??_main+0)+0
  4671  0BBD  00C4               	movf	(??_main+0)+0,w
  4672  0BBE  0844               	bsf	status, 5	;RP0=1, select bank1
  4673  0BBF  1683               	bcf	status, 6	;RP1=0, select bank1
  4674  0BC0  1303               	movwf	(main@botao)^080h
  4675  0BC1  00CF               	line	238
  4676                           ;main.c: 238:                                     break;
  4677                           	goto	l5437
  4678  0BC2  2E74               	line	240
  4679                           ;main.c: 240:                                 case '0':
  4680                           	
  4681                           l428:	
  4682  0BC3                     	line	241
  4683                           	
  4684                           l5325:	
  4685  0BC3                     ;main.c: 241:                                     botao = 0;
  4686                           	bsf	status, 5	;RP0=1, select bank1
  4687  0BC3  1683               	bcf	status, 6	;RP1=0, select bank1
  4688  0BC4  1303               	clrf	(main@botao)^080h
  4689  0BC5  01CF               	line	242
  4690                           ;main.c: 242:                                     break;
  4691                           	goto	l5437
  4692  0BC6  2E74               	line	244
  4693                           ;main.c: 244:                                 case '1':
  4694                           	
  4695                           l429:	
  4696  0BC7                     	line	245
  4697                           	
  4698                           l5327:	
  4699  0BC7                     ;main.c: 245:                                     if(botao == 2)
  4700                           		movlw	2
  4701  0BC7  3002               	bsf	status, 5	;RP0=1, select bank1
  4702  0BC8  1683               	bcf	status, 6	;RP1=0, select bank1
  4703  0BC9  1303               	xorwf	((main@botao)^080h),w
  4704  0BCA  064F               	btfss	status,2
  4705  0BCB  1D03               	goto	u4401
  4706  0BCC  2BCE               	goto	u4400
  4707  0BCD  2BCF               u4401:
  4708  0BCE                     	goto	l5437
  4709  0BCE  2E74               u4400:
  4710  0BCF                     	line	246
  4711                           	
  4712                           l5329:	
  4713  0BCF                     ;main.c: 246:                                         botao = 3;
  4714                           	movlw	low(03h)
  4715  0BCF  3003               	bcf	status, 5	;RP0=0, select bank0
  4716  0BD0  1283               	bcf	status, 6	;RP1=0, select bank0
  4717  0BD1  1303               	movwf	(??_main+0)+0
  4718  0BD2  00C4               	movf	(??_main+0)+0,w
  4719  0BD3  0844               	bsf	status, 5	;RP0=1, select bank1
  4720  0BD4  1683               	bcf	status, 6	;RP1=0, select bank1
  4721  0BD5  1303               	movwf	(main@botao)^080h
  4722  0BD6  00CF               	goto	l5437
  4723  0BD7  2E74               	
  4724                           l430:	
  4725  0BD8                     	line	247
  4726                           ;main.c: 247:                                     break;
  4727                           	goto	l5437
  4728  0BD8  2E74               	line	248
  4729                           	
  4730                           l5331:	
  4731  0BD9                     ;main.c: 248:                             }
  4732                           	goto	l5437
  4733  0BD9  2E74               	
  4734                           l424:	
  4735  0BDA                     	
  4736                           l5333:	
  4737  0BDA                     	movf	(main@tecla)^080h,w
  4738  0BDA  0851               	bcf	status, 5	;RP0=0, select bank0
  4739  0BDB  1283               	bcf	status, 6	;RP1=0, select bank0
  4740  0BDC  1303               	movwf	(??_main+0)+0
  4741  0BDD  00C4               	clrf	(??_main+0)+0+1
  4742  0BDE  01C5               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4743                           ; Switch size 1, requested type "space"
  4744                           ; Number of cases is 1, Range of values is 0 to 0
  4745                           ; switch strategies available:
  4746                           ; Name         Instructions Cycles
  4747                           ; simple_byte            4     3 (average)
  4748                           ; direct_byte           11     8 (fixed)
  4749                           ; jumptable            260     6 (fixed)
  4750                           ;	Chosen strategy is simple_byte
  4751                           
  4752                           	movf 1+(??_main+0)+0,w
  4753  0BDF  0845               	opt asmopt_push
  4754                           	opt asmopt_off
  4755                           	xorlw	0^0	; case 0
  4756  0BE0  3A00               	skipnz
  4757  0BE1  1903               	goto	l5787
  4758  0BE2  2BE4               	goto	l5437
  4759  0BE3  2E74               	opt asmopt_pop
  4760                           	
  4761                           l5787:	
  4762  0BE4                     ; Switch size 1, requested type "space"
  4763                           ; Number of cases is 4, Range of values is 35 to 53
  4764                           ; switch strategies available:
  4765                           ; Name         Instructions Cycles
  4766                           ; simple_byte           13     7 (average)
  4767                           ; direct_byte           68    11 (fixed)
  4768                           ; jumptable            263     9 (fixed)
  4769                           ;	Chosen strategy is simple_byte
  4770                           
  4771                           	movf 0+(??_main+0)+0,w
  4772  0BE4  0844               	opt asmopt_push
  4773                           	opt asmopt_off
  4774                           	xorlw	35^0	; case 35
  4775  0BE5  3A23               	skipnz
  4776  0BE6  1903               	goto	l425
  4777  0BE7  2BB6               	xorlw	48^35	; case 48
  4778  0BE8  3A13               	skipnz
  4779  0BE9  1903               	goto	l5325
  4780  0BEA  2BC3               	xorlw	49^48	; case 49
  4781  0BEB  3A01               	skipnz
  4782  0BEC  1903               	goto	l5327
  4783  0BED  2BC7               	xorlw	53^49	; case 53
  4784  0BEE  3A04               	skipnz
  4785  0BEF  1903               	goto	l5323
  4786  0BF0  2BBB               	goto	l5437
  4787  0BF1  2E74               	opt asmopt_pop
  4788                           
  4789                           	
  4790                           l426:	
  4791  0BF2                     	line	249
  4792                           ;main.c: 249:                             break;
  4793                           	goto	l5437
  4794  0BF2  2E74               	line	251
  4795                           ;main.c: 251:              case 40:
  4796                           	
  4797                           l431:	
  4798  0BF3                     	line	252
  4799                           	
  4800                           l5335:	
  4801  0BF3                     ;main.c: 252:                             tecla = teclado_borda();
  4802                           	fcall	_teclado_borda
  4803  0BF3  160A  118A  2532  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  4804  0BF8  1283               	bcf	status, 6	;RP1=0, select bank0
  4805  0BF9  1303               	movwf	(??_main+0)+0
  4806  0BFA  00C4               	movf	(??_main+0)+0,w
  4807  0BFB  0844               	bsf	status, 5	;RP0=1, select bank1
  4808  0BFC  1683               	bcf	status, 6	;RP1=0, select bank1
  4809  0BFD  1303               	movwf	(main@tecla)^080h
  4810  0BFE  00D1               	line	253
  4811                           	
  4812                           l5337:	
  4813  0BFF                     ;main.c: 253:                             if(tecla >= '0' && tecla <= '9')
  4814                           	movlw	low(030h)
  4815  0BFF  3030               	subwf	(main@tecla)^080h,w
  4816  0C00  0251               	skipc
  4817  0C01  1C03               	goto	u4411
  4818  0C02  2C04               	goto	u4410
  4819  0C03  2C05               u4411:
  4820  0C04                     	goto	l5347
  4821  0C04  2C31               u4410:
  4822  0C05                     	
  4823                           l5339:	
  4824  0C05                     	movlw	low(03Ah)
  4825  0C05  303A               	subwf	(main@tecla)^080h,w
  4826  0C06  0251               	skipnc
  4827  0C07  1803               	goto	u4421
  4828  0C08  2C0A               	goto	u4420
  4829  0C09  2C0B               u4421:
  4830  0C0A                     	goto	l5347
  4831  0C0A  2C31               u4420:
  4832  0C0B                     	line	255
  4833                           	
  4834                           l5341:	
  4835  0C0B                     ;main.c: 254:                             {;main.c: 255:                                
                                  dignum_conc(tecla, &num);
  4836                           	movlw	(low(main@num|((0x0)<<8)))&0ffh
  4837  0C0B  30CA               	bcf	status, 5	;RP0=0, select bank0
  4838  0C0C  1283               	bcf	status, 6	;RP1=0, select bank0
  4839  0C0D  1303               	movwf	(??_main+0)+0
  4840  0C0E  00C4               	movf	(??_main+0)+0,w
  4841  0C0F  0844               	movwf	(dignum_conc@ptrNum)
  4842  0C10  00A6               	bsf	status, 5	;RP0=1, select bank1
  4843  0C11  1683               	bcf	status, 6	;RP1=0, select bank1
  4844  0C12  1303               	movf	(main@tecla)^080h,w
  4845  0C13  0851               	fcall	_dignum_conc
  4846  0C14  160A  118A  2697  120A  158A  	line	256
  4847                           	
  4848                           l5343:	
  4849  0C19                     ;main.c: 256:                                 if(num > 120)
  4850                           	movlw	0
  4851  0C19  3000               	bsf	status, 5	;RP0=1, select bank1
  4852  0C1A  1683               	bcf	status, 6	;RP1=0, select bank1
  4853  0C1B  1303               	subwf	(main@num+1)^080h,w
  4854  0C1C  024B               	movlw	079h
  4855  0C1D  3079               	skipnz
  4856  0C1E  1903               	subwf	(main@num)^080h,w
  4857  0C1F  024A               	skipc
  4858  0C20  1C03               	goto	u4431
  4859  0C21  2C23               	goto	u4430
  4860  0C22  2C24               u4431:
  4861  0C23                     	goto	l433
  4862  0C23  2C28               u4430:
  4863  0C24                     	line	257
  4864                           	
  4865                           l5345:	
  4866  0C24                     ;main.c: 257:                                     num = 120;
  4867                           	movlw	078h
  4868  0C24  3078               	movwf	(main@num)^080h
  4869  0C25  00CA               	movlw	0
  4870  0C26  3000               	movwf	((main@num)^080h)+1
  4871  0C27  00CB               	
  4872                           l433:	
  4873  0C28                     	line	258
  4874                           ;main.c: 258:                                 estado = 41;
  4875                           	movlw	low(029h)
  4876  0C28  3029               	bcf	status, 5	;RP0=0, select bank0
  4877  0C29  1283               	bcf	status, 6	;RP1=0, select bank0
  4878  0C2A  1303               	movwf	(??_main+0)+0
  4879  0C2B  00C4               	movf	(??_main+0)+0,w
  4880  0C2C  0844               	bsf	status, 5	;RP0=1, select bank1
  4881  0C2D  1683               	bcf	status, 6	;RP1=0, select bank1
  4882  0C2E  1303               	movwf	(main@estado)^080h
  4883  0C2F  00D0               	goto	l5347
  4884  0C30  2C31               	line	259
  4885                           ;main.c: 259:                             }
  4886                           	
  4887                           l432:	
  4888  0C31                     	line	260
  4889                           	
  4890                           l5347:	
  4891  0C31                     ;main.c: 260:                             if(tecla == '*')
  4892                           		movlw	42
  4893  0C31  302A               	xorwf	((main@tecla)^080h),w
  4894  0C32  0651               	btfss	status,2
  4895  0C33  1D03               	goto	u4441
  4896  0C34  2C36               	goto	u4440
  4897  0C35  2C37               u4441:
  4898  0C36                     	goto	l5353
  4899  0C36  2C46               u4440:
  4900  0C37                     	line	262
  4901                           	
  4902                           l5349:	
  4903  0C37                     ;main.c: 261:                             {;main.c: 262:                                
                                  dignum_apagar(&num);
  4904                           	movlw	(low(main@num|((0x0)<<8)))&0ffh
  4905  0C37  30CA               	fcall	_dignum_apagar
  4906  0C38  160A  118A  24F4  120A  158A  	line	263
  4907                           	
  4908                           l5351:	
  4909  0C3D                     ;main.c: 263:                                 estado = 41;
  4910                           	movlw	low(029h)
  4911  0C3D  3029               	bcf	status, 5	;RP0=0, select bank0
  4912  0C3E  1283               	bcf	status, 6	;RP1=0, select bank0
  4913  0C3F  1303               	movwf	(??_main+0)+0
  4914  0C40  00C4               	movf	(??_main+0)+0,w
  4915  0C41  0844               	bsf	status, 5	;RP0=1, select bank1
  4916  0C42  1683               	bcf	status, 6	;RP1=0, select bank1
  4917  0C43  1303               	movwf	(main@estado)^080h
  4918  0C44  00D0               	goto	l5353
  4919  0C45  2C46               	line	264
  4920                           ;main.c: 264:                             }
  4921                           	
  4922                           l434:	
  4923  0C46                     	line	265
  4924                           	
  4925                           l5353:	
  4926  0C46                     ;main.c: 265:                             if(tecla == '#')
  4927                           		movlw	35
  4928  0C46  3023               	xorwf	((main@tecla)^080h),w
  4929  0C47  0651               	btfss	status,2
  4930  0C48  1D03               	goto	u4451
  4931  0C49  2C4B               	goto	u4450
  4932  0C4A  2C4C               u4451:
  4933  0C4B                     	goto	l5437
  4934  0C4B  2E74               u4450:
  4935  0C4C                     	line	266
  4936                           	
  4937                           l5355:	
  4938  0C4C                     ;main.c: 266:                                 estado = 42;
  4939                           	movlw	low(02Ah)
  4940  0C4C  302A               	bcf	status, 5	;RP0=0, select bank0
  4941  0C4D  1283               	bcf	status, 6	;RP1=0, select bank0
  4942  0C4E  1303               	movwf	(??_main+0)+0
  4943  0C4F  00C4               	movf	(??_main+0)+0,w
  4944  0C50  0844               	bsf	status, 5	;RP0=1, select bank1
  4945  0C51  1683               	bcf	status, 6	;RP1=0, select bank1
  4946  0C52  1303               	movwf	(main@estado)^080h
  4947  0C53  00D0               	goto	l5437
  4948  0C54  2E74               	
  4949                           l435:	
  4950  0C55                     	line	267
  4951                           ;main.c: 267:                             break;
  4952                           	goto	l5437
  4953  0C55  2E74               	line	269
  4954                           ;main.c: 269:              case 41:
  4955                           	
  4956                           l436:	
  4957  0C56                     	line	270
  4958                           	
  4959                           l5357:	
  4960  0C56                     ;main.c: 270:                             dispLCD(1, 0, "cfg tempo:     s");
  4961                           	bcf	status, 5	;RP0=0, select bank0
  4962  0C56  1283               	clrf	(dispLCD@col)
  4963  0C57  01A6               	movlw	low(((STR_11)|8000h))
  4964  0C58  30CC               	movwf	(dispLCD@str)
  4965  0C59  00A7               	movlw	high(((STR_11)|8000h))
  4966  0C5A  3090               	movwf	((dispLCD@str))+1
  4967  0C5B  00A8               	movlw	low(01h)
  4968  0C5C  3001               	fcall	_dispLCD
  4969  0C5D  120A  118A  2783  120A  158A  	line	271
  4970                           	
  4971                           l5359:	
  4972  0C62                     ;main.c: 271:                             dispLCD_num(1, 11, num, 3);
  4973                           	movlw	low(0Bh)
  4974  0C62  300B               	bcf	status, 5	;RP0=0, select bank0
  4975  0C63  1283               	bcf	status, 6	;RP1=0, select bank0
  4976  0C64  1303               	movwf	(??_main+0)+0
  4977  0C65  00C4               	movf	(??_main+0)+0,w
  4978  0C66  0844               	movwf	(dispLCD_num@col)
  4979  0C67  00AD               	bsf	status, 5	;RP0=1, select bank1
  4980  0C68  1683               	bcf	status, 6	;RP1=0, select bank1
  4981  0C69  1303               	movf	(main@num+1)^080h,w
  4982  0C6A  084B               	bcf	status, 5	;RP0=0, select bank0
  4983  0C6B  1283               	bcf	status, 6	;RP1=0, select bank0
  4984  0C6C  1303               	movwf	(dispLCD_num@num+1)
  4985  0C6D  00AF               	bsf	status, 5	;RP0=1, select bank1
  4986  0C6E  1683               	bcf	status, 6	;RP1=0, select bank1
  4987  0C6F  1303               	movf	(main@num)^080h,w
  4988  0C70  084A               	bcf	status, 5	;RP0=0, select bank0
  4989  0C71  1283               	bcf	status, 6	;RP1=0, select bank0
  4990  0C72  1303               	movwf	(dispLCD_num@num)
  4991  0C73  00AE               	movlw	low(03h)
  4992  0C74  3003               	movwf	(??_main+1)+0
  4993  0C75  00C5               	movf	(??_main+1)+0,w
  4994  0C76  0845               	movwf	(dispLCD_num@tam)
  4995  0C77  00B0               	movlw	low(01h)
  4996  0C78  3001               	fcall	_dispLCD_num
  4997  0C79  120A  118A  228D  120A  158A  	line	272
  4998                           	
  4999                           l5361:	
  5000  0C7E                     ;main.c: 272:                             estado = 40;
  5001                           	movlw	low(028h)
  5002  0C7E  3028               	bcf	status, 5	;RP0=0, select bank0
  5003  0C7F  1283               	bcf	status, 6	;RP1=0, select bank0
  5004  0C80  1303               	movwf	(??_main+0)+0
  5005  0C81  00C4               	movf	(??_main+0)+0,w
  5006  0C82  0844               	bsf	status, 5	;RP0=1, select bank1
  5007  0C83  1683               	bcf	status, 6	;RP1=0, select bank1
  5008  0C84  1303               	movwf	(main@estado)^080h
  5009  0C85  00D0               	line	273
  5010                           ;main.c: 273:                             break;
  5011                           	goto	l5437
  5012  0C86  2E74               	line	275
  5013                           ;main.c: 275:              case 42:
  5014                           	
  5015                           l437:	
  5016  0C87                     	line	276
  5017                           	
  5018                           l5363:	
  5019  0C87                     ;main.c: 276:                             fifo_add_tempo(num);
  5020                           	bsf	status, 5	;RP0=1, select bank1
  5021  0C87  1683               	bcf	status, 6	;RP1=0, select bank1
  5022  0C88  1303               	movf	(main@num)^080h,w
  5023  0C89  084A               	fcall	_fifo_add_tempo
  5024  0C8A  160A  118A  25C6  120A  158A  	line	277
  5025                           	
  5026                           l5365:	
  5027  0C8F                     ;main.c: 277:                             dispLCD_clr();
  5028                           	fcall	_dispLCD_clr
  5029  0C8F  160A  118A  23E2  120A  158A  	line	278
  5030                           	
  5031                           l5367:	
  5032  0C94                     ;main.c: 278:                             estado = 16;
  5033                           	movlw	low(010h)
  5034  0C94  3010               	bcf	status, 5	;RP0=0, select bank0
  5035  0C95  1283               	bcf	status, 6	;RP1=0, select bank0
  5036  0C96  1303               	movwf	(??_main+0)+0
  5037  0C97  00C4               	movf	(??_main+0)+0,w
  5038  0C98  0844               	bsf	status, 5	;RP0=1, select bank1
  5039  0C99  1683               	bcf	status, 6	;RP1=0, select bank1
  5040  0C9A  1303               	movwf	(main@estado)^080h
  5041  0C9B  00D0               	line	279
  5042                           ;main.c: 279:                             break;
  5043                           	goto	l5437
  5044  0C9C  2E74               	line	281
  5045                           ;main.c: 281:              case 50:
  5046                           	
  5047                           l438:	
  5048  0C9D                     	line	282
  5049                           	
  5050                           l5369:	
  5051  0C9D                     ;main.c: 282:                             dispLCD_clr();
  5052                           	fcall	_dispLCD_clr
  5053  0C9D  160A  118A  23E2  120A  158A  	line	283
  5054                           	
  5055                           l5371:	
  5056  0CA2                     ;main.c: 283:                             dispLCD(0, 0, "    Tela de     ");
  5057                           	bcf	status, 5	;RP0=0, select bank0
  5058  0CA2  1283               	bcf	status, 6	;RP1=0, select bank0
  5059  0CA3  1303               	clrf	(dispLCD@col)
  5060  0CA4  01A6               	movlw	low(((STR_12)|8000h))
  5061  0CA5  3044               	movwf	(dispLCD@str)
  5062  0CA6  00A7               	movlw	high(((STR_12)|8000h))
  5063  0CA7  3090               	movwf	((dispLCD@str))+1
  5064  0CA8  00A8               	movlw	low(0)
  5065  0CA9  3000               	fcall	_dispLCD
  5066  0CAA  120A  118A  2783  120A  158A  	line	284
  5067                           	
  5068                           l5373:	
  5069  0CAF                     ;main.c: 284:                             dispLCD(1, 0, "   Repeticao    ");
  5070                           	bcf	status, 5	;RP0=0, select bank0
  5071  0CAF  1283               	bcf	status, 6	;RP1=0, select bank0
  5072  0CB0  1303               	clrf	(dispLCD@col)
  5073  0CB1  01A6               	movlw	low(((STR_13)|8000h))
  5074  0CB2  3055               	movwf	(dispLCD@str)
  5075  0CB3  00A7               	movlw	high(((STR_13)|8000h))
  5076  0CB4  3090               	movwf	((dispLCD@str))+1
  5077  0CB5  00A8               	movlw	low(01h)
  5078  0CB6  3001               	fcall	_dispLCD
  5079  0CB7  120A  118A  2783  120A  158A  	line	285
  5080                           ;main.c: 285:                             setT1(2000);
  5081                           	movlw	0
  5082  0CBC  3000               	bcf	status, 5	;RP0=0, select bank0
  5083  0CBD  1283               	bcf	status, 6	;RP1=0, select bank0
  5084  0CBE  1303               	movwf	(setT1@c+3)
  5085  0CBF  00B0               	movlw	0
  5086  0CC0  3000               	movwf	(setT1@c+2)
  5087  0CC1  00AF               	movlw	07h
  5088  0CC2  3007               	movwf	(setT1@c+1)
  5089  0CC3  00AE               	movlw	0D0h
  5090  0CC4  30D0               	movwf	(setT1@c)
  5091  0CC5  00AD               
  5092                           	fcall	_setT1
  5093  0CC6  160A  118A  242A  120A  158A  	line	286
  5094                           	
  5095                           l5375:	
  5096  0CCB                     ;main.c: 286:                             estado = 51;
  5097                           	movlw	low(033h)
  5098  0CCB  3033               	bcf	status, 5	;RP0=0, select bank0
  5099  0CCC  1283               	bcf	status, 6	;RP1=0, select bank0
  5100  0CCD  1303               	movwf	(??_main+0)+0
  5101  0CCE  00C4               	movf	(??_main+0)+0,w
  5102  0CCF  0844               	bsf	status, 5	;RP0=1, select bank1
  5103  0CD0  1683               	bcf	status, 6	;RP1=0, select bank1
  5104  0CD1  1303               	movwf	(main@estado)^080h
  5105  0CD2  00D0               	line	287
  5106                           ;main.c: 287:                             break;
  5107                           	goto	l5437
  5108  0CD3  2E74               	line	289
  5109                           ;main.c: 289:              case 51:
  5110                           	
  5111                           l439:	
  5112  0CD4                     	line	290
  5113                           	
  5114                           l5377:	
  5115  0CD4                     ;main.c: 290:                             if(!statusT1())
  5116                           	fcall	_statusT1
  5117  0CD4  160A  118A  2436  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  5118  0CD9  1283               	bcf	status, 6	;RP1=0, select bank0
  5119  0CDA  1303               	movf	(3+(?_statusT1)),w
  5120  0CDB  0823               	iorwf	(2+(?_statusT1)),w
  5121  0CDC  0422               	iorwf	(1+(?_statusT1)),w
  5122  0CDD  0421               	iorwf	(0+(?_statusT1)),w
  5123  0CDE  0420               	skipz
  5124  0CDF  1D03               	goto	u4461
  5125  0CE0  2CE2               	goto	u4460
  5126  0CE1  2CE3               u4461:
  5127  0CE2                     	goto	l5437
  5128  0CE2  2E74               u4460:
  5129  0CE3                     	line	292
  5130                           	
  5131                           l5379:	
  5132  0CE3                     ;main.c: 291:                             {;main.c: 292:                                
                                  dispLCD_clr();
  5133                           	fcall	_dispLCD_clr
  5134  0CE3  160A  118A  23E2  120A  158A  	line	293
  5135                           	
  5136                           l5381:	
  5137  0CE8                     ;main.c: 293:                                 dispLCD(0, 0, "Digite o numero ");
  5138                           	bcf	status, 5	;RP0=0, select bank0
  5139  0CE8  1283               	bcf	status, 6	;RP1=0, select bank0
  5140  0CE9  1303               	clrf	(dispLCD@col)
  5141  0CEA  01A6               	movlw	low(((STR_14)|8000h))
  5142  0CEB  30AA               	movwf	(dispLCD@str)
  5143  0CEC  00A7               	movlw	high(((STR_14)|8000h))
  5144  0CED  3090               	movwf	((dispLCD@str))+1
  5145  0CEE  00A8               	movlw	low(0)
  5146  0CEF  3000               	fcall	_dispLCD
  5147  0CF0  120A  118A  2783  120A  158A  	line	294
  5148                           	
  5149                           l5383:	
  5150  0CF5                     ;main.c: 294:                                 dispLCD(1, 0, " de repeticoes  ");
  5151                           	bcf	status, 5	;RP0=0, select bank0
  5152  0CF5  1283               	bcf	status, 6	;RP1=0, select bank0
  5153  0CF6  1303               	clrf	(dispLCD@col)
  5154  0CF7  01A6               	movlw	low(((STR_15)|8000h))
  5155  0CF8  3088               	movwf	(dispLCD@str)
  5156  0CF9  00A7               	movlw	high(((STR_15)|8000h))
  5157  0CFA  3090               	movwf	((dispLCD@str))+1
  5158  0CFB  00A8               	movlw	low(01h)
  5159  0CFC  3001               	fcall	_dispLCD
  5160  0CFD  120A  118A  2783  120A  158A  	line	295
  5161                           ;main.c: 295:                                 setT1(2000);
  5162                           	movlw	0
  5163  0D02  3000               	bcf	status, 5	;RP0=0, select bank0
  5164  0D03  1283               	bcf	status, 6	;RP1=0, select bank0
  5165  0D04  1303               	movwf	(setT1@c+3)
  5166  0D05  00B0               	movlw	0
  5167  0D06  3000               	movwf	(setT1@c+2)
  5168  0D07  00AF               	movlw	07h
  5169  0D08  3007               	movwf	(setT1@c+1)
  5170  0D09  00AE               	movlw	0D0h
  5171  0D0A  30D0               	movwf	(setT1@c)
  5172  0D0B  00AD               
  5173                           	fcall	_setT1
  5174  0D0C  160A  118A  242A  120A  158A  	line	296
  5175                           	
  5176                           l5385:	
  5177  0D11                     ;main.c: 296:                                 estado = 52;
  5178                           	movlw	low(034h)
  5179  0D11  3034               	bcf	status, 5	;RP0=0, select bank0
  5180  0D12  1283               	bcf	status, 6	;RP1=0, select bank0
  5181  0D13  1303               	movwf	(??_main+0)+0
  5182  0D14  00C4               	movf	(??_main+0)+0,w
  5183  0D15  0844               	bsf	status, 5	;RP0=1, select bank1
  5184  0D16  1683               	bcf	status, 6	;RP1=0, select bank1
  5185  0D17  1303               	movwf	(main@estado)^080h
  5186  0D18  00D0               	goto	l5437
  5187  0D19  2E74               	line	297
  5188                           ;main.c: 297:                             }
  5189                           	
  5190                           l440:	
  5191  0D1A                     	line	298
  5192                           ;main.c: 298:                             break;
  5193                           	goto	l5437
  5194  0D1A  2E74               	line	300
  5195                           ;main.c: 300:              case 55:
  5196                           	
  5197                           l441:	
  5198  0D1B                     	line	301
  5199                           	
  5200                           l5387:	
  5201  0D1B                     ;main.c: 301:                             if(!statusT1())
  5202                           	fcall	_statusT1
  5203  0D1B  160A  118A  2436  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  5204  0D20  1283               	bcf	status, 6	;RP1=0, select bank0
  5205  0D21  1303               	movf	(3+(?_statusT1)),w
  5206  0D22  0823               	iorwf	(2+(?_statusT1)),w
  5207  0D23  0422               	iorwf	(1+(?_statusT1)),w
  5208  0D24  0421               	iorwf	(0+(?_statusT1)),w
  5209  0D25  0420               	skipz
  5210  0D26  1D03               	goto	u4471
  5211  0D27  2D29               	goto	u4470
  5212  0D28  2D2A               u4471:
  5213  0D29                     	goto	l5437
  5214  0D29  2E74               u4470:
  5215  0D2A                     	line	303
  5216                           	
  5217                           l5389:	
  5218  0D2A                     ;main.c: 302:                             {;main.c: 303:                                
                                 dispLCD_clr();
  5219                           	fcall	_dispLCD_clr
  5220  0D2A  160A  118A  23E2  120A  158A  	line	304
  5221                           	
  5222                           l5391:	
  5223  0D2F                     ;main.c: 304:                                estado = 53;
  5224                           	movlw	low(035h)
  5225  0D2F  3035               	bcf	status, 5	;RP0=0, select bank0
  5226  0D30  1283               	bcf	status, 6	;RP1=0, select bank0
  5227  0D31  1303               	movwf	(??_main+0)+0
  5228  0D32  00C4               	movf	(??_main+0)+0,w
  5229  0D33  0844               	bsf	status, 5	;RP0=1, select bank1
  5230  0D34  1683               	bcf	status, 6	;RP1=0, select bank1
  5231  0D35  1303               	movwf	(main@estado)^080h
  5232  0D36  00D0               	goto	l5437
  5233  0D37  2E74               	line	305
  5234                           ;main.c: 305:                             }
  5235                           	
  5236                           l442:	
  5237  0D38                     	line	306
  5238                           ;main.c: 306:                             break;
  5239                           	goto	l5437
  5240  0D38  2E74               	line	309
  5241                           ;main.c: 309:              case 52:
  5242                           	
  5243                           l443:	
  5244  0D39                     	line	310
  5245                           	
  5246                           l5393:	
  5247  0D39                     ;main.c: 310:                             tecla = teclado_borda();
  5248                           	fcall	_teclado_borda
  5249  0D39  160A  118A  2532  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  5250  0D3E  1283               	bcf	status, 6	;RP1=0, select bank0
  5251  0D3F  1303               	movwf	(??_main+0)+0
  5252  0D40  00C4               	movf	(??_main+0)+0,w
  5253  0D41  0844               	bsf	status, 5	;RP0=1, select bank1
  5254  0D42  1683               	bcf	status, 6	;RP1=0, select bank1
  5255  0D43  1303               	movwf	(main@tecla)^080h
  5256  0D44  00D1               	line	311
  5257                           	
  5258                           l5395:	
  5259  0D45                     ;main.c: 311:                             if(tecla >= '0' && tecla <= '9')
  5260                           	movlw	low(030h)
  5261  0D45  3030               	subwf	(main@tecla)^080h,w
  5262  0D46  0251               	skipc
  5263  0D47  1C03               	goto	u4481
  5264  0D48  2D4A               	goto	u4480
  5265  0D49  2D4B               u4481:
  5266  0D4A                     	goto	l5417
  5267  0D4A  2DA8               u4480:
  5268  0D4B                     	
  5269                           l5397:	
  5270  0D4B                     	movlw	low(03Ah)
  5271  0D4B  303A               	subwf	(main@tecla)^080h,w
  5272  0D4C  0251               	skipnc
  5273  0D4D  1803               	goto	u4491
  5274  0D4E  2D50               	goto	u4490
  5275  0D4F  2D51               u4491:
  5276  0D50                     	goto	l5417
  5277  0D50  2DA8               u4490:
  5278  0D51                     	line	313
  5279                           	
  5280                           l5399:	
  5281  0D51                     ;main.c: 312:                                {;main.c: 313:                             
                                     dignum_conc(tecla, &ciclos);
  5282                           	movlw	(low(main@ciclos|((0x0)<<8)))&0ffh
  5283  0D51  30CC               	bcf	status, 5	;RP0=0, select bank0
  5284  0D52  1283               	bcf	status, 6	;RP1=0, select bank0
  5285  0D53  1303               	movwf	(??_main+0)+0
  5286  0D54  00C4               	movf	(??_main+0)+0,w
  5287  0D55  0844               	movwf	(dignum_conc@ptrNum)
  5288  0D56  00A6               	bsf	status, 5	;RP0=1, select bank1
  5289  0D57  1683               	bcf	status, 6	;RP1=0, select bank1
  5290  0D58  1303               	movf	(main@tecla)^080h,w
  5291  0D59  0851               	fcall	_dignum_conc
  5292  0D5A  160A  118A  2697  120A  158A  	line	314
  5293                           	
  5294                           l5401:	
  5295  0D5F                     ;main.c: 314:                                 if(ciclos > 10000)
  5296                           	movlw	027h
  5297  0D5F  3027               	bsf	status, 5	;RP0=1, select bank1
  5298  0D60  1683               	bcf	status, 6	;RP1=0, select bank1
  5299  0D61  1303               	subwf	(main@ciclos+1)^080h,w
  5300  0D62  024D               	movlw	011h
  5301  0D63  3011               	skipnz
  5302  0D64  1903               	subwf	(main@ciclos)^080h,w
  5303  0D65  024C               	skipc
  5304  0D66  1C03               	goto	u4501
  5305  0D67  2D69               	goto	u4500
  5306  0D68  2D6A               u4501:
  5307  0D69                     	goto	l445
  5308  0D69  2D6E               u4500:
  5309  0D6A                     	line	315
  5310                           	
  5311                           l5403:	
  5312  0D6A                     ;main.c: 315:                                     ciclos = 10000;
  5313                           	movlw	010h
  5314  0D6A  3010               	movwf	(main@ciclos)^080h
  5315  0D6B  00CC               	movlw	027h
  5316  0D6C  3027               	movwf	((main@ciclos)^080h)+1
  5317  0D6D  00CD               	
  5318                           l445:	
  5319  0D6E                     	line	316
  5320                           ;main.c: 316:                                 estado = 53;
  5321                           	movlw	low(035h)
  5322  0D6E  3035               	bcf	status, 5	;RP0=0, select bank0
  5323  0D6F  1283               	bcf	status, 6	;RP1=0, select bank0
  5324  0D70  1303               	movwf	(??_main+0)+0
  5325  0D71  00C4               	movf	(??_main+0)+0,w
  5326  0D72  0844               	bsf	status, 5	;RP0=1, select bank1
  5327  0D73  1683               	bcf	status, 6	;RP1=0, select bank1
  5328  0D74  1303               	movwf	(main@estado)^080h
  5329  0D75  00D0               	line	317
  5330                           ;main.c: 317:                                 break;
  5331                           	goto	l5437
  5332  0D76  2E74               	line	318
  5333                           ;main.c: 318:                                }
  5334                           	
  5335                           l444:	
  5336  0D77                     	line	319
  5337                           ;main.c: 319:                             switch(tecla)
  5338                           	goto	l5417
  5339  0D77  2DA8               	line	321
  5340                           ;main.c: 320:                                {;main.c: 321:                             
                                        case 'A':
  5341                           	
  5342                           l447:	
  5343  0D78                     	goto	l5405
  5344  0D78  2D7B               	line	322
  5345                           ;main.c: 322:                                    case 'B':
  5346                           	
  5347                           l448:	
  5348  0D79                     	goto	l5405
  5349  0D79  2D7B               	line	323
  5350                           ;main.c: 323:                                    case 'C':
  5351                           	
  5352                           l449:	
  5353  0D7A                     	goto	l5405
  5354  0D7A  2D7B               	line	324
  5355                           ;main.c: 324:                                    case 'D':
  5356                           	
  5357                           l450:	
  5358  0D7B                     	line	325
  5359                           	
  5360                           l5405:	
  5361  0D7B                     ;main.c: 325:                                        dispLCD(1, 0, "                ");

  5362                           	bcf	status, 5	;RP0=0, select bank0
  5363  0D7B  1283               	clrf	(dispLCD@col)
  5364  0D7C  01A6               	movlw	low(((STR_16)|8000h))
  5365  0D7D  3000               	movwf	(dispLCD@str)
  5366  0D7E  00A7               	movlw	high(((STR_16)|8000h))
  5367  0D7F  3090               	movwf	((dispLCD@str))+1
  5368  0D80  00A8               	movlw	low(01h)
  5369  0D81  3001               	fcall	_dispLCD
  5370  0D82  120A  118A  2783  120A  158A  	line	326
  5371                           	
  5372                           l5407:	
  5373  0D87                     ;main.c: 326:                                        estado = 16;
  5374                           	movlw	low(010h)
  5375  0D87  3010               	bcf	status, 5	;RP0=0, select bank0
  5376  0D88  1283               	bcf	status, 6	;RP1=0, select bank0
  5377  0D89  1303               	movwf	(??_main+0)+0
  5378  0D8A  00C4               	movf	(??_main+0)+0,w
  5379  0D8B  0844               	bsf	status, 5	;RP0=1, select bank1
  5380  0D8C  1683               	bcf	status, 6	;RP1=0, select bank1
  5381  0D8D  1303               	movwf	(main@estado)^080h
  5382  0D8E  00D0               	line	327
  5383                           ;main.c: 327:                                        break;
  5384                           	goto	l5437
  5385  0D8F  2E74               	line	328
  5386                           ;main.c: 328:                                    case '#':
  5387                           	
  5388                           l452:	
  5389  0D90                     	line	329
  5390                           	
  5391                           l5409:	
  5392  0D90                     ;main.c: 329:                                        estado = 54;
  5393                           	movlw	low(036h)
  5394  0D90  3036               	bcf	status, 5	;RP0=0, select bank0
  5395  0D91  1283               	movwf	(??_main+0)+0
  5396  0D92  00C4               	movf	(??_main+0)+0,w
  5397  0D93  0844               	bsf	status, 5	;RP0=1, select bank1
  5398  0D94  1683               	bcf	status, 6	;RP1=0, select bank1
  5399  0D95  1303               	movwf	(main@estado)^080h
  5400  0D96  00D0               	line	330
  5401                           ;main.c: 330:                                        break;
  5402                           	goto	l5437
  5403  0D97  2E74               	line	331
  5404                           ;main.c: 331:                                    case '*':
  5405                           	
  5406                           l453:	
  5407  0D98                     	line	332
  5408                           	
  5409                           l5411:	
  5410  0D98                     ;main.c: 332:                                        dignum_apagar(&ciclos);
  5411                           	movlw	(low(main@ciclos|((0x0)<<8)))&0ffh
  5412  0D98  30CC               	fcall	_dignum_apagar
  5413  0D99  160A  118A  24F4  120A  158A  	line	333
  5414                           	
  5415                           l5413:	
  5416  0D9E                     ;main.c: 333:                                        estado = 53;
  5417                           	movlw	low(035h)
  5418  0D9E  3035               	bcf	status, 5	;RP0=0, select bank0
  5419  0D9F  1283               	bcf	status, 6	;RP1=0, select bank0
  5420  0DA0  1303               	movwf	(??_main+0)+0
  5421  0DA1  00C4               	movf	(??_main+0)+0,w
  5422  0DA2  0844               	bsf	status, 5	;RP0=1, select bank1
  5423  0DA3  1683               	bcf	status, 6	;RP1=0, select bank1
  5424  0DA4  1303               	movwf	(main@estado)^080h
  5425  0DA5  00D0               	line	334
  5426                           ;main.c: 334:                                        break;
  5427                           	goto	l5437
  5428  0DA6  2E74               	line	335
  5429                           	
  5430                           l5415:	
  5431  0DA7                     ;main.c: 335:                                }
  5432                           	goto	l5437
  5433  0DA7  2E74               	
  5434                           l446:	
  5435  0DA8                     	
  5436                           l5417:	
  5437  0DA8                     	movf	(main@tecla)^080h,w
  5438  0DA8  0851               	bcf	status, 5	;RP0=0, select bank0
  5439  0DA9  1283               	bcf	status, 6	;RP1=0, select bank0
  5440  0DAA  1303               	movwf	(??_main+0)+0
  5441  0DAB  00C4               	clrf	(??_main+0)+0+1
  5442  0DAC  01C5               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  5443                           ; Switch size 1, requested type "space"
  5444                           ; Number of cases is 1, Range of values is 0 to 0
  5445                           ; switch strategies available:
  5446                           ; Name         Instructions Cycles
  5447                           ; simple_byte            4     3 (average)
  5448                           ; direct_byte           11     8 (fixed)
  5449                           ; jumptable            260     6 (fixed)
  5450                           ;	Chosen strategy is simple_byte
  5451                           
  5452                           	movf 1+(??_main+0)+0,w
  5453  0DAD  0845               	opt asmopt_push
  5454                           	opt asmopt_off
  5455                           	xorlw	0^0	; case 0
  5456  0DAE  3A00               	skipnz
  5457  0DAF  1903               	goto	l5789
  5458  0DB0  2DB2               	goto	l5437
  5459  0DB1  2E74               	opt asmopt_pop
  5460                           	
  5461                           l5789:	
  5462  0DB2                     ; Switch size 1, requested type "space"
  5463                           ; Number of cases is 6, Range of values is 35 to 68
  5464                           ; switch strategies available:
  5465                           ; Name         Instructions Cycles
  5466                           ; simple_byte           19    10 (average)
  5467                           ; direct_byte          113    11 (fixed)
  5468                           ; jumptable            263     9 (fixed)
  5469                           ;	Chosen strategy is simple_byte
  5470                           
  5471                           	movf 0+(??_main+0)+0,w
  5472  0DB2  0844               	opt asmopt_push
  5473                           	opt asmopt_off
  5474                           	xorlw	35^0	; case 35
  5475  0DB3  3A23               	skipnz
  5476  0DB4  1903               	goto	l5409
  5477  0DB5  2D90               	xorlw	42^35	; case 42
  5478  0DB6  3A09               	skipnz
  5479  0DB7  1903               	goto	l5411
  5480  0DB8  2D98               	xorlw	65^42	; case 65
  5481  0DB9  3A6B               	skipnz
  5482  0DBA  1903               	goto	l5405
  5483  0DBB  2D7B               	xorlw	66^65	; case 66
  5484  0DBC  3A03               	skipnz
  5485  0DBD  1903               	goto	l5405
  5486  0DBE  2D7B               	xorlw	67^66	; case 67
  5487  0DBF  3A01               	skipnz
  5488  0DC0  1903               	goto	l5405
  5489  0DC1  2D7B               	xorlw	68^67	; case 68
  5490  0DC2  3A07               	skipnz
  5491  0DC3  1903               	goto	l5405
  5492  0DC4  2D7B               	goto	l5437
  5493  0DC5  2E74               	opt asmopt_pop
  5494                           
  5495                           	
  5496                           l451:	
  5497  0DC6                     	line	336
  5498                           ;main.c: 336:                             break;
  5499                           	goto	l5437
  5500  0DC6  2E74               	line	338
  5501                           ;main.c: 338:              case 53:
  5502                           	
  5503                           l454:	
  5504  0DC7                     	line	339
  5505                           	
  5506                           l5419:	
  5507  0DC7                     ;main.c: 339:                             dispLCD(0, 0, "Ciclos:         ");
  5508                           	clrf	(dispLCD@col)
  5509  0DC7  01A6               	movlw	low(((STR_17)|8000h))
  5510  0DC8  3011               	movwf	(dispLCD@str)
  5511  0DC9  00A7               	movlw	high(((STR_17)|8000h))
  5512  0DCA  3090               	movwf	((dispLCD@str))+1
  5513  0DCB  00A8               	movlw	low(0)
  5514  0DCC  3000               	fcall	_dispLCD
  5515  0DCD  120A  118A  2783  120A  158A  	line	340
  5516                           	
  5517                           l5421:	
  5518  0DD2                     ;main.c: 340:                             dispLCD_num(0, 8, ciclos, 5);
  5519                           	movlw	low(08h)
  5520  0DD2  3008               	bcf	status, 5	;RP0=0, select bank0
  5521  0DD3  1283               	bcf	status, 6	;RP1=0, select bank0
  5522  0DD4  1303               	movwf	(??_main+0)+0
  5523  0DD5  00C4               	movf	(??_main+0)+0,w
  5524  0DD6  0844               	movwf	(dispLCD_num@col)
  5525  0DD7  00AD               	bsf	status, 5	;RP0=1, select bank1
  5526  0DD8  1683               	bcf	status, 6	;RP1=0, select bank1
  5527  0DD9  1303               	movf	(main@ciclos+1)^080h,w
  5528  0DDA  084D               	bcf	status, 5	;RP0=0, select bank0
  5529  0DDB  1283               	bcf	status, 6	;RP1=0, select bank0
  5530  0DDC  1303               	movwf	(dispLCD_num@num+1)
  5531  0DDD  00AF               	bsf	status, 5	;RP0=1, select bank1
  5532  0DDE  1683               	bcf	status, 6	;RP1=0, select bank1
  5533  0DDF  1303               	movf	(main@ciclos)^080h,w
  5534  0DE0  084C               	bcf	status, 5	;RP0=0, select bank0
  5535  0DE1  1283               	bcf	status, 6	;RP1=0, select bank0
  5536  0DE2  1303               	movwf	(dispLCD_num@num)
  5537  0DE3  00AE               	movlw	low(05h)
  5538  0DE4  3005               	movwf	(??_main+1)+0
  5539  0DE5  00C5               	movf	(??_main+1)+0,w
  5540  0DE6  0845               	movwf	(dispLCD_num@tam)
  5541  0DE7  00B0               	movlw	low(0)
  5542  0DE8  3000               	fcall	_dispLCD_num
  5543  0DE9  120A  118A  228D  120A  158A  	line	341
  5544                           	
  5545                           l5423:	
  5546  0DEE                     ;main.c: 341:                             dispLCD(1, 0, "0-Ciclo continuo");
  5547                           	bcf	status, 5	;RP0=0, select bank0
  5548  0DEE  1283               	bcf	status, 6	;RP1=0, select bank0
  5549  0DEF  1303               	clrf	(dispLCD@col)
  5550  0DF0  01A6               	movlw	low(((STR_18)|8000h))
  5551  0DF1  30BB               	movwf	(dispLCD@str)
  5552  0DF2  00A7               	movlw	high(((STR_18)|8000h))
  5553  0DF3  3090               	movwf	((dispLCD@str))+1
  5554  0DF4  00A8               	movlw	low(01h)
  5555  0DF5  3001               	fcall	_dispLCD
  5556  0DF6  120A  118A  2783  120A  158A  	line	342
  5557                           	
  5558                           l5425:	
  5559  0DFB                     ;main.c: 342:                             estado = 52;
  5560                           	movlw	low(034h)
  5561  0DFB  3034               	bcf	status, 5	;RP0=0, select bank0
  5562  0DFC  1283               	bcf	status, 6	;RP1=0, select bank0
  5563  0DFD  1303               	movwf	(??_main+0)+0
  5564  0DFE  00C4               	movf	(??_main+0)+0,w
  5565  0DFF  0844               	bsf	status, 5	;RP0=1, select bank1
  5566  0E00  1683               	bcf	status, 6	;RP1=0, select bank1
  5567  0E01  1303               	movwf	(main@estado)^080h
  5568  0E02  00D0               	line	343
  5569                           ;main.c: 343:                             break;
  5570                           	goto	l5437
  5571  0E03  2E74               	line	345
  5572                           ;main.c: 345:              case 54:
  5573                           	
  5574                           l455:	
  5575  0E04                     	line	346
  5576                           	
  5577                           l5427:	
  5578  0E04                     ;main.c: 346:                             fifo_add_ciclo(ciclos);
  5579                           	bsf	status, 5	;RP0=1, select bank1
  5580  0E04  1683               	bcf	status, 6	;RP1=0, select bank1
  5581  0E05  1303               	movf	(main@ciclos+1)^080h,w
  5582  0E06  084D               	bcf	status, 5	;RP0=0, select bank0
  5583  0E07  1283               	bcf	status, 6	;RP1=0, select bank0
  5584  0E08  1303               	movwf	(fifo_add_ciclo@ciclos+1)
  5585  0E09  00A1               	bsf	status, 5	;RP0=1, select bank1
  5586  0E0A  1683               	bcf	status, 6	;RP1=0, select bank1
  5587  0E0B  1303               	movf	(main@ciclos)^080h,w
  5588  0E0C  084C               	bcf	status, 5	;RP0=0, select bank0
  5589  0E0D  1283               	bcf	status, 6	;RP1=0, select bank0
  5590  0E0E  1303               	movwf	(fifo_add_ciclo@ciclos)
  5591  0E0F  00A0               	fcall	_fifo_add_ciclo
  5592  0E10  160A  118A  2450  120A  158A  	line	347
  5593                           	
  5594                           l5429:	
  5595  0E15                     ;main.c: 347:                             estado = 30;
  5596                           	movlw	low(01Eh)
  5597  0E15  301E               	bcf	status, 5	;RP0=0, select bank0
  5598  0E16  1283               	bcf	status, 6	;RP1=0, select bank0
  5599  0E17  1303               	movwf	(??_main+0)+0
  5600  0E18  00C4               	movf	(??_main+0)+0,w
  5601  0E19  0844               	bsf	status, 5	;RP0=1, select bank1
  5602  0E1A  1683               	bcf	status, 6	;RP1=0, select bank1
  5603  0E1B  1303               	movwf	(main@estado)^080h
  5604  0E1C  00D0               	line	348
  5605                           	
  5606                           l5431:	
  5607  0E1D                     ;main.c: 348:                             botao = 1;
  5608                           	clrf	(main@botao)^080h
  5609  0E1D  01CF               	incf	(main@botao)^080h,f
  5610  0E1E  0ACF               	line	349
  5611                           ;main.c: 349:                             break;
  5612                           	goto	l5437
  5613  0E1F  2E74               	line	350
  5614                           	
  5615                           l5433:	
  5616  0E20                     ;main.c: 350:         }
  5617                           	goto	l5437
  5618  0E20  2E74               	
  5619                           l357:	
  5620  0E21                     	
  5621                           l5435:	
  5622  0E21                     	bsf	status, 5	;RP0=1, select bank1
  5623  0E21  1683               	bcf	status, 6	;RP1=0, select bank1
  5624  0E22  1303               	movf	(main@estado)^080h,w
  5625  0E23  0850               	bcf	status, 5	;RP0=0, select bank0
  5626  0E24  1283               	bcf	status, 6	;RP1=0, select bank0
  5627  0E25  1303               	movwf	(??_main+0)+0
  5628  0E26  00C4               	clrf	(??_main+0)+0+1
  5629  0E27  01C5               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  5630                           ; Switch size 1, requested type "space"
  5631                           ; Number of cases is 1, Range of values is 0 to 0
  5632                           ; switch strategies available:
  5633                           ; Name         Instructions Cycles
  5634                           ; simple_byte            4     3 (average)
  5635                           ; direct_byte           11     8 (fixed)
  5636                           ; jumptable            260     6 (fixed)
  5637                           ;	Chosen strategy is simple_byte
  5638                           
  5639                           	movf 1+(??_main+0)+0,w
  5640  0E28  0845               	opt asmopt_push
  5641                           	opt asmopt_off
  5642                           	xorlw	0^0	; case 0
  5643  0E29  3A00               	skipnz
  5644  0E2A  1903               	goto	l5791
  5645  0E2B  2E2D               	goto	l5437
  5646  0E2C  2E74               	opt asmopt_pop
  5647                           	
  5648                           l5791:	
  5649  0E2D                     ; Switch size 1, requested type "space"
  5650                           ; Number of cases is 23, Range of values is 0 to 70
  5651                           ; switch strategies available:
  5652                           ; Name         Instructions Cycles
  5653                           ; simple_byte           70    36 (average)
  5654                           ; direct_byte          221     8 (fixed)
  5655                           ; jumptable            260     6 (fixed)
  5656                           ;	Chosen strategy is simple_byte
  5657                           
  5658                           	movf 0+(??_main+0)+0,w
  5659  0E2D  0844               	opt asmopt_push
  5660                           	opt asmopt_off
  5661                           	xorlw	0^0	; case 0
  5662  0E2E  3A00               	skipnz
  5663  0E2F  1903               	goto	l5111
  5664  0E30  2FFD               	xorlw	1^0	; case 1
  5665  0E31  3A01               	skipnz
  5666  0E32  1903               	goto	l5159
  5667  0E33  2801               	xorlw	2^1	; case 2
  5668  0E34  3A03               	skipnz
  5669  0E35  1903               	goto	l5165
  5670  0E36  2828               	xorlw	3^2	; case 3
  5671  0E37  3A01               	skipnz
  5672  0E38  1903               	goto	l5169
  5673  0E39  283F               	xorlw	4^3	; case 4
  5674  0E3A  3A07               	skipnz
  5675  0E3B  1903               	goto	l5177
  5676  0E3C  2876               	xorlw	5^4	; case 5
  5677  0E3D  3A01               	skipnz
  5678  0E3E  1903               	goto	l5181
  5679  0E3F  288D               	xorlw	6^5	; case 6
  5680  0E40  3A03               	skipnz
  5681  0E41  1903               	goto	l5185
  5682  0E42  289B               	xorlw	7^6	; case 7
  5683  0E43  3A01               	skipnz
  5684  0E44  1903               	goto	l5191
  5685  0E45  28B6               	xorlw	10^7	; case 10
  5686  0E46  3A0D               	skipnz
  5687  0E47  1903               	goto	l5247
  5688  0E48  29B9               	xorlw	11^10	; case 11
  5689  0E49  3A01               	skipnz
  5690  0E4A  1903               	goto	l5253
  5691  0E4B  29D4               	xorlw	14^11	; case 14
  5692  0E4C  3A05               	skipnz
  5693  0E4D  1903               	goto	l5291
  5694  0E4E  2A9E               	xorlw	16^14	; case 16
  5695  0E4F  3A1E               	skipnz
  5696  0E50  1903               	goto	l5287
  5697  0E51  2A90               	xorlw	30^16	; case 30
  5698  0E52  3A0E               	skipnz
  5699  0E53  1903               	goto	l5299
  5700  0E54  2AEB               	xorlw	40^30	; case 40
  5701  0E55  3A36               	skipnz
  5702  0E56  1903               	goto	l5335
  5703  0E57  2BF3               	xorlw	41^40	; case 41
  5704  0E58  3A01               	skipnz
  5705  0E59  1903               	goto	l5357
  5706  0E5A  2C56               	xorlw	42^41	; case 42
  5707  0E5B  3A03               	skipnz
  5708  0E5C  1903               	goto	l5363
  5709  0E5D  2C87               	xorlw	50^42	; case 50
  5710  0E5E  3A18               	skipnz
  5711  0E5F  1903               	goto	l5369
  5712  0E60  2C9D               	xorlw	51^50	; case 51
  5713  0E61  3A01               	skipnz
  5714  0E62  1903               	goto	l5377
  5715  0E63  2CD4               	xorlw	52^51	; case 52
  5716  0E64  3A07               	skipnz
  5717  0E65  1903               	goto	l5393
  5718  0E66  2D39               	xorlw	53^52	; case 53
  5719  0E67  3A01               	skipnz
  5720  0E68  1903               	goto	l5419
  5721  0E69  2DC7               	xorlw	54^53	; case 54
  5722  0E6A  3A03               	skipnz
  5723  0E6B  1903               	goto	l5427
  5724  0E6C  2E04               	xorlw	55^54	; case 55
  5725  0E6D  3A01               	skipnz
  5726  0E6E  1903               	goto	l5387
  5727  0E6F  2D1B               	xorlw	70^55	; case 70
  5728  0E70  3A71               	skipnz
  5729  0E71  1903               	goto	l5303
  5730  0E72  2AF5               	goto	l5437
  5731  0E73  2E74               	opt asmopt_pop
  5732                           
  5733                           	
  5734                           l367:	
  5735  0E74                     	line	352
  5736                           	
  5737                           l5437:	
  5738  0E74                     ;main.c: 352:         serialIOscan();
  5739                           	fcall	_serialIOscan
  5740  0E74  120A  118A  27C2  120A  158A  	line	354
  5741                           ;main.c: 354:         switch(meAtuadores)
  5742                           	goto	l5497
  5743  0E79  2FCF               	line	356
  5744                           ;main.c: 355:         {;main.c: 356:             case 0: break;
  5745                           	
  5746                           l457:	
  5747  0E7A                     	goto	l5435
  5748  0E7A  2E21               	line	358
  5749                           ;main.c: 358:             case 1:
  5750                           	
  5751                           l459:	
  5752  0E7B                     	line	359
  5753                           	
  5754                           l5439:	
  5755  0E7B                     ;main.c: 359:                             resetIndicePassos();
  5756                           	fcall	_resetIndicePassos
  5757  0E7B  160A  118A  23E9  120A  158A  	line	360
  5758                           	
  5759                           l5441:	
  5760  0E80                     ;main.c: 360:                             resetContCiclos();
  5761                           	fcall	_resetContCiclos
  5762  0E80  120A  118A  27FD  120A  158A  	line	361
  5763                           ;main.c: 361:                             meAtuadores = 2;
  5764                           	movlw	low(02h)
  5765  0E85  3002               	bcf	status, 5	;RP0=0, select bank0
  5766  0E86  1283               	bcf	status, 6	;RP1=0, select bank0
  5767  0E87  1303               	movwf	(??_main+0)+0
  5768  0E88  00C4               	movf	(??_main+0)+0,w
  5769  0E89  0844               	bsf	status, 5	;RP0=1, select bank1
  5770  0E8A  1683               	bcf	status, 6	;RP1=0, select bank1
  5771  0E8B  1303               	movwf	(main@meAtuadores)^080h
  5772  0E8C  00C9               	line	362
  5773                           ;main.c: 362:                             break;
  5774                           	goto	l5435
  5775  0E8D  2E21               	line	364
  5776                           ;main.c: 364:             case 2:
  5777                           	
  5778                           l460:	
  5779  0E8E                     	line	365
  5780                           	
  5781                           l5443:	
  5782  0E8E                     ;main.c: 365:                             auxPasso = fifo_lerPos(getIndicePassos());
  5783                           	fcall	_getIndicePassos
  5784  0E8E  160A  118A  23C9  120A  158A  	fcall	_fifo_lerPos
  5785  0E93  160A  118A  2408  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  5786  0E98  1283               	bcf	status, 6	;RP1=0, select bank0
  5787  0E99  1303               	movwf	(??_main+0)+0
  5788  0E9A  00C4               	movf	(??_main+0)+0,w
  5789  0E9B  0844               	bsf	status, 5	;RP0=1, select bank1
  5790  0E9C  1683               	bcf	status, 6	;RP1=0, select bank1
  5791  0E9D  1303               	movwf	(main@auxPasso)^080h
  5792  0E9E  00C7               	line	367
  5793                           	
  5794                           l5445:	
  5795  0E9F                     ;main.c: 367:                             if(botao == 1 || botao == 3 || botao == 0)
  5796                           		decf	((main@botao)^080h),w
  5797  0E9F  034F               	btfsc	status,2
  5798  0EA0  1903               	goto	u4511
  5799  0EA1  2EA3               	goto	u4510
  5800  0EA2  2EA4               u4511:
  5801  0EA3                     	goto	l5451
  5802  0EA3  2EB0               u4510:
  5803  0EA4                     	
  5804                           l5447:	
  5805  0EA4                     		movlw	3
  5806  0EA4  3003               	xorwf	((main@botao)^080h),w
  5807  0EA5  064F               	btfsc	status,2
  5808  0EA6  1903               	goto	u4521
  5809  0EA7  2EA9               	goto	u4520
  5810  0EA8  2EAA               u4521:
  5811  0EA9                     	goto	l5451
  5812  0EA9  2EB0               u4520:
  5813  0EAA                     	
  5814                           l5449:	
  5815  0EAA                     	movf	((main@botao)^080h),w
  5816  0EAA  084F               	btfss	status,2
  5817  0EAB  1D03               	goto	u4531
  5818  0EAC  2EAE               	goto	u4530
  5819  0EAD  2EAF               u4531:
  5820  0EAE                     	goto	l5435
  5821  0EAE  2E21               u4530:
  5822  0EAF                     	goto	l5451
  5823  0EAF  2EB0               	
  5824                           l463:	
  5825  0EB0                     	line	368
  5826                           	
  5827                           l5451:	
  5828  0EB0                     ;main.c: 368:                                 meAtuadores = 3;
  5829                           	movlw	low(03h)
  5830  0EB0  3003               	bcf	status, 5	;RP0=0, select bank0
  5831  0EB1  1283               	bcf	status, 6	;RP1=0, select bank0
  5832  0EB2  1303               	movwf	(??_main+0)+0
  5833  0EB3  00C4               	movf	(??_main+0)+0,w
  5834  0EB4  0844               	bsf	status, 5	;RP0=1, select bank1
  5835  0EB5  1683               	bcf	status, 6	;RP1=0, select bank1
  5836  0EB6  1303               	movwf	(main@meAtuadores)^080h
  5837  0EB7  00C9               	goto	l5435
  5838  0EB8  2E21               	
  5839                           l461:	
  5840  0EB9                     	line	369
  5841                           ;main.c: 369:                             break;
  5842                           	goto	l5435
  5843  0EB9  2E21               	line	371
  5844                           ;main.c: 371:             case 3:
  5845                           	
  5846                           l464:	
  5847  0EBA                     	line	372
  5848                           ;main.c: 372:                             if(auxPasso & 0x80)
  5849                           	bsf	status, 5	;RP0=1, select bank1
  5850  0EBA  1683               	bcf	status, 6	;RP1=0, select bank1
  5851  0EBB  1303               	btfss	(main@auxPasso)^080h,(7)&7
  5852  0EBC  1FC7               	goto	u4541
  5853  0EBD  2EBF               	goto	u4540
  5854  0EBE  2EC0               u4541:
  5855  0EBF                     	goto	l5457
  5856  0EBF  2EF5               u4540:
  5857  0EC0                     	line	374
  5858                           	
  5859                           l5453:	
  5860  0EC0                     ;main.c: 373:                             {;main.c: 374:                                
                                  setT1( (unsigned long int)(auxPasso & 0x7F) * 1000 );
  5861                           	movf	(main@auxPasso)^080h,w
  5862  0EC0  0847               	andlw	07Fh
  5863  0EC1  397F               	bcf	status, 5	;RP0=0, select bank0
  5864  0EC2  1283               	bcf	status, 6	;RP1=0, select bank0
  5865  0EC3  1303               	movwf	(??_main+0)+0
  5866  0EC4  00C4               	clrf	((??_main+0)+0+1)
  5867  0EC5  01C5               	clrf	((??_main+0)+0+2)
  5868  0EC6  01C6               	clrf	((??_main+0)+0+3)
  5869  0EC7  01C7               	movf	3+(??_main+0)+0,w
  5870  0EC8  0847               	movwf	(___lmul@multiplier+3)
  5871  0EC9  00A3               	movf	2+(??_main+0)+0,w
  5872  0ECA  0846               	movwf	(___lmul@multiplier+2)
  5873  0ECB  00A2               	movf	1+(??_main+0)+0,w
  5874  0ECC  0845               	movwf	(___lmul@multiplier+1)
  5875  0ECD  00A1               	movf	0+(??_main+0)+0,w
  5876  0ECE  0844               	movwf	(___lmul@multiplier)
  5877  0ECF  00A0               
  5878                           	movlw	0
  5879  0ED0  3000               	movwf	(___lmul@multiplicand+3)
  5880  0ED1  00A7               	movlw	0
  5881  0ED2  3000               	movwf	(___lmul@multiplicand+2)
  5882  0ED3  00A6               	movlw	03h
  5883  0ED4  3003               	movwf	(___lmul@multiplicand+1)
  5884  0ED5  00A5               	movlw	0E8h
  5885  0ED6  30E8               	movwf	(___lmul@multiplicand)
  5886  0ED7  00A4               
  5887                           	fcall	___lmul
  5888  0ED8  120A  118A  2737  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  5889  0EDD  1283               	bcf	status, 6	;RP1=0, select bank0
  5890  0EDE  1303               	movf	(3+(?___lmul)),w
  5891  0EDF  0823               	movwf	(setT1@c+3)
  5892  0EE0  00B0               	movf	(2+(?___lmul)),w
  5893  0EE1  0822               	movwf	(setT1@c+2)
  5894  0EE2  00AF               	movf	(1+(?___lmul)),w
  5895  0EE3  0821               	movwf	(setT1@c+1)
  5896  0EE4  00AE               	movf	(0+(?___lmul)),w
  5897  0EE5  0820               	movwf	(setT1@c)
  5898  0EE6  00AD               
  5899                           	fcall	_setT1
  5900  0EE7  160A  118A  242A  120A  158A  	line	375
  5901                           	
  5902                           l5455:	
  5903  0EEC                     ;main.c: 375:                                 meAtuadores = 4;
  5904                           	movlw	low(04h)
  5905  0EEC  3004               	bcf	status, 5	;RP0=0, select bank0
  5906  0EED  1283               	bcf	status, 6	;RP1=0, select bank0
  5907  0EEE  1303               	movwf	(??_main+0)+0
  5908  0EEF  00C4               	movf	(??_main+0)+0,w
  5909  0EF0  0844               	bsf	status, 5	;RP0=1, select bank1
  5910  0EF1  1683               	bcf	status, 6	;RP1=0, select bank1
  5911  0EF2  1303               	movwf	(main@meAtuadores)^080h
  5912  0EF3  00C9               	line	376
  5913                           ;main.c: 376:                             }
  5914                           	goto	l5435
  5915  0EF4  2E21               	line	377
  5916                           ;main.c: 377:                             else
  5917                           	
  5918                           l465:	
  5919  0EF5                     	line	379
  5920                           	
  5921                           l5457:	
  5922  0EF5                     ;main.c: 378:                             {;main.c: 379:                                
                                  set_passo(auxPasso, vetorOut);
  5923                           	movlw	(low(main@vetorOut|((0x0)<<8)))&0ffh
  5924  0EF5  30CE               	bcf	status, 5	;RP0=0, select bank0
  5925  0EF6  1283               	bcf	status, 6	;RP1=0, select bank0
  5926  0EF7  1303               	movwf	(??_main+0)+0
  5927  0EF8  00C4               	movf	(??_main+0)+0,w
  5928  0EF9  0844               	movwf	(set_passo@ptr)
  5929  0EFA  00A0               	bsf	status, 5	;RP0=1, select bank1
  5930  0EFB  1683               	bcf	status, 6	;RP1=0, select bank1
  5931  0EFC  1303               	movf	(main@auxPasso)^080h,w
  5932  0EFD  0847               	fcall	_set_passo
  5933  0EFE  120A  118A  2634  120A  158A  	line	380
  5934                           	
  5935                           l5459:	
  5936  0F03                     ;main.c: 380:                                 meAtuadores = 5;
  5937                           	movlw	low(05h)
  5938  0F03  3005               	bcf	status, 5	;RP0=0, select bank0
  5939  0F04  1283               	bcf	status, 6	;RP1=0, select bank0
  5940  0F05  1303               	movwf	(??_main+0)+0
  5941  0F06  00C4               	movf	(??_main+0)+0,w
  5942  0F07  0844               	bsf	status, 5	;RP0=1, select bank1
  5943  0F08  1683               	bcf	status, 6	;RP1=0, select bank1
  5944  0F09  1303               	movwf	(main@meAtuadores)^080h
  5945  0F0A  00C9               	goto	l5435
  5946  0F0B  2E21               	line	381
  5947                           ;main.c: 381:                             }
  5948                           	
  5949                           l466:	
  5950  0F0C                     	line	382
  5951                           ;main.c: 382:                             break;
  5952                           	goto	l5435
  5953  0F0C  2E21               	line	384
  5954                           ;main.c: 384:             case 4:
  5955                           	
  5956                           l467:	
  5957  0F0D                     	line	385
  5958                           	
  5959                           l5461:	
  5960  0F0D                     ;main.c: 385:                             if(!statusT1())
  5961                           	fcall	_statusT1
  5962  0F0D  160A  118A  2436  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  5963  0F12  1283               	bcf	status, 6	;RP1=0, select bank0
  5964  0F13  1303               	movf	(3+(?_statusT1)),w
  5965  0F14  0823               	iorwf	(2+(?_statusT1)),w
  5966  0F15  0422               	iorwf	(1+(?_statusT1)),w
  5967  0F16  0421               	iorwf	(0+(?_statusT1)),w
  5968  0F17  0420               	skipz
  5969  0F18  1D03               	goto	u4551
  5970  0F19  2F1B               	goto	u4550
  5971  0F1A  2F1C               u4551:
  5972  0F1B                     	goto	l5435
  5973  0F1B  2E21               u4550:
  5974  0F1C                     	line	386
  5975                           	
  5976                           l5463:	
  5977  0F1C                     ;main.c: 386:                                 meAtuadores = 6;
  5978                           	movlw	low(06h)
  5979  0F1C  3006               	movwf	(??_main+0)+0
  5980  0F1D  00C4               	movf	(??_main+0)+0,w
  5981  0F1E  0844               	bsf	status, 5	;RP0=1, select bank1
  5982  0F1F  1683               	bcf	status, 6	;RP1=0, select bank1
  5983  0F20  1303               	movwf	(main@meAtuadores)^080h
  5984  0F21  00C9               	goto	l5435
  5985  0F22  2E21               	
  5986                           l468:	
  5987  0F23                     	line	387
  5988                           ;main.c: 387:                             break;
  5989                           	goto	l5435
  5990  0F23  2E21               	line	389
  5991                           ;main.c: 389:             case 5:
  5992                           	
  5993                           l469:	
  5994  0F24                     	line	390
  5995                           	
  5996                           l5465:	
  5997  0F24                     ;main.c: 390:                             if(ler_sensor(auxPasso, vetorIn))
  5998                           	movlw	(low(main@vetorIn|((0x0)<<8)))&0ffh
  5999  0F24  30C8               	bcf	status, 5	;RP0=0, select bank0
  6000  0F25  1283               	movwf	(??_main+0)+0
  6001  0F26  00C4               	movf	(??_main+0)+0,w
  6002  0F27  0844               	movwf	(ler_sensor@ptr)
  6003  0F28  00A0               	bsf	status, 5	;RP0=1, select bank1
  6004  0F29  1683               	bcf	status, 6	;RP1=0, select bank1
  6005  0F2A  1303               	movf	(main@auxPasso)^080h,w
  6006  0F2B  0847               	fcall	_ler_sensor
  6007  0F2C  120A  118A  2505  120A  158A  	xorlw	0
  6008  0F31  3A00               	skipnz
  6009  0F32  1903               	goto	u4561
  6010  0F33  2F35               	goto	u4560
  6011  0F34  2F36               u4561:
  6012  0F35                     	goto	l5435
  6013  0F35  2E21               u4560:
  6014  0F36                     	line	391
  6015                           	
  6016                           l5467:	
  6017  0F36                     ;main.c: 391:                                 meAtuadores = 6;
  6018                           	movlw	low(06h)
  6019  0F36  3006               	bcf	status, 5	;RP0=0, select bank0
  6020  0F37  1283               	bcf	status, 6	;RP1=0, select bank0
  6021  0F38  1303               	movwf	(??_main+0)+0
  6022  0F39  00C4               	movf	(??_main+0)+0,w
  6023  0F3A  0844               	bsf	status, 5	;RP0=1, select bank1
  6024  0F3B  1683               	bcf	status, 6	;RP1=0, select bank1
  6025  0F3C  1303               	movwf	(main@meAtuadores)^080h
  6026  0F3D  00C9               	goto	l5435
  6027  0F3E  2E21               	
  6028                           l470:	
  6029  0F3F                     	line	392
  6030                           ;main.c: 392:                             break;
  6031                           	goto	l5435
  6032  0F3F  2E21               	line	394
  6033                           ;main.c: 394:             case 6:
  6034                           	
  6035                           l471:	
  6036  0F40                     	line	395
  6037                           	
  6038                           l5469:	
  6039  0F40                     ;main.c: 395:                             if(botao == 3)
  6040                           		movlw	3
  6041  0F40  3003               	bsf	status, 5	;RP0=1, select bank1
  6042  0F41  1683               	bcf	status, 6	;RP1=0, select bank1
  6043  0F42  1303               	xorwf	((main@botao)^080h),w
  6044  0F43  064F               	btfss	status,2
  6045  0F44  1D03               	goto	u4571
  6046  0F45  2F47               	goto	u4570
  6047  0F46  2F48               u4571:
  6048  0F47                     	goto	l472
  6049  0F47  2F50               u4570:
  6050  0F48                     	line	397
  6051                           	
  6052                           l5471:	
  6053  0F48                     ;main.c: 396:                             {;main.c: 397:                                
                                  botao = 2;
  6054                           	movlw	low(02h)
  6055  0F48  3002               	bcf	status, 5	;RP0=0, select bank0
  6056  0F49  1283               	bcf	status, 6	;RP1=0, select bank0
  6057  0F4A  1303               	movwf	(??_main+0)+0
  6058  0F4B  00C4               	movf	(??_main+0)+0,w
  6059  0F4C  0844               	bsf	status, 5	;RP0=1, select bank1
  6060  0F4D  1683               	bcf	status, 6	;RP1=0, select bank1
  6061  0F4E  1303               	movwf	(main@botao)^080h
  6062  0F4F  00CF               	line	398
  6063                           ;main.c: 398:                             }
  6064                           	
  6065                           l472:	
  6066  0F50                     	line	399
  6067                           ;main.c: 399:                             meAtuadores = 7;
  6068                           	movlw	low(07h)
  6069  0F50  3007               	bcf	status, 5	;RP0=0, select bank0
  6070  0F51  1283               	bcf	status, 6	;RP1=0, select bank0
  6071  0F52  1303               	movwf	(??_main+0)+0
  6072  0F53  00C4               	movf	(??_main+0)+0,w
  6073  0F54  0844               	bsf	status, 5	;RP0=1, select bank1
  6074  0F55  1683               	bcf	status, 6	;RP1=0, select bank1
  6075  0F56  1303               	movwf	(main@meAtuadores)^080h
  6076  0F57  00C9               	line	401
  6077                           ;main.c: 401:                             break;
  6078                           	goto	l5435
  6079  0F58  2E21               	line	403
  6080                           ;main.c: 403:             case 7:
  6081                           	
  6082                           l473:	
  6083  0F59                     	line	404
  6084                           	
  6085                           l5473:	
  6086  0F59                     ;main.c: 404:                             addIndicePassos();
  6087                           	fcall	_addIndicePassos
  6088  0F59  160A  118A  2442  120A  158A  	line	405
  6089                           	
  6090                           l5475:	
  6091  0F5E                     ;main.c: 405:                             if(getIndicePassos() < fifo_indice())
  6092                           	fcall	_fifo_indice
  6093  0F5E  160A  118A  23CC  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  6094  0F63  1283               	bcf	status, 6	;RP1=0, select bank0
  6095  0F64  1303               	movwf	(??_main+0)+0
  6096  0F65  00C4               	fcall	_getIndicePassos
  6097  0F66  160A  118A  23C9  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  6098  0F6B  1283               	bcf	status, 6	;RP1=0, select bank0
  6099  0F6C  1303               	movwf	(??_main+1)+0
  6100  0F6D  00C5               	movf	(??_main+0)+0,w
  6101  0F6E  0844               	subwf	(??_main+1)+0,w
  6102  0F6F  0245               	skipnc
  6103  0F70  1803               	goto	u4581
  6104  0F71  2F73               	goto	u4580
  6105  0F72  2F74               u4581:
  6106  0F73                     	goto	l5479
  6107  0F73  2F7B               u4580:
  6108  0F74                     	line	406
  6109                           	
  6110                           l5477:	
  6111  0F74                     ;main.c: 406:                                 meAtuadores = 2;
  6112                           	movlw	low(02h)
  6113  0F74  3002               	movwf	(??_main+0)+0
  6114  0F75  00C4               	movf	(??_main+0)+0,w
  6115  0F76  0844               	bsf	status, 5	;RP0=1, select bank1
  6116  0F77  1683               	bcf	status, 6	;RP1=0, select bank1
  6117  0F78  1303               	movwf	(main@meAtuadores)^080h
  6118  0F79  00C9               	goto	l5435
  6119  0F7A  2E21               	line	407
  6120                           ;main.c: 407:                             else
  6121                           	
  6122                           l474:	
  6123  0F7B                     	line	409
  6124                           	
  6125                           l5479:	
  6126  0F7B                     ;main.c: 408:                             {;main.c: 409:                                
                                  addContCiclos();
  6127                           	fcall	_addContCiclos
  6128  0F7B  160A  118A  23DB  120A  158A  	line	410
  6129                           	
  6130                           l5481:	
  6131  0F80                     ;main.c: 410:                                 meAtuadores = 8;
  6132                           	movlw	low(08h)
  6133  0F80  3008               	bcf	status, 5	;RP0=0, select bank0
  6134  0F81  1283               	bcf	status, 6	;RP1=0, select bank0
  6135  0F82  1303               	movwf	(??_main+0)+0
  6136  0F83  00C4               	movf	(??_main+0)+0,w
  6137  0F84  0844               	bsf	status, 5	;RP0=1, select bank1
  6138  0F85  1683               	bcf	status, 6	;RP1=0, select bank1
  6139  0F86  1303               	movwf	(main@meAtuadores)^080h
  6140  0F87  00C9               	goto	l5435
  6141  0F88  2E21               	line	411
  6142                           ;main.c: 411:                             }
  6143                           	
  6144                           l475:	
  6145  0F89                     	line	412
  6146                           ;main.c: 412:                             break;
  6147                           	goto	l5435
  6148  0F89  2E21               	line	414
  6149                           ;main.c: 414:             case 8:
  6150                           	
  6151                           l476:	
  6152  0F8A                     	line	415
  6153                           	
  6154                           l5483:	
  6155  0F8A                     ;main.c: 415:                             if((botao != 0) && ((getContCiclos() < getCicl
                                 os()) || (getCiclos() == 0)))
  6156                           	bsf	status, 5	;RP0=1, select bank1
  6157  0F8A  1683               	bcf	status, 6	;RP1=0, select bank1
  6158  0F8B  1303               	movf	((main@botao)^080h),w
  6159  0F8C  084F               	btfsc	status,2
  6160  0F8D  1903               	goto	u4591
  6161  0F8E  2F90               	goto	u4590
  6162  0F8F  2F91               u4591:
  6163  0F90                     	goto	l5493
  6164  0F90  2FC9               u4590:
  6165  0F91                     	
  6166                           l5485:	
  6167  0F91                     	fcall	_getContCiclos
  6168  0F91  160A  118A  23F0  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  6169  0F96  1283               	bcf	status, 6	;RP1=0, select bank0
  6170  0F97  1303               	movf	(0+?_getContCiclos),w
  6171  0F98  0820               	movwf	(??_main+0)+0
  6172  0F99  00C4               	movf	(1+?_getContCiclos),w
  6173  0F9A  0821               	movwf	((??_main+0)+0+1)
  6174  0F9B  00C5               	fcall	_getCiclos
  6175  0F9C  160A  118A  2555  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  6176  0FA1  1283               	bcf	status, 6	;RP1=0, select bank0
  6177  0FA2  1303               	movf	(1+(?_getCiclos)),w
  6178  0FA3  0821               	subwf	1+(??_main+0)+0,w
  6179  0FA4  0245               	skipz
  6180  0FA5  1D03               	goto	u4605
  6181  0FA6  2FA9               	movf	(0+(?_getCiclos)),w
  6182  0FA7  0820               	subwf	0+(??_main+0)+0,w
  6183  0FA8  0244               u4605:
  6184  0FA9                     	skipc
  6185  0FA9  1C03               	goto	u4601
  6186  0FAA  2FAC               	goto	u4600
  6187  0FAB  2FAD               u4601:
  6188  0FAC                     	goto	l5489
  6189  0FAC  2FBB               u4600:
  6190  0FAD                     	
  6191                           l5487:	
  6192  0FAD                     	fcall	_getCiclos
  6193  0FAD  160A  118A  2555  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  6194  0FB2  1283               	bcf	status, 6	;RP1=0, select bank0
  6195  0FB3  1303               	movf	((0+(?_getCiclos))),w
  6196  0FB4  0820               iorwf	((1+(?_getCiclos))),w
  6197  0FB5  0421               	btfss	status,2
  6198  0FB6  1D03               	goto	u4611
  6199  0FB7  2FB9               	goto	u4610
  6200  0FB8  2FBA               u4611:
  6201  0FB9                     	goto	l5493
  6202  0FB9  2FC9               u4610:
  6203  0FBA                     	goto	l5489
  6204  0FBA  2FBB               	
  6205                           l479:	
  6206  0FBB                     	line	417
  6207                           	
  6208                           l5489:	
  6209  0FBB                     ;main.c: 416:                             {;main.c: 417:                                
                                  resetIndicePassos();
  6210                           	fcall	_resetIndicePassos
  6211  0FBB  160A  118A  23E9  120A  158A  	line	418
  6212                           	
  6213                           l5491:	
  6214  0FC0                     ;main.c: 418:                                 meAtuadores = 2;
  6215                           	movlw	low(02h)
  6216  0FC0  3002               	bcf	status, 5	;RP0=0, select bank0
  6217  0FC1  1283               	bcf	status, 6	;RP1=0, select bank0
  6218  0FC2  1303               	movwf	(??_main+0)+0
  6219  0FC3  00C4               	movf	(??_main+0)+0,w
  6220  0FC4  0844               	bsf	status, 5	;RP0=1, select bank1
  6221  0FC5  1683               	bcf	status, 6	;RP1=0, select bank1
  6222  0FC6  1303               	movwf	(main@meAtuadores)^080h
  6223  0FC7  00C9               	line	419
  6224                           ;main.c: 419:                             }
  6225                           	goto	l5435
  6226  0FC8  2E21               	line	420
  6227                           ;main.c: 420:                             else
  6228                           	
  6229                           l477:	
  6230  0FC9                     	line	422
  6231                           	
  6232                           l5493:	
  6233  0FC9                     ;main.c: 421:                             {;main.c: 422:                                
                                  meAtuadores = 0;
  6234                           	bsf	status, 5	;RP0=1, select bank1
  6235  0FC9  1683               	bcf	status, 6	;RP1=0, select bank1
  6236  0FCA  1303               	clrf	(main@meAtuadores)^080h
  6237  0FCB  01C9               	goto	l5435
  6238  0FCC  2E21               	line	423
  6239                           ;main.c: 423:                             }
  6240                           	
  6241                           l480:	
  6242  0FCD                     	line	424
  6243                           ;main.c: 424:                             break;
  6244                           	goto	l5435
  6245  0FCD  2E21               	line	425
  6246                           	
  6247                           l5495:	
  6248  0FCE                     ;main.c: 425:         }
  6249                           	goto	l5435
  6250  0FCE  2E21               	
  6251                           l456:	
  6252  0FCF                     	
  6253                           l5497:	
  6254  0FCF                     	bsf	status, 5	;RP0=1, select bank1
  6255  0FCF  1683               	bcf	status, 6	;RP1=0, select bank1
  6256  0FD0  1303               	movf	(main@meAtuadores)^080h,w
  6257  0FD1  0849               	bcf	status, 5	;RP0=0, select bank0
  6258  0FD2  1283               	bcf	status, 6	;RP1=0, select bank0
  6259  0FD3  1303               	movwf	(??_main+0)+0
  6260  0FD4  00C4               	clrf	(??_main+0)+0+1
  6261  0FD5  01C5               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  6262                           ; Switch size 1, requested type "space"
  6263                           ; Number of cases is 1, Range of values is 0 to 0
  6264                           ; switch strategies available:
  6265                           ; Name         Instructions Cycles
  6266                           ; simple_byte            4     3 (average)
  6267                           ; direct_byte           11     8 (fixed)
  6268                           ; jumptable            260     6 (fixed)
  6269                           ;	Chosen strategy is simple_byte
  6270                           
  6271                           	movf 1+(??_main+0)+0,w
  6272  0FD6  0845               	opt asmopt_push
  6273                           	opt asmopt_off
  6274                           	xorlw	0^0	; case 0
  6275  0FD7  3A00               	skipnz
  6276  0FD8  1903               	goto	l5793
  6277  0FD9  2FDB               	goto	l5435
  6278  0FDA  2E21               	opt asmopt_pop
  6279                           	
  6280                           l5793:	
  6281  0FDB                     ; Switch size 1, requested type "space"
  6282                           ; Number of cases is 9, Range of values is 0 to 8
  6283                           ; switch strategies available:
  6284                           ; Name         Instructions Cycles
  6285                           ; simple_byte           28    15 (average)
  6286                           ; direct_byte           35     8 (fixed)
  6287                           ; jumptable            260     6 (fixed)
  6288                           ;	Chosen strategy is simple_byte
  6289                           
  6290                           	movf 0+(??_main+0)+0,w
  6291  0FDB  0844               	opt asmopt_push
  6292                           	opt asmopt_off
  6293                           	xorlw	0^0	; case 0
  6294  0FDC  3A00               	skipnz
  6295  0FDD  1903               	goto	l5435
  6296  0FDE  2E21               	xorlw	1^0	; case 1
  6297  0FDF  3A01               	skipnz
  6298  0FE0  1903               	goto	l5439
  6299  0FE1  2E7B               	xorlw	2^1	; case 2
  6300  0FE2  3A03               	skipnz
  6301  0FE3  1903               	goto	l5443
  6302  0FE4  2E8E               	xorlw	3^2	; case 3
  6303  0FE5  3A01               	skipnz
  6304  0FE6  1903               	goto	l464
  6305  0FE7  2EBA               	xorlw	4^3	; case 4
  6306  0FE8  3A07               	skipnz
  6307  0FE9  1903               	goto	l5461
  6308  0FEA  2F0D               	xorlw	5^4	; case 5
  6309  0FEB  3A01               	skipnz
  6310  0FEC  1903               	goto	l5465
  6311  0FED  2F24               	xorlw	6^5	; case 6
  6312  0FEE  3A03               	skipnz
  6313  0FEF  1903               	goto	l5469
  6314  0FF0  2F40               	xorlw	7^6	; case 7
  6315  0FF1  3A01               	skipnz
  6316  0FF2  1903               	goto	l5473
  6317  0FF3  2F59               	xorlw	8^7	; case 8
  6318  0FF4  3A0F               	skipnz
  6319  0FF5  1903               	goto	l5483
  6320  0FF6  2F8A               	goto	l5435
  6321  0FF7  2E21               	opt asmopt_pop
  6322                           
  6323                           	
  6324                           l458:	
  6325  0FF8                     	goto	l5435
  6326  0FF8  2E21               	line	426
  6327                           ;main.c: 426:     }
  6328                           	
  6329                           l481:	
  6330  0FF9                     	goto	l5435
  6331  0FF9  2E21               	
  6332                           l482:	
  6333  0FFA                     	line	428
  6334                           ;main.c: 427:     return;
  6335                           	
  6336                           l483:	
  6337  0FFA                     	global	start
  6338                           	ljmp	start
  6339  0FFA  120A  118A  280C   	opt stack 0
      + 0FFD                     L1:	
  6340                           GLOBAL	__end_of_main
  6341                           	__end_of_main:
  6342  0FFD                     	signat	_main,89
  6343                           	global	_timer1_init
  6344                           
  6345 ;; *************** function _timer1_init *****************
  6346 ;; Defined at:
  6347 ;;		line 16 in file "timer1.c"
  6348 ;; Parameters:    Size  Location     Type
  6349 ;;		None
  6350 ;; Auto vars:     Size  Location     Type
  6351 ;;		None
  6352 ;; Return value:  Size  Location     Type
  6353 ;;                  1    wreg      void 
  6354 ;; Registers used:
  6355 ;;		wreg, status,2, status,0
  6356 ;; Tracked objects:
  6357 ;;		On entry : 0/0
  6358 ;;		On exit  : 0/0
  6359 ;;		Unchanged: 0/0
  6360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6361 ;;      Params:         0       0       0       0       0
  6362 ;;      Locals:         0       0       0       0       0
  6363 ;;      Temps:          0       0       0       0       0
  6364 ;;      Totals:         0       0       0       0       0
  6365 ;;Total ram usage:        0 bytes
  6366 ;; Hardware stack levels used:    1
  6367 ;; Hardware stack levels required when called:    2
  6368 ;; This function calls:
  6369 ;;		Nothing
  6370 ;; This function is called by:
  6371 ;;		_main
  6372 ;; This function uses a non-reentrant model
  6373 ;;
  6374                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  6375                           	file	"timer1.c"
  6376                           	line	16
  6377                           global __ptext1
  6378                           __ptext1:	;psect for function _timer1_init
  6379  1461                     psect	text1
  6380                           	file	"timer1.c"
  6381                           	line	16
  6382                           	global	__size_of_timer1_init
  6383                           	__size_of_timer1_init	equ	__end_of_timer1_init-_timer1_init
  6384  0011                     	
  6385                           _timer1_init:	
  6386  1461                     ;incstack = 0
  6387                           	opt	stack 5
  6388                           ; Regs used in _timer1_init: [wreg+status,2+status,0]
  6389                           	line	18
  6390                           	
  6391                           l4881:	
  6392  1461                     ;timer1.c: 18:     T1CONbits.TMR1CS = 0;
  6393                           	bcf	status, 5	;RP0=0, select bank0
  6394  1461  1283               	bcf	status, 6	;RP1=0, select bank0
  6395  1462  1303               	bcf	(16),1	;volatile
  6396  1463  1090               	line	19
  6397                           	
  6398                           l4883:	
  6399  1464                     ;timer1.c: 19:     T1CONbits.T1CKPS = 0b11;
  6400                           	movlw	(03h & ((1<<2)-1))<<4
  6401  1464  3030               	iorwf	(16),f	;volatile
  6402  1465  0490               	line	20
  6403                           	
  6404                           l4885:	
  6405  1466                     ;timer1.c: 20:     T1CONbits.nT1SYNC = 1;
  6406                           	bsf	(16),2	;volatile
  6407  1466  1510               	line	21
  6408                           	
  6409                           l4887:	
  6410  1467                     ;timer1.c: 21:     TMR1H = ((65536-625)>>8) & 0x00FF;
  6411                           	movlw	low(0FDh)
  6412  1467  30FD               	movwf	(15)	;volatile
  6413  1468  008F               	line	22
  6414                           	
  6415                           l4889:	
  6416  1469                     ;timer1.c: 22:     TMR1L = (65536-625) & 0x00FF;
  6417                           	movlw	low(08Fh)
  6418  1469  308F               	movwf	(14)	;volatile
  6419  146A  008E               	line	23
  6420                           	
  6421                           l4891:	
  6422  146B                     ;timer1.c: 23:     T1CONbits.TMR1GE = 0;
  6423                           	bcf	(16),6	;volatile
  6424  146B  1310               	line	25
  6425                           	
  6426                           l4893:	
  6427  146C                     ;timer1.c: 25:     PIE1bits.TMR1IE = 1;
  6428                           	bsf	status, 5	;RP0=1, select bank1
  6429  146C  1683               	bcf	status, 6	;RP1=0, select bank1
  6430  146D  1303               	bsf	(140)^080h,0	;volatile
  6431  146E  140C               	line	26
  6432                           	
  6433                           l4895:	
  6434  146F                     ;timer1.c: 26:     INTCONbits.PEIE = 1;
  6435                           	bsf	(11),6	;volatile
  6436  146F  170B               	line	27
  6437                           	
  6438                           l4897:	
  6439  1470                     ;timer1.c: 27:     INTCONbits.GIE = 1;
  6440                           	bsf	(11),7	;volatile
  6441  1470  178B               	line	29
  6442                           	
  6443                           l604:	
  6444  1471                     	return
  6445  1471  0008               	opt stack 0
  6446                           GLOBAL	__end_of_timer1_init
  6447                           	__end_of_timer1_init:
  6448  1472                     	signat	_timer1_init,89
  6449                           	global	_teclado_init
  6450                           
  6451 ;; *************** function _teclado_init *****************
  6452 ;; Defined at:
  6453 ;;		line 29 in file "teclado.c"
  6454 ;; Parameters:    Size  Location     Type
  6455 ;;		None
  6456 ;; Auto vars:     Size  Location     Type
  6457 ;;		None
  6458 ;; Return value:  Size  Location     Type
  6459 ;;                  1    wreg      void 
  6460 ;; Registers used:
  6461 ;;		wreg, status,2
  6462 ;; Tracked objects:
  6463 ;;		On entry : 0/0
  6464 ;;		On exit  : 0/0
  6465 ;;		Unchanged: 0/0
  6466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6467 ;;      Params:         0       0       0       0       0
  6468 ;;      Locals:         0       0       0       0       0
  6469 ;;      Temps:          0       0       0       0       0
  6470 ;;      Totals:         0       0       0       0       0
  6471 ;;Total ram usage:        0 bytes
  6472 ;; Hardware stack levels used:    1
  6473 ;; Hardware stack levels required when called:    2
  6474 ;; This function calls:
  6475 ;;		Nothing
  6476 ;; This function is called by:
  6477 ;;		_main
  6478 ;; This function uses a non-reentrant model
  6479 ;;
  6480                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  6481                           	file	"teclado.c"
  6482                           	line	29
  6483                           global __ptext2
  6484                           __ptext2:	;psect for function _teclado_init
  6485  13F8                     psect	text2
  6486                           	file	"teclado.c"
  6487                           	line	29
  6488                           	global	__size_of_teclado_init
  6489                           	__size_of_teclado_init	equ	__end_of_teclado_init-_teclado_init
  6490  0008                     	
  6491                           _teclado_init:	
  6492  13F8                     ;incstack = 0
  6493                           	opt	stack 5
  6494                           ; Regs used in _teclado_init: [wreg+status,2]
  6495                           	line	31
  6496                           	
  6497                           l4877:	
  6498  13F8                     ;teclado.c: 31:     PORTD = 0x00;
  6499                           	bcf	status, 5	;RP0=0, select bank0
  6500  13F8  1283               	bcf	status, 6	;RP1=0, select bank0
  6501  13F9  1303               	clrf	(8)	;volatile
  6502  13FA  0188               	line	32
  6503                           	
  6504                           l4879:	
  6505  13FB                     ;teclado.c: 32:     TRISD = 0xF0;
  6506                           	movlw	low(0F0h)
  6507  13FB  30F0               	bsf	status, 5	;RP0=1, select bank1
  6508  13FC  1683               	bcf	status, 6	;RP1=0, select bank1
  6509  13FD  1303               	movwf	(136)^080h	;volatile
  6510  13FE  0088               	line	34
  6511                           	
  6512                           l490:	
  6513  13FF                     	return
  6514  13FF  0008               	opt stack 0
  6515                           GLOBAL	__end_of_teclado_init
  6516                           	__end_of_teclado_init:
  6517  1400                     	signat	_teclado_init,89
  6518                           	global	_teclado_borda
  6519                           
  6520 ;; *************** function _teclado_borda *****************
  6521 ;; Defined at:
  6522 ;;		line 92 in file "teclado.c"
  6523 ;; Parameters:    Size  Location     Type
  6524 ;;		None
  6525 ;; Auto vars:     Size  Location     Type
  6526 ;;  tecla           1    9[BANK0 ] unsigned char 
  6527 ;;  aux             1    8[BANK0 ] unsigned char 
  6528 ;; Return value:  Size  Location     Type
  6529 ;;                  1    wreg      unsigned char 
  6530 ;; Registers used:
  6531 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6532 ;; Tracked objects:
  6533 ;;		On entry : 0/0
  6534 ;;		On exit  : 0/0
  6535 ;;		Unchanged: 0/0
  6536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6537 ;;      Params:         0       0       0       0       0
  6538 ;;      Locals:         0       2       0       0       0
  6539 ;;      Temps:          0       1       0       0       0
  6540 ;;      Totals:         0       3       0       0       0
  6541 ;;Total ram usage:        3 bytes
  6542 ;; Hardware stack levels used:    1
  6543 ;; Hardware stack levels required when called:    3
  6544 ;; This function calls:
  6545 ;;		_teclado_scan
  6546 ;; This function is called by:
  6547 ;;		_main
  6548 ;; This function uses a non-reentrant model
  6549 ;;
  6550                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  6551                           	line	92
  6552                           global __ptext3
  6553                           __ptext3:	;psect for function _teclado_borda
  6554  1532                     psect	text3
  6555                           	file	"teclado.c"
  6556                           	line	92
  6557                           	global	__size_of_teclado_borda
  6558                           	__size_of_teclado_borda	equ	__end_of_teclado_borda-_teclado_borda
  6559  0023                     	
  6560                           _teclado_borda:	
  6561  1532                     ;incstack = 0
  6562                           	opt	stack 4
  6563                           ; Regs used in _teclado_borda: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6564                           	line	94
  6565                           	
  6566                           l4937:	
  6567  1532                     ;teclado.c: 94:     char tecla = 0;
  6568                           	bcf	status, 5	;RP0=0, select bank0
  6569  1532  1283               	bcf	status, 6	;RP1=0, select bank0
  6570  1533  1303               	clrf	(teclado_borda@tecla)
  6571  1534  01A9               	line	95
  6572                           ;teclado.c: 95:     char aux = 0;
  6573                           	clrf	(teclado_borda@aux)
  6574  1535  01A8               	line	97
  6575                           	
  6576                           l4939:	
  6577  1536                     ;teclado.c: 97:     tecla = teclado_scan();
  6578                           	fcall	_teclado_scan
  6579  1536  120A  118A  25D6  160A  118A  	bcf	status, 5	;RP0=0, select bank0
  6580  153B  1283               	bcf	status, 6	;RP1=0, select bank0
  6581  153C  1303               	movwf	(??_teclado_borda+0)+0
  6582  153D  00A7               	movf	(??_teclado_borda+0)+0,w
  6583  153E  0827               	movwf	(teclado_borda@tecla)
  6584  153F  00A9               	line	99
  6585                           	
  6586                           l4941:	
  6587  1540                     ;teclado.c: 99:     if(tecla && !teclaAnterior)
  6588                           	movf	((teclado_borda@tecla)),w
  6589  1540  0829               	btfsc	status,2
  6590  1541  1903               	goto	u4121
  6591  1542  2D44               	goto	u4120
  6592  1543  2D45               u4121:
  6593  1544                     	goto	l505
  6594  1544  2D4E               u4120:
  6595  1545                     	
  6596                           l4943:	
  6597  1545                     	movf	((_teclaAnterior)),w
  6598  1545  0861               	btfss	status,2
  6599  1546  1D03               	goto	u4131
  6600  1547  2D49               	goto	u4130
  6601  1548  2D4A               u4131:
  6602  1549                     	goto	l505
  6603  1549  2D4E               u4130:
  6604  154A                     	line	100
  6605                           	
  6606                           l4945:	
  6607  154A                     ;teclado.c: 100:         aux = tecla;
  6608                           	movf	(teclado_borda@tecla),w
  6609  154A  0829               	movwf	(??_teclado_borda+0)+0
  6610  154B  00A7               	movf	(??_teclado_borda+0)+0,w
  6611  154C  0827               	movwf	(teclado_borda@aux)
  6612  154D  00A8               	
  6613                           l505:	
  6614  154E                     	line	102
  6615                           ;teclado.c: 102:     teclaAnterior = tecla;
  6616                           	movf	(teclado_borda@tecla),w
  6617  154E  0829               	movwf	(??_teclado_borda+0)+0
  6618  154F  00A7               	movf	(??_teclado_borda+0)+0,w
  6619  1550  0827               	movwf	(_teclaAnterior)
  6620  1551  00E1               	line	104
  6621                           ;teclado.c: 104:     return(aux);
  6622                           	movf	(teclado_borda@aux),w
  6623  1552  0828               	goto	l506
  6624  1553  2D54               	
  6625                           l4947:	
  6626  1554                     	line	105
  6627                           	
  6628                           l506:	
  6629  1554                     	return
  6630  1554  0008               	opt stack 0
  6631                           GLOBAL	__end_of_teclado_borda
  6632                           	__end_of_teclado_borda:
  6633  1555                     	signat	_teclado_borda,89
  6634                           	global	_teclado_scan
  6635                           
  6636 ;; *************** function _teclado_scan *****************
  6637 ;; Defined at:
  6638 ;;		line 55 in file "teclado.c"
  6639 ;; Parameters:    Size  Location     Type
  6640 ;;		None
  6641 ;; Auto vars:     Size  Location     Type
  6642 ;;  c               1    6[BANK0 ] unsigned char 
  6643 ;;  l               1    5[BANK0 ] unsigned char 
  6644 ;;  tecla           1    4[BANK0 ] unsigned char 
  6645 ;; Return value:  Size  Location     Type
  6646 ;;                  1    wreg      unsigned char 
  6647 ;; Registers used:
  6648 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6649 ;; Tracked objects:
  6650 ;;		On entry : 0/0
  6651 ;;		On exit  : 0/0
  6652 ;;		Unchanged: 0/0
  6653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6654 ;;      Params:         0       0       0       0       0
  6655 ;;      Locals:         0       3       0       0       0
  6656 ;;      Temps:          0       4       0       0       0
  6657 ;;      Totals:         0       7       0       0       0
  6658 ;;Total ram usage:        7 bytes
  6659 ;; Hardware stack levels used:    1
  6660 ;; Hardware stack levels required when called:    2
  6661 ;; This function calls:
  6662 ;;		Nothing
  6663 ;; This function is called by:
  6664 ;;		_teclado_borda
  6665 ;; This function uses a non-reentrant model
  6666 ;;
  6667                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  6668                           	line	55
  6669                           global __ptext4
  6670                           __ptext4:	;psect for function _teclado_scan
  6671  05D6                     psect	text4
  6672                           	file	"teclado.c"
  6673                           	line	55
  6674                           	global	__size_of_teclado_scan
  6675                           	__size_of_teclado_scan	equ	__end_of_teclado_scan-_teclado_scan
  6676  005E                     	
  6677                           _teclado_scan:	
  6678  05D6                     ;incstack = 0
  6679                           	opt	stack 4
  6680                           ; Regs used in _teclado_scan: [wreg-fsr0h+status,2+status,0]
  6681                           	line	57
  6682                           	
  6683                           l2991:	
  6684  05D6                     ;teclado.c: 57:    char tecla = 0;
  6685                           	bcf	status, 5	;RP0=0, select bank0
  6686  05D6  1283               	bcf	status, 6	;RP1=0, select bank0
  6687  05D7  1303               	clrf	(teclado_scan@tecla)
  6688  05D8  01A4               	line	73
  6689                           ;teclado.c: 71:     unsigned char l,c;;teclado.c: 73:     for( l=0; l<4; l++ )
  6690                           	clrf	(teclado_scan@l)
  6691  05D9  01A5               	
  6692                           l2993:	
  6693  05DA                     	movlw	low(04h)
  6694  05DA  3004               	subwf	(teclado_scan@l),w
  6695  05DB  0225               	skipc
  6696  05DC  1C03               	goto	u2131
  6697  05DD  2DDF               	goto	u2130
  6698  05DE  2DE0               u2131:
  6699  05DF                     	goto	l2997
  6700  05DF  2DE2               u2130:
  6701  05E0                     	goto	l3017
  6702  05E0  2E31               	
  6703                           l2995:	
  6704  05E1                     	goto	l3017
  6705  05E1  2E31               	
  6706                           l495:	
  6707  05E2                     	line	75
  6708                           	
  6709                           l2997:	
  6710  05E2                     ;teclado.c: 74:     {;teclado.c: 75:         PORTD = (0x01 << l);
  6711                           	movlw	low(01h)
  6712  05E2  3001               	movwf	(??_teclado_scan+0)+0
  6713  05E3  00A0               	incf	(teclado_scan@l),w
  6714  05E4  0A25               	goto	u2144
  6715  05E5  2DE8               u2145:
  6716  05E6                     	clrc
  6717  05E6  1003               	rlf	(??_teclado_scan+0)+0,f
  6718  05E7  0DA0               u2144:
  6719  05E8                     	addlw	-1
  6720  05E8  3EFF               	skipz
  6721  05E9  1D03               	goto	u2145
  6722  05EA  2DE6               	movf	0+(??_teclado_scan+0)+0,w
  6723  05EB  0820               	movwf	(8)	;volatile
  6724  05EC  0088               	line	77
  6725                           	
  6726                           l2999:	
  6727  05ED                     ;teclado.c: 77:         for( c=0; c<4; c++ )
  6728                           	clrf	(teclado_scan@c)
  6729  05ED  01A6               	
  6730                           l3001:	
  6731  05EE                     	movlw	low(04h)
  6732  05EE  3004               	subwf	(teclado_scan@c),w
  6733  05EF  0226               	skipc
  6734  05F0  1C03               	goto	u2151
  6735  05F1  2DF3               	goto	u2150
  6736  05F2  2DF4               u2151:
  6737  05F3                     	goto	l3005
  6738  05F3  2DF6               u2150:
  6739  05F4                     	goto	l3013
  6740  05F4  2E26               	
  6741                           l3003:	
  6742  05F5                     	goto	l3013
  6743  05F5  2E26               	
  6744                           l497:	
  6745  05F6                     	line	80
  6746                           	
  6747                           l3005:	
  6748  05F6                     ;teclado.c: 78:         {;teclado.c: 80:             if( PORTD & (0x10<<c) )
  6749                           	movlw	low(010h)
  6750  05F6  3010               	movwf	(??_teclado_scan+0)+0
  6751  05F7  00A0               	incf	(teclado_scan@c),w
  6752  05F8  0A26               	goto	u2164
  6753  05F9  2DFC               u2165:
  6754  05FA                     	clrc
  6755  05FA  1003               	rlf	(??_teclado_scan+0)+0,f
  6756  05FB  0DA0               u2164:
  6757  05FC                     	addlw	-1
  6758  05FC  3EFF               	skipz
  6759  05FD  1D03               	goto	u2165
  6760  05FE  2DFA               	movf	0+(??_teclado_scan+0)+0,w
  6761  05FF  0820               	andwf	(8),w	;volatile
  6762  0600  0508               	btfsc	status,2
  6763  0601  1903               	goto	u2171
  6764  0602  2E04               	goto	u2170
  6765  0603  2E05               u2171:
  6766  0604                     	goto	l3009
  6767  0604  2E1B               u2170:
  6768  0605                     	line	82
  6769                           	
  6770                           l3007:	
  6771  0605                     ;teclado.c: 81:             {;teclado.c: 82:                 tecla = teclas[l][c];
  6772                           	movf	(teclado_scan@l),w
  6773  0605  0825               	movwf	(??_teclado_scan+0)+0
  6774  0606  00A0               	movlw	02h
  6775  0607  3002               u2185:
  6776  0608                     	clrc
  6777  0608  1003               	rlf	(??_teclado_scan+0)+0,f
  6778  0609  0DA0               	addlw	-1
  6779  060A  3EFF               	skipz
  6780  060B  1D03               	goto	u2185
  6781  060C  2E08               	movlw	(low(_teclas|((0x0)<<8)))&0ffh
  6782  060D  3048               	addwf	0+(??_teclado_scan+0)+0,w
  6783  060E  0720               	movwf	(??_teclado_scan+1)+0
  6784  060F  00A1               	movf	(teclado_scan@c),w
  6785  0610  0826               	addwf	0+(??_teclado_scan+1)+0,w
  6786  0611  0721               	movwf	(??_teclado_scan+2)+0
  6787  0612  00A2               	movf	0+(??_teclado_scan+2)+0,w
  6788  0613  0822               	movwf	fsr0
  6789  0614  0084               	bcf	status, 7	;select IRP bank0
  6790  0615  1383               	movf	indf,w
  6791  0616  0800               	movwf	(??_teclado_scan+3)+0
  6792  0617  00A3               	movf	(??_teclado_scan+3)+0,w
  6793  0618  0823               	movwf	(teclado_scan@tecla)
  6794  0619  00A4               	goto	l3009
  6795  061A  2E1B               	line	84
  6796                           ;teclado.c: 84:             }
  6797                           	
  6798                           l499:	
  6799  061B                     	line	85
  6800                           	
  6801                           l3009:	
  6802  061B                     ;teclado.c: 85:         }
  6803                           	movlw	low(01h)
  6804  061B  3001               	movwf	(??_teclado_scan+0)+0
  6805  061C  00A0               	movf	(??_teclado_scan+0)+0,w
  6806  061D  0820               	addwf	(teclado_scan@c),f
  6807  061E  07A6               	
  6808                           l3011:	
  6809  061F                     	movlw	low(04h)
  6810  061F  3004               	subwf	(teclado_scan@c),w
  6811  0620  0226               	skipc
  6812  0621  1C03               	goto	u2191
  6813  0622  2E24               	goto	u2190
  6814  0623  2E25               u2191:
  6815  0624                     	goto	l3005
  6816  0624  2DF6               u2190:
  6817  0625                     	goto	l3013
  6818  0625  2E26               	
  6819                           l498:	
  6820  0626                     	line	86
  6821                           	
  6822                           l3013:	
  6823  0626                     ;teclado.c: 86:     }
  6824                           	movlw	low(01h)
  6825  0626  3001               	movwf	(??_teclado_scan+0)+0
  6826  0627  00A0               	movf	(??_teclado_scan+0)+0,w
  6827  0628  0820               	addwf	(teclado_scan@l),f
  6828  0629  07A5               	
  6829                           l3015:	
  6830  062A                     	movlw	low(04h)
  6831  062A  3004               	subwf	(teclado_scan@l),w
  6832  062B  0225               	skipc
  6833  062C  1C03               	goto	u2201
  6834  062D  2E2F               	goto	u2200
  6835  062E  2E30               u2201:
  6836  062F                     	goto	l2997
  6837  062F  2DE2               u2200:
  6838  0630                     	goto	l3017
  6839  0630  2E31               	
  6840                           l496:	
  6841  0631                     	line	87
  6842                           	
  6843                           l3017:	
  6844  0631                     ;teclado.c: 87:     return( tecla );
  6845                           	movf	(teclado_scan@tecla),w
  6846  0631  0824               	goto	l500
  6847  0632  2E33               	
  6848                           l3019:	
  6849  0633                     	line	89
  6850                           	
  6851                           l500:	
  6852  0633                     	return
  6853  0633  0008               	opt stack 0
  6854                           GLOBAL	__end_of_teclado_scan
  6855                           	__end_of_teclado_scan:
  6856  0634                     	signat	_teclado_scan,89
  6857                           	global	_statusT1
  6858                           
  6859 ;; *************** function _statusT1 *****************
  6860 ;; Defined at:
  6861 ;;		line 38 in file "timer1.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;		None
  6864 ;; Auto vars:     Size  Location     Type
  6865 ;;		None
  6866 ;; Return value:  Size  Location     Type
  6867 ;;                  4    0[BANK0 ] unsigned long 
  6868 ;; Registers used:
  6869 ;;		wreg
  6870 ;; Tracked objects:
  6871 ;;		On entry : 0/0
  6872 ;;		On exit  : 0/0
  6873 ;;		Unchanged: 0/0
  6874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6875 ;;      Params:         0       4       0       0       0
  6876 ;;      Locals:         0       0       0       0       0
  6877 ;;      Temps:          0       0       0       0       0
  6878 ;;      Totals:         0       4       0       0       0
  6879 ;;Total ram usage:        4 bytes
  6880 ;; Hardware stack levels used:    1
  6881 ;; Hardware stack levels required when called:    2
  6882 ;; This function calls:
  6883 ;;		Nothing
  6884 ;; This function is called by:
  6885 ;;		_main
  6886 ;; This function uses a non-reentrant model
  6887 ;;
  6888                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  6889                           	file	"timer1.c"
  6890                           	line	38
  6891                           global __ptext5
  6892                           __ptext5:	;psect for function _statusT1
  6893  1436                     psect	text5
  6894                           	file	"timer1.c"
  6895                           	line	38
  6896                           	global	__size_of_statusT1
  6897                           	__size_of_statusT1	equ	__end_of_statusT1-_statusT1
  6898  000C                     	
  6899                           _statusT1:	
  6900  1436                     ;incstack = 0
  6901                           	opt	stack 5
  6902                           ; Regs used in _statusT1: [wreg]
  6903                           	line	40
  6904                           	
  6905                           l4933:	
  6906  1436                     ;timer1.c: 40:     return( t1cont );
  6907                           	bcf	status, 5	;RP0=0, select bank0
  6908  1436  1283               	bcf	status, 6	;RP1=0, select bank0
  6909  1437  1303               	movf	(_t1cont+3),w
  6910  1438  085D               	movwf	(?_statusT1+3)
  6911  1439  00A3               	movf	(_t1cont+2),w
  6912  143A  085C               	movwf	(?_statusT1+2)
  6913  143B  00A2               	movf	(_t1cont+1),w
  6914  143C  085B               	movwf	(?_statusT1+1)
  6915  143D  00A1               	movf	(_t1cont),w
  6916  143E  085A               	movwf	(?_statusT1)
  6917  143F  00A0               
  6918                           	goto	l610
  6919  1440  2C41               	
  6920                           l4935:	
  6921  1441                     	line	41
  6922                           	
  6923                           l610:	
  6924  1441                     	return
  6925  1441  0008               	opt stack 0
  6926                           GLOBAL	__end_of_statusT1
  6927                           	__end_of_statusT1:
  6928  1442                     	signat	_statusT1,92
  6929                           	global	_set_passo
  6930                           
  6931 ;; *************** function _set_passo *****************
  6932 ;; Defined at:
  6933 ;;		line 53 in file "atuadores.c"
  6934 ;; Parameters:    Size  Location     Type
  6935 ;;  passo           1    wreg     unsigned char 
  6936 ;;  ptr             1    0[BANK0 ] PTR unsigned char 
  6937 ;;		 -> main@vetorOut(1), 
  6938 ;; Auto vars:     Size  Location     Type
  6939 ;;  passo           1    3[BANK0 ] unsigned char 
  6940 ;; Return value:  Size  Location     Type
  6941 ;;                  1    wreg      void 
  6942 ;; Registers used:
  6943 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6944 ;; Tracked objects:
  6945 ;;		On entry : 0/0
  6946 ;;		On exit  : 0/0
  6947 ;;		Unchanged: 0/0
  6948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6949 ;;      Params:         0       1       0       0       0
  6950 ;;      Locals:         0       1       0       0       0
  6951 ;;      Temps:          0       2       0       0       0
  6952 ;;      Totals:         0       4       0       0       0
  6953 ;;Total ram usage:        4 bytes
  6954 ;; Hardware stack levels used:    1
  6955 ;; Hardware stack levels required when called:    2
  6956 ;; This function calls:
  6957 ;;		Nothing
  6958 ;; This function is called by:
  6959 ;;		_main
  6960 ;; This function uses a non-reentrant model
  6961 ;;
  6962                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  6963                           	file	"atuadores.c"
  6964                           	line	53
  6965                           global __ptext6
  6966                           __ptext6:	;psect for function _set_passo
  6967  0634                     psect	text6
  6968                           	file	"atuadores.c"
  6969                           	line	53
  6970                           	global	__size_of_set_passo
  6971                           	__size_of_set_passo	equ	__end_of_set_passo-_set_passo
  6972  005C                     	
  6973                           _set_passo:	
  6974  0634                     ;incstack = 0
  6975                           	opt	stack 5
  6976                           ; Regs used in _set_passo: [wreg-fsr0h+status,2+status,0]
  6977                           ;set_passo@passo stored from wreg
  6978                           	bcf	status, 5	;RP0=0, select bank0
  6979  0634  1283               	bcf	status, 6	;RP1=0, select bank0
  6980  0635  1303               	movwf	(set_passo@passo)
  6981  0636  00A3               	line	55
  6982                           	
  6983                           l4963:	
  6984  0637                     ;atuadores.c: 53: void set_passo(char passo, char* ptr);atuadores.c: 54: {;atuadores.c: 
                                 55:     switch (passo)
  6985                           	goto	l4983
  6986  0637  2E6D               	line	57
  6987                           ;atuadores.c: 56:     {;atuadores.c: 57:         case 'A': *ptr |= 0x01; break;
  6988                           	
  6989                           l526:	
  6990  0638                     	
  6991                           l4965:	
  6992  0638                     	movf	(set_passo@ptr),w
  6993  0638  0820               	movwf	fsr0
  6994  0639  0084               	bcf	status, 7	;select IRP bank0
  6995  063A  1383               	bsf	indf+(0/8),(0)&7
  6996  063B  1400               	goto	l535
  6997  063C  2E8F               	line	58
  6998                           ;atuadores.c: 58:         case 'a': *ptr &= ~0x01; break;
  6999                           	
  7000                           l528:	
  7001  063D                     	
  7002                           l4967:	
  7003  063D                     	movlw	low(0FEh)
  7004  063D  30FE               	movwf	(??_set_passo+0)+0
  7005  063E  00A1               	movf	(set_passo@ptr),w
  7006  063F  0820               	movwf	fsr0
  7007  0640  0084               	movf	(??_set_passo+0)+0,w
  7008  0641  0821               	bcf	status, 7	;select IRP bank0
  7009  0642  1383               	andwf	indf,f
  7010  0643  0580               	goto	l535
  7011  0644  2E8F               	line	59
  7012                           ;atuadores.c: 59:         case 'B': *ptr |= 0x02; break;
  7013                           	
  7014                           l529:	
  7015  0645                     	
  7016                           l4969:	
  7017  0645                     	movf	(set_passo@ptr),w
  7018  0645  0820               	movwf	fsr0
  7019  0646  0084               	bcf	status, 7	;select IRP bank0
  7020  0647  1383               	bsf	indf+(1/8),(1)&7
  7021  0648  1480               	goto	l535
  7022  0649  2E8F               	line	60
  7023                           ;atuadores.c: 60:         case 'b': *ptr &= ~0x02; break;
  7024                           	
  7025                           l530:	
  7026  064A                     	
  7027                           l4971:	
  7028  064A                     	movlw	low(0FDh)
  7029  064A  30FD               	movwf	(??_set_passo+0)+0
  7030  064B  00A1               	movf	(set_passo@ptr),w
  7031  064C  0820               	movwf	fsr0
  7032  064D  0084               	movf	(??_set_passo+0)+0,w
  7033  064E  0821               	bcf	status, 7	;select IRP bank0
  7034  064F  1383               	andwf	indf,f
  7035  0650  0580               	goto	l535
  7036  0651  2E8F               	line	61
  7037                           ;atuadores.c: 61:         case 'C': *ptr |= 0x04; break;
  7038                           	
  7039                           l531:	
  7040  0652                     	
  7041                           l4973:	
  7042  0652                     	movf	(set_passo@ptr),w
  7043  0652  0820               	movwf	fsr0
  7044  0653  0084               	bcf	status, 7	;select IRP bank0
  7045  0654  1383               	bsf	indf+(2/8),(2)&7
  7046  0655  1500               	goto	l535
  7047  0656  2E8F               	line	62
  7048                           ;atuadores.c: 62:         case 'c': *ptr &= ~0x04; break;
  7049                           	
  7050                           l532:	
  7051  0657                     	
  7052                           l4975:	
  7053  0657                     	movlw	low(0FBh)
  7054  0657  30FB               	movwf	(??_set_passo+0)+0
  7055  0658  00A1               	movf	(set_passo@ptr),w
  7056  0659  0820               	movwf	fsr0
  7057  065A  0084               	movf	(??_set_passo+0)+0,w
  7058  065B  0821               	bcf	status, 7	;select IRP bank0
  7059  065C  1383               	andwf	indf,f
  7060  065D  0580               	goto	l535
  7061  065E  2E8F               	line	63
  7062                           ;atuadores.c: 63:         case 'D': *ptr |= 0x08; break;
  7063                           	
  7064                           l533:	
  7065  065F                     	
  7066                           l4977:	
  7067  065F                     	movf	(set_passo@ptr),w
  7068  065F  0820               	movwf	fsr0
  7069  0660  0084               	bcf	status, 7	;select IRP bank0
  7070  0661  1383               	bsf	indf+(3/8),(3)&7
  7071  0662  1580               	goto	l535
  7072  0663  2E8F               	line	64
  7073                           ;atuadores.c: 64:         case 'd': *ptr &= ~0x08; break;
  7074                           	
  7075                           l534:	
  7076  0664                     	
  7077                           l4979:	
  7078  0664                     	movlw	low(0F7h)
  7079  0664  30F7               	movwf	(??_set_passo+0)+0
  7080  0665  00A1               	movf	(set_passo@ptr),w
  7081  0666  0820               	movwf	fsr0
  7082  0667  0084               	movf	(??_set_passo+0)+0,w
  7083  0668  0821               	bcf	status, 7	;select IRP bank0
  7084  0669  1383               	andwf	indf,f
  7085  066A  0580               	goto	l535
  7086  066B  2E8F               	line	65
  7087                           	
  7088                           l4981:	
  7089  066C                     ;atuadores.c: 65:     }
  7090                           	goto	l535
  7091  066C  2E8F               	
  7092                           l525:	
  7093  066D                     	
  7094                           l4983:	
  7095  066D                     	movf	(set_passo@passo),w
  7096  066D  0823               	movwf	(??_set_passo+0)+0
  7097  066E  00A1               	clrf	(??_set_passo+0)+0+1
  7098  066F  01A2               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  7099                           ; Switch size 1, requested type "space"
  7100                           ; Number of cases is 1, Range of values is 0 to 0
  7101                           ; switch strategies available:
  7102                           ; Name         Instructions Cycles
  7103                           ; simple_byte            4     3 (average)
  7104                           ; direct_byte           11     8 (fixed)
  7105                           ; jumptable            260     6 (fixed)
  7106                           ;	Chosen strategy is simple_byte
  7107                           
  7108                           	movf 1+(??_set_passo+0)+0,w
  7109  0670  0822               	opt asmopt_push
  7110                           	opt asmopt_off
  7111                           	xorlw	0^0	; case 0
  7112  0671  3A00               	skipnz
  7113  0672  1903               	goto	l5795
  7114  0673  2E75               	goto	l535
  7115  0674  2E8F               	opt asmopt_pop
  7116                           	
  7117                           l5795:	
  7118  0675                     ; Switch size 1, requested type "space"
  7119                           ; Number of cases is 8, Range of values is 65 to 100
  7120                           ; switch strategies available:
  7121                           ; Name         Instructions Cycles
  7122                           ; simple_byte           25    13 (average)
  7123                           ; direct_byte          119    11 (fixed)
  7124                           ; jumptable            263     9 (fixed)
  7125                           ;	Chosen strategy is simple_byte
  7126                           
  7127                           	movf 0+(??_set_passo+0)+0,w
  7128  0675  0821               	opt asmopt_push
  7129                           	opt asmopt_off
  7130                           	xorlw	65^0	; case 65
  7131  0676  3A41               	skipnz
  7132  0677  1903               	goto	l4965
  7133  0678  2E38               	xorlw	66^65	; case 66
  7134  0679  3A03               	skipnz
  7135  067A  1903               	goto	l4969
  7136  067B  2E45               	xorlw	67^66	; case 67
  7137  067C  3A01               	skipnz
  7138  067D  1903               	goto	l4973
  7139  067E  2E52               	xorlw	68^67	; case 68
  7140  067F  3A07               	skipnz
  7141  0680  1903               	goto	l4977
  7142  0681  2E5F               	xorlw	97^68	; case 97
  7143  0682  3A25               	skipnz
  7144  0683  1903               	goto	l4967
  7145  0684  2E3D               	xorlw	98^97	; case 98
  7146  0685  3A03               	skipnz
  7147  0686  1903               	goto	l4971
  7148  0687  2E4A               	xorlw	99^98	; case 99
  7149  0688  3A01               	skipnz
  7150  0689  1903               	goto	l4975
  7151  068A  2E57               	xorlw	100^99	; case 100
  7152  068B  3A07               	skipnz
  7153  068C  1903               	goto	l4979
  7154  068D  2E64               	goto	l535
  7155  068E  2E8F               	opt asmopt_pop
  7156                           
  7157                           	
  7158                           l527:	
  7159  068F                     	line	66
  7160                           	
  7161                           l535:	
  7162  068F                     	return
  7163  068F  0008               	opt stack 0
  7164                           GLOBAL	__end_of_set_passo
  7165                           	__end_of_set_passo:
  7166  0690                     	signat	_set_passo,8313
  7167                           	global	_setT1
  7168                           
  7169 ;; *************** function _setT1 *****************
  7170 ;; Defined at:
  7171 ;;		line 31 in file "timer1.c"
  7172 ;; Parameters:    Size  Location     Type
  7173 ;;  c               4   13[BANK0 ] unsigned long 
  7174 ;; Auto vars:     Size  Location     Type
  7175 ;;		None
  7176 ;; Return value:  Size  Location     Type
  7177 ;;                  1    wreg      void 
  7178 ;; Registers used:
  7179 ;;		wreg
  7180 ;; Tracked objects:
  7181 ;;		On entry : 0/0
  7182 ;;		On exit  : 0/0
  7183 ;;		Unchanged: 0/0
  7184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7185 ;;      Params:         0       4       0       0       0
  7186 ;;      Locals:         0       0       0       0       0
  7187 ;;      Temps:          0       0       0       0       0
  7188 ;;      Totals:         0       4       0       0       0
  7189 ;;Total ram usage:        4 bytes
  7190 ;; Hardware stack levels used:    1
  7191 ;; Hardware stack levels required when called:    2
  7192 ;; This function calls:
  7193 ;;		Nothing
  7194 ;; This function is called by:
  7195 ;;		_main
  7196 ;; This function uses a non-reentrant model
  7197 ;;
  7198                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  7199                           	file	"timer1.c"
  7200                           	line	31
  7201                           global __ptext7
  7202                           __ptext7:	;psect for function _setT1
  7203  142A                     psect	text7
  7204                           	file	"timer1.c"
  7205                           	line	31
  7206                           	global	__size_of_setT1
  7207                           	__size_of_setT1	equ	__end_of_setT1-_setT1
  7208  000C                     	
  7209                           _setT1:	
  7210  142A                     ;incstack = 0
  7211                           	opt	stack 5
  7212                           ; Regs used in _setT1: [wreg]
  7213                           	line	33
  7214                           	
  7215                           l4929:	
  7216  142A                     ;timer1.c: 31: void setT1( unsigned long int c );timer1.c: 32: {;timer1.c: 33:     t1con
                                 t = c;
  7217                           	bcf	status, 5	;RP0=0, select bank0
  7218  142A  1283               	bcf	status, 6	;RP1=0, select bank0
  7219  142B  1303               	movf	(setT1@c+3),w
  7220  142C  0830               	movwf	(_t1cont+3)
  7221  142D  00DD               	movf	(setT1@c+2),w
  7222  142E  082F               	movwf	(_t1cont+2)
  7223  142F  00DC               	movf	(setT1@c+1),w
  7224  1430  082E               	movwf	(_t1cont+1)
  7225  1431  00DB               	movf	(setT1@c),w
  7226  1432  082D               	movwf	(_t1cont)
  7227  1433  00DA               
  7228                           	line	34
  7229                           	
  7230                           l4931:	
  7231  1434                     ;timer1.c: 34:     T1CONbits.TMR1ON = 1;
  7232                           	bsf	(16),0	;volatile
  7233  1434  1410               	line	35
  7234                           	
  7235                           l607:	
  7236  1435                     	return
  7237  1435  0008               	opt stack 0
  7238                           GLOBAL	__end_of_setT1
  7239                           	__end_of_setT1:
  7240  1436                     	signat	_setT1,4217
  7241                           	global	_serialIOscan
  7242                           
  7243 ;; *************** function _serialIOscan *****************
  7244 ;; Defined at:
  7245 ;;		line 76 in file "serialIO.c"
  7246 ;; Parameters:    Size  Location     Type
  7247 ;;		None
  7248 ;; Auto vars:     Size  Location     Type
  7249 ;;  i               1    8[BANK0 ] unsigned char 
  7250 ;;  j               1    7[BANK0 ] unsigned char 
  7251 ;; Return value:  Size  Location     Type
  7252 ;;                  1    wreg      void 
  7253 ;; Registers used:
  7254 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7255 ;; Tracked objects:
  7256 ;;		On entry : 0/0
  7257 ;;		On exit  : 0/0
  7258 ;;		Unchanged: 0/0
  7259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7260 ;;      Params:         0       0       0       0       0
  7261 ;;      Locals:         0       2       0       0       0
  7262 ;;      Temps:          0       3       0       0       0
  7263 ;;      Totals:         0       5       0       0       0
  7264 ;;Total ram usage:        5 bytes
  7265 ;; Hardware stack levels used:    1
  7266 ;; Hardware stack levels required when called:    3
  7267 ;; This function calls:
  7268 ;;		_serialIObyteShift
  7269 ;;		_serialIOload
  7270 ;; This function is called by:
  7271 ;;		_main
  7272 ;; This function uses a non-reentrant model
  7273 ;;
  7274                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  7275                           	file	"serialIO.c"
  7276                           	line	76
  7277                           global __ptext8
  7278                           __ptext8:	;psect for function _serialIOscan
  7279  07C2                     psect	text8
  7280                           	file	"serialIO.c"
  7281                           	line	76
  7282                           	global	__size_of_serialIOscan
  7283                           	__size_of_serialIOscan	equ	__end_of_serialIOscan-_serialIOscan
  7284  003B                     	
  7285                           _serialIOscan:	
  7286  07C2                     ;incstack = 0
  7287                           	opt	stack 4
  7288                           ; Regs used in _serialIOscan: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7289                           	line	79
  7290                           	
  7291                           l4949:	
  7292  07C2                     ;serialIO.c: 78:     unsigned char i,j;;serialIO.c: 79:     j = lenSerialIO - 1;
  7293                           	bcf	status, 5	;RP0=0, select bank0
  7294  07C2  1283               	bcf	status, 6	;RP1=0, select bank0
  7295  07C3  1303               	movf	(_lenSerialIO),w
  7296  07C4  085E               	addlw	0FFh
  7297  07C5  3EFF               	movwf	(??_serialIOscan+0)+0
  7298  07C6  00A4               	movf	(??_serialIOscan+0)+0,w
  7299  07C7  0824               	movwf	(serialIOscan@j)
  7300  07C8  00A7               	line	80
  7301                           	
  7302                           l4951:	
  7303  07C9                     ;serialIO.c: 80:     serialIOload();
  7304                           	fcall	_serialIOload
  7305  07C9  160A  118A  23D6  120A  118A  	line	81
  7306                           	
  7307                           l4953:	
  7308  07CE                     ;serialIO.c: 81:     for( i=0; i<lenSerialIO; i++ )
  7309                           	bcf	status, 5	;RP0=0, select bank0
  7310  07CE  1283               	bcf	status, 6	;RP1=0, select bank0
  7311  07CF  1303               	clrf	(serialIOscan@i)
  7312  07D0  01A8               	goto	l4959
  7313  07D1  2FF0               	
  7314                           l579:	
  7315  07D2                     	line	83
  7316                           	
  7317                           l4955:	
  7318  07D2                     ;serialIO.c: 82:     {;serialIO.c: 83:         ptrSerialIn[i] = serialIObyteShift( ptrSe
                                 rialOut[j-i]);
  7319                           	decf	(serialIOscan@i),w
  7320  07D2  0328               	xorlw	0ffh
  7321  07D3  3AFF               	addwf	(serialIOscan@j),w
  7322  07D4  0727               	addwf	(_ptrSerialOut),w
  7323  07D5  075F               	movwf	(??_serialIOscan+0)+0
  7324  07D6  00A4               	movf	0+(??_serialIOscan+0)+0,w
  7325  07D7  0824               	movwf	fsr0
  7326  07D8  0084               	bcf	status, 7	;select IRP bank0
  7327  07D9  1383               	movf	indf,w
  7328  07DA  0800               	fcall	_serialIObyteShift
  7329  07DB  160A  118A  2616  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7330  07E0  1283               	bcf	status, 6	;RP1=0, select bank0
  7331  07E1  1303               	movwf	(??_serialIOscan+1)+0
  7332  07E2  00A5               	movf	(serialIOscan@i),w
  7333  07E3  0828               	addwf	(_ptrSerialIn),w
  7334  07E4  0760               	movwf	(??_serialIOscan+2)+0
  7335  07E5  00A6               	movf	0+(??_serialIOscan+2)+0,w
  7336  07E6  0826               	movwf	fsr0
  7337  07E7  0084               	movf	(??_serialIOscan+1)+0,w
  7338  07E8  0825               	bcf	status, 7	;select IRP bank0
  7339  07E9  1383               	movwf	indf
  7340  07EA  0080               	line	84
  7341                           	
  7342                           l4957:	
  7343  07EB                     ;serialIO.c: 84:     }
  7344                           	movlw	low(01h)
  7345  07EB  3001               	movwf	(??_serialIOscan+0)+0
  7346  07EC  00A4               	movf	(??_serialIOscan+0)+0,w
  7347  07ED  0824               	addwf	(serialIOscan@i),f
  7348  07EE  07A8               	goto	l4959
  7349  07EF  2FF0               	
  7350                           l578:	
  7351  07F0                     	
  7352                           l4959:	
  7353  07F0                     	movf	(_lenSerialIO),w
  7354  07F0  085E               	subwf	(serialIOscan@i),w
  7355  07F1  0228               	skipc
  7356  07F2  1C03               	goto	u4141
  7357  07F3  2FF5               	goto	u4140
  7358  07F4  2FF6               u4141:
  7359  07F5                     	goto	l4955
  7360  07F5  2FD2               u4140:
  7361  07F6                     	goto	l4961
  7362  07F6  2FF7               	
  7363                           l580:	
  7364  07F7                     	line	85
  7365                           	
  7366                           l4961:	
  7367  07F7                     ;serialIO.c: 85:     serialIOload();
  7368                           	fcall	_serialIOload
  7369  07F7  160A  118A  23D6  120A  118A  	line	86
  7370                           	
  7371                           l581:	
  7372  07FC                     	return
  7373  07FC  0008               	opt stack 0
  7374                           GLOBAL	__end_of_serialIOscan
  7375                           	__end_of_serialIOscan:
  7376  07FD                     	signat	_serialIOscan,89
  7377                           	global	_serialIOload
  7378                           
  7379 ;; *************** function _serialIOload *****************
  7380 ;; Defined at:
  7381 ;;		line 45 in file "serialIO.c"
  7382 ;; Parameters:    Size  Location     Type
  7383 ;;		None
  7384 ;; Auto vars:     Size  Location     Type
  7385 ;;		None
  7386 ;; Return value:  Size  Location     Type
  7387 ;;                  1    wreg      void 
  7388 ;; Registers used:
  7389 ;;		None
  7390 ;; Tracked objects:
  7391 ;;		On entry : 0/0
  7392 ;;		On exit  : 0/0
  7393 ;;		Unchanged: 0/0
  7394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7395 ;;      Params:         0       0       0       0       0
  7396 ;;      Locals:         0       0       0       0       0
  7397 ;;      Temps:          0       0       0       0       0
  7398 ;;      Totals:         0       0       0       0       0
  7399 ;;Total ram usage:        0 bytes
  7400 ;; Hardware stack levels used:    1
  7401 ;; Hardware stack levels required when called:    2
  7402 ;; This function calls:
  7403 ;;		Nothing
  7404 ;; This function is called by:
  7405 ;;		_serialIOscan
  7406 ;; This function uses a non-reentrant model
  7407 ;;
  7408                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  7409                           	line	45
  7410                           global __ptext9
  7411                           __ptext9:	;psect for function _serialIOload
  7412  13D6                     psect	text9
  7413                           	file	"serialIO.c"
  7414                           	line	45
  7415                           	global	__size_of_serialIOload
  7416                           	__size_of_serialIOload	equ	__end_of_serialIOload-_serialIOload
  7417  0005                     	
  7418                           _serialIOload:	
  7419  13D6                     ;incstack = 0
  7420                           	opt	stack 4
  7421                           ; Regs used in _serialIOload: []
  7422                           	line	47
  7423                           	
  7424                           l4541:	
  7425  13D6                     ;serialIO.c: 47:     SERIALIO.SHLD = 0;
  7426                           	bcf	status, 5	;RP0=0, select bank0
  7427  13D6  1283               	bcf	status, 6	;RP1=0, select bank0
  7428  13D7  1303               	bcf	(5),3	;volatile
  7429  13D8  1185               	line	48
  7430                           ;serialIO.c: 48:     SERIALIO.SHLD = 1;
  7431                           	bsf	(5),3	;volatile
  7432  13D9  1585               	line	49
  7433                           	
  7434                           l566:	
  7435  13DA                     	return
  7436  13DA  0008               	opt stack 0
  7437                           GLOBAL	__end_of_serialIOload
  7438                           	__end_of_serialIOload:
  7439  13DB                     	signat	_serialIOload,89
  7440                           	global	_serialIObyteShift
  7441                           
  7442 ;; *************** function _serialIObyteShift *****************
  7443 ;; Defined at:
  7444 ;;		line 50 in file "serialIO.c"
  7445 ;; Parameters:    Size  Location     Type
  7446 ;;  dataIn          1    wreg     unsigned char 
  7447 ;; Auto vars:     Size  Location     Type
  7448 ;;  dataIn          1    1[BANK0 ] unsigned char 
  7449 ;;  dataBit         1    3[BANK0 ] unsigned char 
  7450 ;;  dataOut         1    2[BANK0 ] unsigned char 
  7451 ;; Return value:  Size  Location     Type
  7452 ;;                  1    wreg      unsigned char 
  7453 ;; Registers used:
  7454 ;;		wreg, status,2, status,0
  7455 ;; Tracked objects:
  7456 ;;		On entry : 0/0
  7457 ;;		On exit  : 0/0
  7458 ;;		Unchanged: 0/0
  7459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7460 ;;      Params:         0       0       0       0       0
  7461 ;;      Locals:         0       3       0       0       0
  7462 ;;      Temps:          0       1       0       0       0
  7463 ;;      Totals:         0       4       0       0       0
  7464 ;;Total ram usage:        4 bytes
  7465 ;; Hardware stack levels used:    1
  7466 ;; Hardware stack levels required when called:    2
  7467 ;; This function calls:
  7468 ;;		Nothing
  7469 ;; This function is called by:
  7470 ;;		_serialIOscan
  7471 ;; This function uses a non-reentrant model
  7472 ;;
  7473                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  7474                           	line	50
  7475                           global __ptext10
  7476                           __ptext10:	;psect for function _serialIObyteShift
  7477  1616                     psect	text10
  7478                           	file	"serialIO.c"
  7479                           	line	50
  7480                           	global	__size_of_serialIObyteShift
  7481                           	__size_of_serialIObyteShift	equ	__end_of_serialIObyteShift-_serialIObyteShift
  7482  0029                     	
  7483                           _serialIObyteShift:	
  7484  1616                     ;incstack = 0
  7485                           	opt	stack 4
  7486                           ; Regs used in _serialIObyteShift: [wreg+status,2+status,0]
  7487                           ;serialIObyteShift@dataIn stored from wreg
  7488                           	bcf	status, 5	;RP0=0, select bank0
  7489  1616  1283               	bcf	status, 6	;RP1=0, select bank0
  7490  1617  1303               	movwf	(serialIObyteShift@dataIn)
  7491  1618  00A1               	line	55
  7492                           	
  7493                           l4543:	
  7494  1619                     ;serialIO.c: 50: unsigned char serialIObyteShift( unsigned char dataIn );serialIO.c: 51:
                                  {;serialIO.c: 52:     unsigned char dataBit;;serialIO.c: 53:     unsigned char dataOut;
                                 ;serialIO.c: 55:     dataBit = 0x80;
  7495                           	movlw	low(080h)
  7496  1619  3080               	movwf	(??_serialIObyteShift+0)+0
  7497  161A  00A0               	movf	(??_serialIObyteShift+0)+0,w
  7498  161B  0820               	movwf	(serialIObyteShift@dataBit)
  7499  161C  00A3               	line	56
  7500                           	
  7501                           l4545:	
  7502  161D                     ;serialIO.c: 56:     dataOut = 0;
  7503                           	clrf	(serialIObyteShift@dataOut)
  7504  161D  01A2               	line	58
  7505                           ;serialIO.c: 58:     while( dataBit )
  7506                           	goto	l4557
  7507  161E  2E36               	
  7508                           l570:	
  7509  161F                     	line	60
  7510                           ;serialIO.c: 59:     {;serialIO.c: 60:         SERIALIO.CLK = 0;
  7511                           	bcf	(5),2	;volatile
  7512  161F  1105               	line	61
  7513                           	
  7514                           l4547:	
  7515  1620                     ;serialIO.c: 61:         if( dataIn & dataBit )
  7516                           	movf	(serialIObyteShift@dataIn),w
  7517  1620  0821               	andwf	(serialIObyteShift@dataBit),w
  7518  1621  0523               	btfsc	status,2
  7519  1622  1903               	goto	u3711
  7520  1623  2E25               	goto	u3710
  7521  1624  2E26               u3711:
  7522  1625                     	goto	l571
  7523  1625  2E28               u3710:
  7524  1626                     	line	62
  7525                           	
  7526                           l4549:	
  7527  1626                     ;serialIO.c: 62:             SERIALIO.OUT = 1;
  7528                           	bsf	(5),0	;volatile
  7529  1626  1405               	goto	l572
  7530  1627  2E29               	line	63
  7531                           ;serialIO.c: 63:         else
  7532                           	
  7533                           l571:	
  7534  1628                     	line	64
  7535                           ;serialIO.c: 64:             SERIALIO.OUT = 0;
  7536                           	bcf	(5),0	;volatile
  7537  1628  1005               	
  7538                           l572:	
  7539  1629                     	line	66
  7540                           ;serialIO.c: 66:         if( SERIALIO.IN )
  7541                           	btfss	(5),1	;volatile
  7542  1629  1C85               	goto	u3721
  7543  162A  2E2C               	goto	u3720
  7544  162B  2E2D               u3721:
  7545  162C                     	goto	l4553
  7546  162C  2E32               u3720:
  7547  162D                     	line	67
  7548                           	
  7549                           l4551:	
  7550  162D                     ;serialIO.c: 67:             dataOut |= dataBit;
  7551                           	movf	(serialIObyteShift@dataBit),w
  7552  162D  0823               	movwf	(??_serialIObyteShift+0)+0
  7553  162E  00A0               	movf	(??_serialIObyteShift+0)+0,w
  7554  162F  0820               	iorwf	(serialIObyteShift@dataOut),f
  7555  1630  04A2               	goto	l4553
  7556  1631  2E32               	
  7557                           l573:	
  7558  1632                     	line	68
  7559                           	
  7560                           l4553:	
  7561  1632                     ;serialIO.c: 68:         SERIALIO.CLK = 1;
  7562                           	bsf	(5),2	;volatile
  7563  1632  1505               	line	69
  7564                           	
  7565                           l4555:	
  7566  1633                     ;serialIO.c: 69:         dataBit >>= 1;
  7567                           	clrc
  7568  1633  1003               	rrf	(serialIObyteShift@dataBit),f
  7569  1634  0CA3               
  7570                           	goto	l4557
  7571  1635  2E36               	line	70
  7572                           ;serialIO.c: 70:     }
  7573                           	
  7574                           l569:	
  7575  1636                     	line	58
  7576                           	
  7577                           l4557:	
  7578  1636                     ;serialIO.c: 58:     while( dataBit )
  7579                           	movf	((serialIObyteShift@dataBit)),w
  7580  1636  0823               	btfss	status,2
  7581  1637  1D03               	goto	u3731
  7582  1638  2E3A               	goto	u3730
  7583  1639  2E3B               u3731:
  7584  163A                     	goto	l570
  7585  163A  2E1F               u3730:
  7586  163B                     	
  7587                           l574:	
  7588  163B                     	line	71
  7589                           ;serialIO.c: 71:     SERIALIO.CLK = 0;
  7590                           	bcf	(5),2	;volatile
  7591  163B  1105               	line	72
  7592                           	
  7593                           l4559:	
  7594  163C                     ;serialIO.c: 72:     return( dataOut );
  7595                           	movf	(serialIObyteShift@dataOut),w
  7596  163C  0822               	goto	l575
  7597  163D  2E3E               	
  7598                           l4561:	
  7599  163E                     	line	73
  7600                           	
  7601                           l575:	
  7602  163E                     	return
  7603  163E  0008               	opt stack 0
  7604                           GLOBAL	__end_of_serialIObyteShift
  7605                           	__end_of_serialIObyteShift:
  7606  163F                     	signat	_serialIObyteShift,4217
  7607                           	global	_resetIndicePassos
  7608                           
  7609 ;; *************** function _resetIndicePassos *****************
  7610 ;; Defined at:
  7611 ;;		line 34 in file "fifo.c"
  7612 ;; Parameters:    Size  Location     Type
  7613 ;;		None
  7614 ;; Auto vars:     Size  Location     Type
  7615 ;;		None
  7616 ;; Return value:  Size  Location     Type
  7617 ;;                  1    wreg      void 
  7618 ;; Registers used:
  7619 ;;		wreg
  7620 ;; Tracked objects:
  7621 ;;		On entry : 0/0
  7622 ;;		On exit  : 0/0
  7623 ;;		Unchanged: 0/0
  7624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7625 ;;      Params:         0       0       0       0       0
  7626 ;;      Locals:         0       0       0       0       0
  7627 ;;      Temps:          0       1       0       0       0
  7628 ;;      Totals:         0       1       0       0       0
  7629 ;;Total ram usage:        1 bytes
  7630 ;; Hardware stack levels used:    1
  7631 ;; Hardware stack levels required when called:    2
  7632 ;; This function calls:
  7633 ;;		Nothing
  7634 ;; This function is called by:
  7635 ;;		_main
  7636 ;; This function uses a non-reentrant model
  7637 ;;
  7638                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  7639                           	file	"fifo.c"
  7640                           	line	34
  7641                           global __ptext11
  7642                           __ptext11:	;psect for function _resetIndicePassos
  7643  13E9                     psect	text11
  7644                           	file	"fifo.c"
  7645                           	line	34
  7646                           	global	__size_of_resetIndicePassos
  7647                           	__size_of_resetIndicePassos	equ	__end_of_resetIndicePassos-_resetIndicePassos
  7648  0007                     	
  7649                           _resetIndicePassos:	
  7650  13E9                     ;incstack = 0
  7651                           	opt	stack 5
  7652                           ; Regs used in _resetIndicePassos: [wreg]
  7653                           	line	36
  7654                           	
  7655                           l4647:	
  7656  13E9                     ;fifo.c: 36:     indice_passos = 2;
  7657                           	movlw	low(02h)
  7658  13E9  3002               	bcf	status, 5	;RP0=0, select bank0
  7659  13EA  1283               	bcf	status, 6	;RP1=0, select bank0
  7660  13EB  1303               	movwf	(??_resetIndicePassos+0)+0
  7661  13EC  00A0               	movf	(??_resetIndicePassos+0)+0,w
  7662  13ED  0820               	movwf	(_indice_passos)
  7663  13EE  00FB               	line	37
  7664                           	
  7665                           l99:	
  7666  13EF                     	return
  7667  13EF  0008               	opt stack 0
  7668                           GLOBAL	__end_of_resetIndicePassos
  7669                           	__end_of_resetIndicePassos:
  7670  13F0                     	signat	_resetIndicePassos,89
  7671                           	global	_resetContCiclos
  7672                           
  7673 ;; *************** function _resetContCiclos *****************
  7674 ;; Defined at:
  7675 ;;		line 52 in file "fifo.c"
  7676 ;; Parameters:    Size  Location     Type
  7677 ;;		None
  7678 ;; Auto vars:     Size  Location     Type
  7679 ;;		None
  7680 ;; Return value:  Size  Location     Type
  7681 ;;                  1    wreg      void 
  7682 ;; Registers used:
  7683 ;;		status,2
  7684 ;; Tracked objects:
  7685 ;;		On entry : 0/0
  7686 ;;		On exit  : 0/0
  7687 ;;		Unchanged: 0/0
  7688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7689 ;;      Params:         0       0       0       0       0
  7690 ;;      Locals:         0       0       0       0       0
  7691 ;;      Temps:          0       0       0       0       0
  7692 ;;      Totals:         0       0       0       0       0
  7693 ;;Total ram usage:        0 bytes
  7694 ;; Hardware stack levels used:    1
  7695 ;; Hardware stack levels required when called:    2
  7696 ;; This function calls:
  7697 ;;		Nothing
  7698 ;; This function is called by:
  7699 ;;		_main
  7700 ;; This function uses a non-reentrant model
  7701 ;;
  7702                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  7703                           	line	52
  7704                           global __ptext12
  7705                           __ptext12:	;psect for function _resetContCiclos
  7706  07FD                     psect	text12
  7707                           	file	"fifo.c"
  7708                           	line	52
  7709                           	global	__size_of_resetContCiclos
  7710                           	__size_of_resetContCiclos	equ	__end_of_resetContCiclos-_resetContCiclos
  7711  0003                     	
  7712                           _resetContCiclos:	
  7713  07FD                     ;incstack = 0
  7714                           	opt	stack 5
  7715                           ; Regs used in _resetContCiclos: [status,2]
  7716                           	line	54
  7717                           	
  7718                           l4657:	
  7719  07FD                     ;fifo.c: 54:     cont_ciclos = 0;
  7720                           	clrf	(_cont_ciclos)
  7721  07FD  01F6               	clrf	(_cont_ciclos+1)
  7722  07FE  01F7               	line	55
  7723                           	
  7724                           l108:	
  7725  07FF                     	return
  7726  07FF  0008               	opt stack 0
  7727                           GLOBAL	__end_of_resetContCiclos
  7728                           	__end_of_resetContCiclos:
  7729  0800                     	signat	_resetContCiclos,89
  7730                           	global	_printExec
  7731                           
  7732 ;; *************** function _printExec *****************
  7733 ;; Defined at:
  7734 ;;		line 358 in file "fifo.c"
  7735 ;; Parameters:    Size  Location     Type
  7736 ;;  col             1    wreg     unsigned char 
  7737 ;;  ind             1   25[BANK0 ] unsigned char 
  7738 ;; Auto vars:     Size  Location     Type
  7739 ;;  col             1   34[BANK0 ] unsigned char 
  7740 ;;  passo           1   35[BANK0 ] unsigned char 
  7741 ;; Return value:  Size  Location     Type
  7742 ;;                  1    wreg      void 
  7743 ;; Registers used:
  7744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7745 ;; Tracked objects:
  7746 ;;		On entry : 0/0
  7747 ;;		On exit  : 0/0
  7748 ;;		Unchanged: 0/0
  7749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7750 ;;      Params:         0       1       0       0       0
  7751 ;;      Locals:         0       4       0       0       0
  7752 ;;      Temps:          0       6       0       0       0
  7753 ;;      Totals:         0      11       0       0       0
  7754 ;;Total ram usage:       11 bytes
  7755 ;; Hardware stack levels used:    1
  7756 ;; Hardware stack levels required when called:    5
  7757 ;; This function calls:
  7758 ;;		_dignum_tam
  7759 ;;		_dispLCD_dataReg
  7760 ;;		_dispLCD_lincol
  7761 ;;		_dispLCD_num
  7762 ;;		_posAtual
  7763 ;; This function is called by:
  7764 ;;		_main
  7765 ;; This function uses a non-reentrant model
  7766 ;;
  7767                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  7768                           	line	358
  7769                           global __ptext13
  7770                           __ptext13:	;psect for function _printExec
  7771  037D                     psect	text13
  7772                           	file	"fifo.c"
  7773                           	line	358
  7774                           	global	__size_of_printExec
  7775                           	__size_of_printExec	equ	__end_of_printExec-_printExec
  7776  0091                     	
  7777                           _printExec:	
  7778  037D                     ;incstack = 0
  7779                           	opt	stack 2
  7780                           ; Regs used in _printExec: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7781                           ;printExec@col stored from wreg
  7782                           	bcf	status, 5	;RP0=0, select bank0
  7783  037D  1283               	bcf	status, 6	;RP1=0, select bank0
  7784  037E  1303               	movwf	(printExec@col)
  7785  037F  00C2               	line	360
  7786                           	
  7787                           l4849:	
  7788  0380                     ;fifo.c: 358: void printExec (char col, char ind);fifo.c: 359: {;fifo.c: 360:     char p
                                 asso = posAtual( ind );
  7789                           	movf	(printExec@ind),w
  7790  0380  0839               	fcall	_posAtual
  7791  0381  160A  118A  24BD  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7792  0386  1283               	bcf	status, 6	;RP1=0, select bank0
  7793  0387  1303               	movwf	(??_printExec+0)+0
  7794  0388  00BA               	movf	(??_printExec+0)+0,w
  7795  0389  083A               	movwf	(printExec@passo)
  7796  038A  00C3               	line	362
  7797                           	
  7798                           l4851:	
  7799  038B                     ;fifo.c: 362:     if(passo & 0x80)
  7800                           	btfss	(printExec@passo),(7)&7
  7801  038B  1FC3               	goto	u4071
  7802  038C  2B8E               	goto	u4070
  7803  038D  2B8F               u4071:
  7804  038E                     	goto	l4863
  7805  038E  2BD4               u4070:
  7806  038F                     	line	364
  7807                           	
  7808                           l4853:	
  7809  038F                     ;fifo.c: 363:     {;fifo.c: 364:         passo &= 0x7F;
  7810                           	movlw	low(07Fh)
  7811  038F  307F               	movwf	(??_printExec+0)+0
  7812  0390  00BA               	movf	(??_printExec+0)+0,w
  7813  0391  083A               	andwf	(printExec@passo),f
  7814  0392  05C3               	line	365
  7815                           	
  7816                           l4855:	
  7817  0393                     ;fifo.c: 365:         if( dignum_tam( (int) passo ) == 3 )
  7818                           	movf	(printExec@passo),w
  7819  0393  0843               	movwf	(??_printExec+0)+0
  7820  0394  00BA               	clrf	(??_printExec+0)+0+1
  7821  0395  01BB               	movf	0+(??_printExec+0)+0,w
  7822  0396  083A               	movwf	(dignum_tam@num)
  7823  0397  00A9               	movf	1+(??_printExec+0)+0,w
  7824  0398  083B               	movwf	(dignum_tam@num+1)
  7825  0399  00AA               	fcall	_dignum_tam
  7826  039A  160A  118A  257A  120A  118A  	xorlw	03h
  7827  039F  3A03               	skipz
  7828  03A0  1D03               	goto	u4081
  7829  03A1  2BA3               	goto	u4080
  7830  03A2  2BA4               u4081:
  7831  03A3                     	goto	l4859
  7832  03A3  2BA9               u4080:
  7833  03A4                     	line	366
  7834                           	
  7835                           l4857:	
  7836  03A4                     ;fifo.c: 366:             col-=1;
  7837                           	movlw	01h
  7838  03A4  3001               	bcf	status, 5	;RP0=0, select bank0
  7839  03A5  1283               	bcf	status, 6	;RP1=0, select bank0
  7840  03A6  1303               	subwf	(printExec@col),f
  7841  03A7  02C2               	goto	l4859
  7842  03A8  2BA9               	
  7843                           l244:	
  7844  03A9                     	line	367
  7845                           	
  7846                           l4859:	
  7847  03A9                     ;fifo.c: 367:         dispLCD_num(0, col, (int)passo, dignum_tam( (int)passo) );
  7848                           	bcf	status, 5	;RP0=0, select bank0
  7849  03A9  1283               	bcf	status, 6	;RP1=0, select bank0
  7850  03AA  1303               	movf	(printExec@col),w
  7851  03AB  0842               	movwf	(??_printExec+0)+0
  7852  03AC  00BA               	movf	(??_printExec+0)+0,w
  7853  03AD  083A               	movwf	(dispLCD_num@col)
  7854  03AE  00AD               	movf	(printExec@passo),w
  7855  03AF  0843               	movwf	(??_printExec+1)+0
  7856  03B0  00BB               	clrf	(??_printExec+1)+0+1
  7857  03B1  01BC               	movf	0+(??_printExec+1)+0,w
  7858  03B2  083B               	movwf	(dispLCD_num@num)
  7859  03B3  00AE               	movf	1+(??_printExec+1)+0,w
  7860  03B4  083C               	movwf	(dispLCD_num@num+1)
  7861  03B5  00AF               	movf	(printExec@passo),w
  7862  03B6  0843               	movwf	(??_printExec+3)+0
  7863  03B7  00BD               	clrf	(??_printExec+3)+0+1
  7864  03B8  01BE               	movf	0+(??_printExec+3)+0,w
  7865  03B9  083D               	movwf	(dignum_tam@num)
  7866  03BA  00A9               	movf	1+(??_printExec+3)+0,w
  7867  03BB  083E               	movwf	(dignum_tam@num+1)
  7868  03BC  00AA               	fcall	_dignum_tam
  7869  03BD  160A  118A  257A  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7870  03C2  1283               	bcf	status, 6	;RP1=0, select bank0
  7871  03C3  1303               	movwf	(??_printExec+5)+0
  7872  03C4  00BF               	movf	(??_printExec+5)+0,w
  7873  03C5  083F               	movwf	(dispLCD_num@tam)
  7874  03C6  00B0               	movlw	low(0)
  7875  03C7  3000               	fcall	_dispLCD_num
  7876  03C8  120A  118A  228D  120A  118A  	line	368
  7877                           	
  7878                           l4861:	
  7879  03CD                     ;fifo.c: 368:         dispLCD_dataReg('s');
  7880                           	movlw	low(073h)
  7881  03CD  3073               	fcall	_dispLCD_dataReg
  7882  03CE  160A  118A  2725  120A  118A  	line	369
  7883                           ;fifo.c: 369:     }
  7884                           	goto	l251
  7885  03D3  2C0D               	line	370
  7886                           ;fifo.c: 370:     else if( (passo >= 'A') && (passo <= 'z') )
  7887                           	
  7888                           l243:	
  7889  03D4                     	
  7890                           l4863:	
  7891  03D4                     	movlw	low(041h)
  7892  03D4  3041               	bcf	status, 5	;RP0=0, select bank0
  7893  03D5  1283               	bcf	status, 6	;RP1=0, select bank0
  7894  03D6  1303               	subwf	(printExec@passo),w
  7895  03D7  0243               	skipc
  7896  03D8  1C03               	goto	u4091
  7897  03D9  2BDB               	goto	u4090
  7898  03DA  2BDC               u4091:
  7899  03DB                     	goto	l251
  7900  03DB  2C0D               u4090:
  7901  03DC                     	
  7902                           l4865:	
  7903  03DC                     	movlw	low(07Bh)
  7904  03DC  307B               	subwf	(printExec@passo),w
  7905  03DD  0243               	skipnc
  7906  03DE  1803               	goto	u4101
  7907  03DF  2BE1               	goto	u4100
  7908  03E0  2BE2               u4101:
  7909  03E1                     	goto	l251
  7910  03E1  2C0D               u4100:
  7911  03E2                     	line	372
  7912                           	
  7913                           l4867:	
  7914  03E2                     ;fifo.c: 371:     {;fifo.c: 372:         dispLCD_lincol(0, col);
  7915                           	movf	(printExec@col),w
  7916  03E2  0842               	movwf	(??_printExec+0)+0
  7917  03E3  00BA               	movf	(??_printExec+0)+0,w
  7918  03E4  083A               	movwf	(dispLCD_lincol@col)
  7919  03E5  00A3               	movlw	low(0)
  7920  03E6  3000               	fcall	_dispLCD_lincol
  7921  03E7  160A  118A  24A8  120A  118A  	line	373
  7922                           ;fifo.c: 373:         dispLCD_dataReg( passo & ~0x20 );
  7923                           	bcf	status, 5	;RP0=0, select bank0
  7924  03EC  1283               	bcf	status, 6	;RP1=0, select bank0
  7925  03ED  1303               	movf	(printExec@passo),w
  7926  03EE  0843               	andlw	0DFh
  7927  03EF  39DF               	fcall	_dispLCD_dataReg
  7928  03F0  160A  118A  2725  120A  118A  	line	374
  7929                           	
  7930                           l4869:	
  7931  03F5                     ;fifo.c: 374:         dispLCD_dataReg( passo & 0x20 ? '-': '+' );
  7932                           	bcf	status, 5	;RP0=0, select bank0
  7933  03F5  1283               	bcf	status, 6	;RP1=0, select bank0
  7934  03F6  1303               	btfsc	(printExec@passo),(5)&7
  7935  03F7  1AC3               	goto	u4111
  7936  03F8  2BFA               	goto	u4110
  7937  03F9  2BFB               u4111:
  7938  03FA                     	goto	l4873
  7939  03FA  2C00               u4110:
  7940  03FB                     	
  7941                           l4871:	
  7942  03FB                     	movlw	02Bh
  7943  03FB  302B               	movwf	(_printExec$208)
  7944  03FC  00C0               	movlw	0
  7945  03FD  3000               	movwf	((_printExec$208))+1
  7946  03FE  00C1               	goto	l4875
  7947  03FF  2C05               	
  7948                           l248:	
  7949  0400                     	
  7950                           l4873:	
  7951  0400                     	movlw	02Dh
  7952  0400  302D               	movwf	(_printExec$208)
  7953  0401  00C0               	movlw	0
  7954  0402  3000               	movwf	((_printExec$208))+1
  7955  0403  00C1               	goto	l4875
  7956  0404  2C05               	
  7957                           l250:	
  7958  0405                     	
  7959                           l4875:	
  7960  0405                     	movf	(_printExec$208),w
  7961  0405  0840               	fcall	_dispLCD_dataReg
  7962  0406  160A  118A  2725  120A  118A  	goto	l251
  7963  040B  2C0D               	line	375
  7964                           ;fifo.c: 375:     }
  7965                           	
  7966                           l246:	
  7967  040C                     	goto	l251
  7968  040C  2C0D               	
  7969                           l245:	
  7970  040D                     	line	376
  7971                           	
  7972                           l251:	
  7973  040D                     	return
  7974  040D  0008               	opt stack 0
  7975                           GLOBAL	__end_of_printExec
  7976                           	__end_of_printExec:
  7977  040E                     	signat	_printExec,8313
  7978                           	global	_posAtual
  7979                           
  7980 ;; *************** function _posAtual *****************
  7981 ;; Defined at:
  7982 ;;		line 350 in file "fifo.c"
  7983 ;; Parameters:    Size  Location     Type
  7984 ;;  ind             1    wreg     unsigned char 
  7985 ;; Auto vars:     Size  Location     Type
  7986 ;;  ind             1    2[BANK0 ] unsigned char 
  7987 ;;  passo           1    3[BANK0 ] unsigned char 
  7988 ;; Return value:  Size  Location     Type
  7989 ;;                  1    wreg      unsigned char 
  7990 ;; Registers used:
  7991 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7992 ;; Tracked objects:
  7993 ;;		On entry : 0/0
  7994 ;;		On exit  : 0/0
  7995 ;;		Unchanged: 0/0
  7996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7997 ;;      Params:         0       0       0       0       0
  7998 ;;      Locals:         0       2       0       0       0
  7999 ;;      Temps:          0       1       0       0       0
  8000 ;;      Totals:         0       3       0       0       0
  8001 ;;Total ram usage:        3 bytes
  8002 ;; Hardware stack levels used:    1
  8003 ;; Hardware stack levels required when called:    3
  8004 ;; This function calls:
  8005 ;;		_fifo_lerPos
  8006 ;;		_getIndicePassos
  8007 ;; This function is called by:
  8008 ;;		_printExec
  8009 ;; This function uses a non-reentrant model
  8010 ;;
  8011                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  8012                           	line	350
  8013                           global __ptext14
  8014                           __ptext14:	;psect for function _posAtual
  8015  14BD                     psect	text14
  8016                           	file	"fifo.c"
  8017                           	line	350
  8018                           	global	__size_of_posAtual
  8019                           	__size_of_posAtual	equ	__end_of_posAtual-_posAtual
  8020  0019                     	
  8021                           _posAtual:	
  8022  14BD                     ;incstack = 0
  8023                           	opt	stack 3
  8024                           ; Regs used in _posAtual: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8025                           ;posAtual@ind stored from wreg
  8026                           	bcf	status, 5	;RP0=0, select bank0
  8027  14BD  1283               	bcf	status, 6	;RP1=0, select bank0
  8028  14BE  1303               	movwf	(posAtual@ind)
  8029  14BF  00A2               	line	352
  8030                           	
  8031                           l4533:	
  8032  14C0                     ;fifo.c: 350: char posAtual(char ind);fifo.c: 351: {;fifo.c: 352:     char passo = 0;
  8033                           	clrf	(posAtual@passo)
  8034  14C0  01A3               	line	354
  8035                           	
  8036                           l4535:	
  8037  14C1                     ;fifo.c: 354:     passo = fifo_lerPos( getIndicePassos() + ind );
  8038                           	fcall	_getIndicePassos
  8039  14C1  160A  118A  23C9  160A  118A  	bcf	status, 5	;RP0=0, select bank0
  8040  14C6  1283               	bcf	status, 6	;RP1=0, select bank0
  8041  14C7  1303               	addwf	(posAtual@ind),w
  8042  14C8  0722               	fcall	_fifo_lerPos
  8043  14C9  160A  118A  2408  160A  118A  	bcf	status, 5	;RP0=0, select bank0
  8044  14CE  1283               	bcf	status, 6	;RP1=0, select bank0
  8045  14CF  1303               	movwf	(??_posAtual+0)+0
  8046  14D0  00A1               	movf	(??_posAtual+0)+0,w
  8047  14D1  0821               	movwf	(posAtual@passo)
  8048  14D2  00A3               	line	355
  8049                           	
  8050                           l4537:	
  8051  14D3                     ;fifo.c: 355:     return(passo);
  8052                           	movf	(posAtual@passo),w
  8053  14D3  0823               	goto	l240
  8054  14D4  2CD5               	
  8055                           l4539:	
  8056  14D5                     	line	356
  8057                           	
  8058                           l240:	
  8059  14D5                     	return
  8060  14D5  0008               	opt stack 0
  8061                           GLOBAL	__end_of_posAtual
  8062                           	__end_of_posAtual:
  8063  14D6                     	signat	_posAtual,4217
  8064                           	global	_getIndicePassos
  8065                           
  8066 ;; *************** function _getIndicePassos *****************
  8067 ;; Defined at:
  8068 ;;		line 29 in file "fifo.c"
  8069 ;; Parameters:    Size  Location     Type
  8070 ;;		None
  8071 ;; Auto vars:     Size  Location     Type
  8072 ;;		None
  8073 ;; Return value:  Size  Location     Type
  8074 ;;                  1    wreg      unsigned char 
  8075 ;; Registers used:
  8076 ;;		wreg
  8077 ;; Tracked objects:
  8078 ;;		On entry : 0/0
  8079 ;;		On exit  : 0/0
  8080 ;;		Unchanged: 0/0
  8081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8082 ;;      Params:         0       0       0       0       0
  8083 ;;      Locals:         0       0       0       0       0
  8084 ;;      Temps:          0       0       0       0       0
  8085 ;;      Totals:         0       0       0       0       0
  8086 ;;Total ram usage:        0 bytes
  8087 ;; Hardware stack levels used:    1
  8088 ;; Hardware stack levels required when called:    2
  8089 ;; This function calls:
  8090 ;;		Nothing
  8091 ;; This function is called by:
  8092 ;;		_posAtual
  8093 ;;		_main
  8094 ;; This function uses a non-reentrant model
  8095 ;;
  8096                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  8097                           	line	29
  8098                           global __ptext15
  8099                           __ptext15:	;psect for function _getIndicePassos
  8100  13C9                     psect	text15
  8101                           	file	"fifo.c"
  8102                           	line	29
  8103                           	global	__size_of_getIndicePassos
  8104                           	__size_of_getIndicePassos	equ	__end_of_getIndicePassos-_getIndicePassos
  8105  0003                     	
  8106                           _getIndicePassos:	
  8107  13C9                     ;incstack = 0
  8108                           	opt	stack 3
  8109                           ; Regs used in _getIndicePassos: [wreg]
  8110                           	line	31
  8111                           	
  8112                           l4391:	
  8113  13C9                     ;fifo.c: 31:     return(indice_passos);
  8114                           	movf	(_indice_passos),w
  8115  13C9  087B               	goto	l96
  8116  13CA  2BCB               	
  8117                           l4393:	
  8118  13CB                     	line	32
  8119                           	
  8120                           l96:	
  8121  13CB                     	return
  8122  13CB  0008               	opt stack 0
  8123                           GLOBAL	__end_of_getIndicePassos
  8124                           	__end_of_getIndicePassos:
  8125  13CC                     	signat	_getIndicePassos,89
  8126                           	global	_fifo_lerPos
  8127                           
  8128 ;; *************** function _fifo_lerPos *****************
  8129 ;; Defined at:
  8130 ;;		line 128 in file "fifo.c"
  8131 ;; Parameters:    Size  Location     Type
  8132 ;;  i               1    wreg     unsigned char 
  8133 ;; Auto vars:     Size  Location     Type
  8134 ;;  i               1    0[BANK0 ] unsigned char 
  8135 ;; Return value:  Size  Location     Type
  8136 ;;                  1    wreg      unsigned char 
  8137 ;; Registers used:
  8138 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8139 ;; Tracked objects:
  8140 ;;		On entry : 0/0
  8141 ;;		On exit  : 0/0
  8142 ;;		Unchanged: 0/0
  8143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8144 ;;      Params:         0       0       0       0       0
  8145 ;;      Locals:         0       1       0       0       0
  8146 ;;      Temps:          0       0       0       0       0
  8147 ;;      Totals:         0       1       0       0       0
  8148 ;;Total ram usage:        1 bytes
  8149 ;; Hardware stack levels used:    1
  8150 ;; Hardware stack levels required when called:    2
  8151 ;; This function calls:
  8152 ;;		Nothing
  8153 ;; This function is called by:
  8154 ;;		_posAtual
  8155 ;;		_main
  8156 ;; This function uses a non-reentrant model
  8157 ;;
  8158                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  8159                           	line	128
  8160                           global __ptext16
  8161                           __ptext16:	;psect for function _fifo_lerPos
  8162  1408                     psect	text16
  8163                           	file	"fifo.c"
  8164                           	line	128
  8165                           	global	__size_of_fifo_lerPos
  8166                           	__size_of_fifo_lerPos	equ	__end_of_fifo_lerPos-_fifo_lerPos
  8167  000A                     	
  8168                           _fifo_lerPos:	
  8169  1408                     ;incstack = 0
  8170                           	opt	stack 3
  8171                           ; Regs used in _fifo_lerPos: [wreg-fsr0h+status,2+status,0]
  8172                           ;fifo_lerPos@i stored from wreg
  8173                           	bcf	status, 5	;RP0=0, select bank0
  8174  1408  1283               	bcf	status, 6	;RP1=0, select bank0
  8175  1409  1303               	movwf	(fifo_lerPos@i)
  8176  140A  00A0               	line	130
  8177                           	
  8178                           l4395:	
  8179  140B                     ;fifo.c: 128: char fifo_lerPos(char i);fifo.c: 129: {;fifo.c: 130:     return ( fila[i] 
                                 );
  8180                           	movf	(fifo_lerPos@i),w
  8181  140B  0820               	addlw	low(_fila|((0x1)<<8))&0ffh
  8182  140C  3E90               	movwf	fsr0
  8183  140D  0084               	bsf	status, 7	;select IRP bank3
  8184  140E  1783               	movf	indf,w
  8185  140F  0800               	goto	l143
  8186  1410  2C11               	
  8187                           l4397:	
  8188  1411                     	line	131
  8189                           	
  8190                           l143:	
  8191  1411                     	return
  8192  1411  0008               	opt stack 0
  8193                           GLOBAL	__end_of_fifo_lerPos
  8194                           	__end_of_fifo_lerPos:
  8195  1412                     	signat	_fifo_lerPos,4217
  8196                           	global	_dispLCD_num
  8197                           
  8198 ;; *************** function _dispLCD_num *****************
  8199 ;; Defined at:
  8200 ;;		line 187 in file "dispLCD4vias.c"
  8201 ;; Parameters:    Size  Location     Type
  8202 ;;  lin             1    wreg     unsigned char 
  8203 ;;  col             1   13[BANK0 ] unsigned char 
  8204 ;;  num             2   14[BANK0 ] int 
  8205 ;;  tam             1   16[BANK0 ] unsigned char 
  8206 ;; Auto vars:     Size  Location     Type
  8207 ;;  lin             1   20[BANK0 ] unsigned char 
  8208 ;;  div             2   23[BANK0 ] int 
  8209 ;;  sinal           1   22[BANK0 ] unsigned char 
  8210 ;;  size            1   21[BANK0 ] unsigned char 
  8211 ;; Return value:  Size  Location     Type
  8212 ;;                  1    wreg      void 
  8213 ;; Registers used:
  8214 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8215 ;; Tracked objects:
  8216 ;;		On entry : 0/0
  8217 ;;		On exit  : 0/0
  8218 ;;		Unchanged: 0/0
  8219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8220 ;;      Params:         0       4       0       0       0
  8221 ;;      Locals:         0       5       0       0       0
  8222 ;;      Temps:          0       3       0       0       0
  8223 ;;      Totals:         0      12       0       0       0
  8224 ;;Total ram usage:       12 bytes
  8225 ;; Hardware stack levels used:    1
  8226 ;; Hardware stack levels required when called:    4
  8227 ;; This function calls:
  8228 ;;		___awdiv
  8229 ;;		___awmod
  8230 ;;		_dispLCD_dataReg
  8231 ;;		_dispLCD_lincol
  8232 ;; This function is called by:
  8233 ;;		_printExec
  8234 ;;		_main
  8235 ;; This function uses a non-reentrant model
  8236 ;;
  8237                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  8238                           	file	"dispLCD4vias.c"
  8239                           	line	187
  8240                           global __ptext17
  8241                           __ptext17:	;psect for function _dispLCD_num
  8242  028D                     psect	text17
  8243                           	file	"dispLCD4vias.c"
  8244                           	line	187
  8245                           	global	__size_of_dispLCD_num
  8246                           	__size_of_dispLCD_num	equ	__end_of_dispLCD_num-_dispLCD_num
  8247  00F0                     	
  8248                           _dispLCD_num:	
  8249  028D                     ;incstack = 0
  8250                           	opt	stack 2
  8251                           ; Regs used in _dispLCD_num: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8252                           ;dispLCD_num@lin stored from wreg
  8253                           	bcf	status, 5	;RP0=0, select bank0
  8254  028D  1283               	bcf	status, 6	;RP1=0, select bank0
  8255  028E  1303               	movwf	(dispLCD_num@lin)
  8256  028F  00B4               	line	194
  8257                           	
  8258                           l4455:	
  8259  0290                     ;dispLCD4vias.c: 187: void dispLCD_num( unsigned char lin, unsigned char col,;dispLCD4vi
                                 as.c: 188:                     int num, unsigned char tam );dispLCD4vias.c: 189: {;dispL
                                 CD4vias.c: 190:     int div;;dispLCD4vias.c: 191:     unsigned char size;;dispLCD4vias.c
                                 : 192:     char sinal;;dispLCD4vias.c: 194:     sinal = num < 0;
  8260                           	btfsc	(dispLCD_num@num+1),7
  8261  0290  1BAF               	goto	u3481
  8262  0291  2A93               	goto	u3480
  8263  0292  2A95               u3481:
  8264  0293                     	movlw	1
  8265  0293  3001               	goto	u3490
  8266  0294  2A96               u3480:
  8267  0295                     	movlw	0
  8268  0295  3000               u3490:
  8269  0296                     	movwf	(??_dispLCD_num+0)+0
  8270  0296  00B1               	movf	(??_dispLCD_num+0)+0,w
  8271  0297  0831               	movwf	(dispLCD_num@sinal)
  8272  0298  00B6               	line	195
  8273                           	
  8274                           l4457:	
  8275  0299                     ;dispLCD4vias.c: 195:     if( sinal )
  8276                           	movf	((dispLCD_num@sinal)),w
  8277  0299  0836               	btfsc	status,2
  8278  029A  1903               	goto	u3501
  8279  029B  2A9D               	goto	u3500
  8280  029C  2A9E               u3501:
  8281  029D                     	goto	l4461
  8282  029D  2AA4               u3500:
  8283  029E                     	line	196
  8284                           	
  8285                           l4459:	
  8286  029E                     ;dispLCD4vias.c: 196:         num = (~num) + 1;
  8287                           	comf	(dispLCD_num@num),f
  8288  029E  09AE               	comf	(dispLCD_num@num+1),f
  8289  029F  09AF               	incf	(dispLCD_num@num),f
  8290  02A0  0AAE               	skipnz
  8291  02A1  1903               	incf	(dispLCD_num@num+1),f
  8292  02A2  0AAF               	goto	l4461
  8293  02A3  2AA4               	
  8294                           l48:	
  8295  02A4                     	line	198
  8296                           	
  8297                           l4461:	
  8298  02A4                     ;dispLCD4vias.c: 198:     dispLCD_lincol(lin, col);
  8299                           	movf	(dispLCD_num@col),w
  8300  02A4  082D               	movwf	(??_dispLCD_num+0)+0
  8301  02A5  00B1               	movf	(??_dispLCD_num+0)+0,w
  8302  02A6  0831               	movwf	(dispLCD_lincol@col)
  8303  02A7  00A3               	movf	(dispLCD_num@lin),w
  8304  02A8  0834               	fcall	_dispLCD_lincol
  8305  02A9  160A  118A  24A8  120A  118A  	line	200
  8306                           	
  8307                           l4463:	
  8308  02AE                     ;dispLCD4vias.c: 200:     div=10000;
  8309                           	movlw	010h
  8310  02AE  3010               	bcf	status, 5	;RP0=0, select bank0
  8311  02AF  1283               	bcf	status, 6	;RP1=0, select bank0
  8312  02B0  1303               	movwf	(dispLCD_num@div)
  8313  02B1  00B7               	movlw	027h
  8314  02B2  3027               	movwf	((dispLCD_num@div))+1
  8315  02B3  00B8               	line	201
  8316                           	
  8317                           l4465:	
  8318  02B4                     ;dispLCD4vias.c: 201:     size = 5;
  8319                           	movlw	low(05h)
  8320  02B4  3005               	movwf	(??_dispLCD_num+0)+0
  8321  02B5  00B1               	movf	(??_dispLCD_num+0)+0,w
  8322  02B6  0831               	movwf	(dispLCD_num@size)
  8323  02B7  00B5               	line	202
  8324                           ;dispLCD4vias.c: 202:     while( div >= 1 )
  8325                           	goto	l4473
  8326  02B8  2AE8               	
  8327                           l50:	
  8328  02B9                     	line	204
  8329                           	
  8330                           l4467:	
  8331  02B9                     ;dispLCD4vias.c: 203:     {;dispLCD4vias.c: 204:         if( num/div == 0 )
  8332                           	bcf	status, 5	;RP0=0, select bank0
  8333  02B9  1283               	bcf	status, 6	;RP1=0, select bank0
  8334  02BA  1303               	movf	(dispLCD_num@div+1),w
  8335  02BB  0838               	movwf	(___awdiv@divisor+1)
  8336  02BC  00A1               	movf	(dispLCD_num@div),w
  8337  02BD  0837               	movwf	(___awdiv@divisor)
  8338  02BE  00A0               	movf	(dispLCD_num@num+1),w
  8339  02BF  082F               	movwf	(___awdiv@dividend+1)
  8340  02C0  00A3               	movf	(dispLCD_num@num),w
  8341  02C1  082E               	movwf	(___awdiv@dividend)
  8342  02C2  00A2               	fcall	___awdiv
  8343  02C3  120A  118A  2492  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  8344  02C8  1283               	bcf	status, 6	;RP1=0, select bank0
  8345  02C9  1303               	movf	((0+(?___awdiv))),w
  8346  02CA  0820               iorwf	((1+(?___awdiv))),w
  8347  02CB  0421               	btfss	status,2
  8348  02CC  1D03               	goto	u3511
  8349  02CD  2ACF               	goto	u3510
  8350  02CE  2AD0               u3511:
  8351  02CF                     	goto	l4479
  8352  02CF  2B02               u3510:
  8353  02D0                     	line	205
  8354                           	
  8355                           l4469:	
  8356  02D0                     ;dispLCD4vias.c: 205:             --size;
  8357                           	movlw	01h
  8358  02D0  3001               	subwf	(dispLCD_num@size),f
  8359  02D1  02B5               	goto	l4471
  8360  02D2  2AD4               	line	206
  8361                           ;dispLCD4vias.c: 206:         else
  8362                           	
  8363                           l51:	
  8364  02D3                     	line	207
  8365                           ;dispLCD4vias.c: 207:             break;
  8366                           	goto	l4479
  8367  02D3  2B02               	
  8368                           l52:	
  8369  02D4                     	line	208
  8370                           	
  8371                           l4471:	
  8372  02D4                     ;dispLCD4vias.c: 208:         div/=10;
  8373                           	movlw	0Ah
  8374  02D4  300A               	movwf	(___awdiv@divisor)
  8375  02D5  00A0               	movlw	0
  8376  02D6  3000               	movwf	((___awdiv@divisor))+1
  8377  02D7  00A1               	movf	(dispLCD_num@div+1),w
  8378  02D8  0838               	movwf	(___awdiv@dividend+1)
  8379  02D9  00A3               	movf	(dispLCD_num@div),w
  8380  02DA  0837               	movwf	(___awdiv@dividend)
  8381  02DB  00A2               	fcall	___awdiv
  8382  02DC  120A  118A  2492  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  8383  02E1  1283               	bcf	status, 6	;RP1=0, select bank0
  8384  02E2  1303               	movf	(1+(?___awdiv)),w
  8385  02E3  0821               	movwf	(dispLCD_num@div+1)
  8386  02E4  00B8               	movf	(0+(?___awdiv)),w
  8387  02E5  0820               	movwf	(dispLCD_num@div)
  8388  02E6  00B7               	goto	l4473
  8389  02E7  2AE8               	line	209
  8390                           ;dispLCD4vias.c: 209:     }
  8391                           	
  8392                           l49:	
  8393  02E8                     	line	202
  8394                           	
  8395                           l4473:	
  8396  02E8                     ;dispLCD4vias.c: 202:     while( div >= 1 )
  8397                           	movf	(dispLCD_num@div+1),w
  8398  02E8  0838               	xorlw	80h
  8399  02E9  3A80               	movwf	btemp+1
  8400  02EA  00FF               	movlw	(0)^80h
  8401  02EB  3080               	subwf	btemp+1,w
  8402  02EC  027F               	skipz
  8403  02ED  1D03               	goto	u3525
  8404  02EE  2AF1               	movlw	01h
  8405  02EF  3001               	subwf	(dispLCD_num@div),w
  8406  02F0  0237               u3525:
  8407  02F1                     
  8408                           	skipnc
  8409  02F1  1803               	goto	u3521
  8410  02F2  2AF4               	goto	u3520
  8411  02F3  2AF5               u3521:
  8412  02F4                     	goto	l4467
  8413  02F4  2AB9               u3520:
  8414  02F5                     	goto	l4479
  8415  02F5  2B02               	
  8416                           l53:	
  8417  02F6                     	line	211
  8418                           ;dispLCD4vias.c: 211:     while( tam > (size+sinal) && tam > 1 )
  8419                           	goto	l4479
  8420  02F6  2B02               	
  8421                           l55:	
  8422  02F7                     	line	213
  8423                           	
  8424                           l4475:	
  8425  02F7                     ;dispLCD4vias.c: 212:     {;dispLCD4vias.c: 213:         dispLCD_dataReg(' ');
  8426                           	movlw	low(020h)
  8427  02F7  3020               	fcall	_dispLCD_dataReg
  8428  02F8  160A  118A  2725  120A  118A  	line	214
  8429                           	
  8430                           l4477:	
  8431  02FD                     ;dispLCD4vias.c: 214:         --tam;
  8432                           	movlw	01h
  8433  02FD  3001               	bcf	status, 5	;RP0=0, select bank0
  8434  02FE  1283               	bcf	status, 6	;RP1=0, select bank0
  8435  02FF  1303               	subwf	(dispLCD_num@tam),f
  8436  0300  02B0               	goto	l4479
  8437  0301  2B02               	line	215
  8438                           ;dispLCD4vias.c: 215:     }
  8439                           	
  8440                           l54:	
  8441  0302                     	line	211
  8442                           	
  8443                           l4479:	
  8444  0302                     ;dispLCD4vias.c: 211:     while( tam > (size+sinal) && tam > 1 )
  8445                           	bcf	status, 5	;RP0=0, select bank0
  8446  0302  1283               	bcf	status, 6	;RP1=0, select bank0
  8447  0303  1303               	movf	(dispLCD_num@size),w
  8448  0304  0835               	addwf	(dispLCD_num@sinal),w
  8449  0305  0736               	movwf	(??_dispLCD_num+0)+0
  8450  0306  00B1               	clrf	(??_dispLCD_num+0)+0+1
  8451  0307  01B2               	rlf	1+(??_dispLCD_num+0)+0,f
  8452  0308  0DB2               	
  8453                           	movf	1+(??_dispLCD_num+0)+0,w
  8454  0309  0832               	xorlw	80h
  8455  030A  3A80               	movwf	(??_dispLCD_num+2)+0
  8456  030B  00B3               	movlw	80h
  8457  030C  3080               	subwf	(??_dispLCD_num+2)+0,w
  8458  030D  0233               	skipz
  8459  030E  1D03               	goto	u3535
  8460  030F  2B12               	movf	(dispLCD_num@tam),w
  8461  0310  0830               	subwf	0+(??_dispLCD_num+0)+0,w
  8462  0311  0231               u3535:
  8463  0312                     
  8464                           	skipnc
  8465  0312  1803               	goto	u3531
  8466  0313  2B15               	goto	u3530
  8467  0314  2B16               u3531:
  8468  0315                     	goto	l4483
  8469  0315  2B20               u3530:
  8470  0316                     	
  8471                           l4481:	
  8472  0316                     	movlw	low(02h)
  8473  0316  3002               	bcf	status, 5	;RP0=0, select bank0
  8474  0317  1283               	bcf	status, 6	;RP1=0, select bank0
  8475  0318  1303               	subwf	(dispLCD_num@tam),w
  8476  0319  0230               	skipnc
  8477  031A  1803               	goto	u3541
  8478  031B  2B1D               	goto	u3540
  8479  031C  2B1E               u3541:
  8480  031D                     	goto	l4475
  8481  031D  2AF7               u3540:
  8482  031E                     	goto	l4483
  8483  031E  2B20               	
  8484                           l57:	
  8485  031F                     	goto	l4483
  8486  031F  2B20               	
  8487                           l58:	
  8488  0320                     	line	217
  8489                           	
  8490                           l4483:	
  8491  0320                     ;dispLCD4vias.c: 217:     if( sinal )
  8492                           	bcf	status, 5	;RP0=0, select bank0
  8493  0320  1283               	bcf	status, 6	;RP1=0, select bank0
  8494  0321  1303               	movf	((dispLCD_num@sinal)),w
  8495  0322  0836               	btfsc	status,2
  8496  0323  1903               	goto	u3551
  8497  0324  2B26               	goto	u3550
  8498  0325  2B27               u3551:
  8499  0326                     	goto	l60
  8500  0326  2B2E               u3550:
  8501  0327                     	line	218
  8502                           	
  8503                           l4485:	
  8504  0327                     ;dispLCD4vias.c: 218:         dispLCD_dataReg('-');
  8505                           	movlw	low(02Dh)
  8506  0327  302D               	fcall	_dispLCD_dataReg
  8507  0328  160A  118A  2725  120A  118A  	goto	l60
  8508  032D  2B2E               	
  8509                           l59:	
  8510  032E                     	line	220
  8511                           ;dispLCD4vias.c: 220:     do
  8512                           	
  8513                           l60:	
  8514  032E                     	line	222
  8515                           ;dispLCD4vias.c: 221:     {;dispLCD4vias.c: 222:         dispLCD_dataReg( (num / div) + 
                                 '0' );
  8516                           	bcf	status, 5	;RP0=0, select bank0
  8517  032E  1283               	bcf	status, 6	;RP1=0, select bank0
  8518  032F  1303               	movf	(dispLCD_num@div+1),w
  8519  0330  0838               	movwf	(___awdiv@divisor+1)
  8520  0331  00A1               	movf	(dispLCD_num@div),w
  8521  0332  0837               	movwf	(___awdiv@divisor)
  8522  0333  00A0               	movf	(dispLCD_num@num+1),w
  8523  0334  082F               	movwf	(___awdiv@dividend+1)
  8524  0335  00A3               	movf	(dispLCD_num@num),w
  8525  0336  082E               	movwf	(___awdiv@dividend)
  8526  0337  00A2               	fcall	___awdiv
  8527  0338  120A  118A  2492  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  8528  033D  1283               	bcf	status, 6	;RP1=0, select bank0
  8529  033E  1303               	movf	(0+(?___awdiv)),w
  8530  033F  0820               	addlw	030h
  8531  0340  3E30               	fcall	_dispLCD_dataReg
  8532  0341  160A  118A  2725  120A  118A  	line	223
  8533                           ;dispLCD4vias.c: 223:         num = num % div;
  8534                           	bcf	status, 5	;RP0=0, select bank0
  8535  0346  1283               	bcf	status, 6	;RP1=0, select bank0
  8536  0347  1303               	movf	(dispLCD_num@div+1),w
  8537  0348  0838               	movwf	(___awmod@divisor+1)
  8538  0349  00A1               	movf	(dispLCD_num@div),w
  8539  034A  0837               	movwf	(___awmod@divisor)
  8540  034B  00A0               	movf	(dispLCD_num@num+1),w
  8541  034C  082F               	movwf	(___awmod@dividend+1)
  8542  034D  00A3               	movf	(dispLCD_num@num),w
  8543  034E  082E               	movwf	(___awmod@dividend)
  8544  034F  00A2               	fcall	___awmod
  8545  0350  120A  118A  2571  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  8546  0355  1283               	bcf	status, 6	;RP1=0, select bank0
  8547  0356  1303               	movf	(1+(?___awmod)),w
  8548  0357  0821               	movwf	(dispLCD_num@num+1)
  8549  0358  00AF               	movf	(0+(?___awmod)),w
  8550  0359  0820               	movwf	(dispLCD_num@num)
  8551  035A  00AE               	line	224
  8552                           ;dispLCD4vias.c: 224:         div/=10;
  8553                           	movlw	0Ah
  8554  035B  300A               	movwf	(___awdiv@divisor)
  8555  035C  00A0               	movlw	0
  8556  035D  3000               	movwf	((___awdiv@divisor))+1
  8557  035E  00A1               	movf	(dispLCD_num@div+1),w
  8558  035F  0838               	movwf	(___awdiv@dividend+1)
  8559  0360  00A3               	movf	(dispLCD_num@div),w
  8560  0361  0837               	movwf	(___awdiv@dividend)
  8561  0362  00A2               	fcall	___awdiv
  8562  0363  120A  118A  2492  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  8563  0368  1283               	bcf	status, 6	;RP1=0, select bank0
  8564  0369  1303               	movf	(1+(?___awdiv)),w
  8565  036A  0821               	movwf	(dispLCD_num@div+1)
  8566  036B  00B8               	movf	(0+(?___awdiv)),w
  8567  036C  0820               	movwf	(dispLCD_num@div)
  8568  036D  00B7               	line	225
  8569                           	
  8570                           l4487:	
  8571  036E                     ;dispLCD4vias.c: 225:     }
  8572                           	movf	(dispLCD_num@div+1),w
  8573  036E  0838               	xorlw	80h
  8574  036F  3A80               	movwf	btemp+1
  8575  0370  00FF               	movlw	(0)^80h
  8576  0371  3080               	subwf	btemp+1,w
  8577  0372  027F               	skipz
  8578  0373  1D03               	goto	u3565
  8579  0374  2B77               	movlw	01h
  8580  0375  3001               	subwf	(dispLCD_num@div),w
  8581  0376  0237               u3565:
  8582  0377                     
  8583                           	skipnc
  8584  0377  1803               	goto	u3561
  8585  0378  2B7A               	goto	u3560
  8586  0379  2B7B               u3561:
  8587  037A                     	goto	l60
  8588  037A  2B2E               u3560:
  8589  037B                     	goto	l62
  8590  037B  2B7C               	
  8591                           l61:	
  8592  037C                     	line	227
  8593                           	
  8594                           l62:	
  8595  037C                     	return
  8596  037C  0008               	opt stack 0
  8597                           GLOBAL	__end_of_dispLCD_num
  8598                           	__end_of_dispLCD_num:
  8599  037D                     	signat	_dispLCD_num,16505
  8600                           	global	_ler_sensor
  8601                           
  8602 ;; *************** function _ler_sensor *****************
  8603 ;; Defined at:
  8604 ;;		line 68 in file "atuadores.c"
  8605 ;; Parameters:    Size  Location     Type
  8606 ;;  passo           1    wreg     unsigned char 
  8607 ;;  ptr             1    0[BANK0 ] PTR unsigned char 
  8608 ;;		 -> main@vetorIn(1), 
  8609 ;; Auto vars:     Size  Location     Type
  8610 ;;  passo           1    3[BANK0 ] unsigned char 
  8611 ;; Return value:  Size  Location     Type
  8612 ;;                  1    wreg      unsigned char 
  8613 ;; Registers used:
  8614 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8615 ;; Tracked objects:
  8616 ;;		On entry : 0/0
  8617 ;;		On exit  : 0/0
  8618 ;;		Unchanged: 0/0
  8619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8620 ;;      Params:         0       1       0       0       0
  8621 ;;      Locals:         0       1       0       0       0
  8622 ;;      Temps:          0       2       0       0       0
  8623 ;;      Totals:         0       4       0       0       0
  8624 ;;Total ram usage:        4 bytes
  8625 ;; Hardware stack levels used:    1
  8626 ;; Hardware stack levels required when called:    2
  8627 ;; This function calls:
  8628 ;;		Nothing
  8629 ;; This function is called by:
  8630 ;;		_main
  8631 ;; This function uses a non-reentrant model
  8632 ;;
  8633                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  8634                           	file	"atuadores.c"
  8635                           	line	68
  8636                           global __ptext18
  8637                           __ptext18:	;psect for function _ler_sensor
  8638  0505                     psect	text18
  8639                           	file	"atuadores.c"
  8640                           	line	68
  8641                           	global	__size_of_ler_sensor
  8642                           	__size_of_ler_sensor	equ	__end_of_ler_sensor-_ler_sensor
  8643  006C                     	
  8644                           _ler_sensor:	
  8645  0505                     ;incstack = 0
  8646                           	opt	stack 5
  8647                           ; Regs used in _ler_sensor: [wreg-fsr0h+status,2+status,0]
  8648                           ;ler_sensor@passo stored from wreg
  8649                           	bcf	status, 5	;RP0=0, select bank0
  8650  0505  1283               	bcf	status, 6	;RP1=0, select bank0
  8651  0506  1303               	movwf	(ler_sensor@passo)
  8652  0507  00A3               	line	70
  8653                           	
  8654                           l4991:	
  8655  0508                     ;atuadores.c: 68: char ler_sensor(char passo, char* ptr);atuadores.c: 69: {;atuadores.c:
                                  70:     switch (passo)
  8656                           	goto	l5049
  8657  0508  2D4E               	line	72
  8658                           ;atuadores.c: 71:     {;atuadores.c: 72:         case 'A': return(*ptr & 0x02); break;
  8659                           	
  8660                           l539:	
  8661  0509                     	
  8662                           l4993:	
  8663  0509                     	movf	(ler_sensor@ptr),w
  8664  0509  0820               	movwf	fsr0
  8665  050A  0084               	bcf	status, 7	;select IRP bank0
  8666  050B  1383               	movf	indf,w
  8667  050C  0800               	andlw	02h
  8668  050D  3902               	goto	l540
  8669  050E  2D70               	
  8670                           l4995:	
  8671  050F                     	goto	l540
  8672  050F  2D70               	
  8673                           l4997:	
  8674  0510                     	goto	l540
  8675  0510  2D70               	line	73
  8676                           ;atuadores.c: 73:         case 'a': return(*ptr & 0x01); break;
  8677                           	
  8678                           l542:	
  8679  0511                     	
  8680                           l4999:	
  8681  0511                     	movf	(ler_sensor@ptr),w
  8682  0511  0820               	movwf	fsr0
  8683  0512  0084               	bcf	status, 7	;select IRP bank0
  8684  0513  1383               	movf	indf,w
  8685  0514  0800               	andlw	01h
  8686  0515  3901               	goto	l540
  8687  0516  2D70               	
  8688                           l5001:	
  8689  0517                     	goto	l540
  8690  0517  2D70               	
  8691                           l5003:	
  8692  0518                     	goto	l540
  8693  0518  2D70               	line	74
  8694                           ;atuadores.c: 74:         case 'B': return(*ptr & 0x08); break;
  8695                           	
  8696                           l543:	
  8697  0519                     	
  8698                           l5005:	
  8699  0519                     	movf	(ler_sensor@ptr),w
  8700  0519  0820               	movwf	fsr0
  8701  051A  0084               	bcf	status, 7	;select IRP bank0
  8702  051B  1383               	movf	indf,w
  8703  051C  0800               	andlw	08h
  8704  051D  3908               	goto	l540
  8705  051E  2D70               	
  8706                           l5007:	
  8707  051F                     	goto	l540
  8708  051F  2D70               	
  8709                           l5009:	
  8710  0520                     	goto	l540
  8711  0520  2D70               	line	75
  8712                           ;atuadores.c: 75:         case 'b': return(*ptr & 0x04); break;
  8713                           	
  8714                           l544:	
  8715  0521                     	
  8716                           l5011:	
  8717  0521                     	movf	(ler_sensor@ptr),w
  8718  0521  0820               	movwf	fsr0
  8719  0522  0084               	bcf	status, 7	;select IRP bank0
  8720  0523  1383               	movf	indf,w
  8721  0524  0800               	andlw	04h
  8722  0525  3904               	goto	l540
  8723  0526  2D70               	
  8724                           l5013:	
  8725  0527                     	goto	l540
  8726  0527  2D70               	
  8727                           l5015:	
  8728  0528                     	goto	l540
  8729  0528  2D70               	line	76
  8730                           ;atuadores.c: 76:         case 'C': return(*ptr & 0x20); break;
  8731                           	
  8732                           l545:	
  8733  0529                     	
  8734                           l5017:	
  8735  0529                     	movf	(ler_sensor@ptr),w
  8736  0529  0820               	movwf	fsr0
  8737  052A  0084               	bcf	status, 7	;select IRP bank0
  8738  052B  1383               	movf	indf,w
  8739  052C  0800               	andlw	020h
  8740  052D  3920               	goto	l540
  8741  052E  2D70               	
  8742                           l5019:	
  8743  052F                     	goto	l540
  8744  052F  2D70               	
  8745                           l5021:	
  8746  0530                     	goto	l540
  8747  0530  2D70               	line	77
  8748                           ;atuadores.c: 77:         case 'c': return(*ptr & 0x10); break;
  8749                           	
  8750                           l546:	
  8751  0531                     	
  8752                           l5023:	
  8753  0531                     	movf	(ler_sensor@ptr),w
  8754  0531  0820               	movwf	fsr0
  8755  0532  0084               	bcf	status, 7	;select IRP bank0
  8756  0533  1383               	movf	indf,w
  8757  0534  0800               	andlw	010h
  8758  0535  3910               	goto	l540
  8759  0536  2D70               	
  8760                           l5025:	
  8761  0537                     	goto	l540
  8762  0537  2D70               	
  8763                           l5027:	
  8764  0538                     	goto	l540
  8765  0538  2D70               	line	78
  8766                           ;atuadores.c: 78:         case 'D': return(*ptr & 0x80); break;
  8767                           	
  8768                           l547:	
  8769  0539                     	
  8770                           l5029:	
  8771  0539                     	movf	(ler_sensor@ptr),w
  8772  0539  0820               	movwf	fsr0
  8773  053A  0084               	bcf	status, 7	;select IRP bank0
  8774  053B  1383               	movf	indf,w
  8775  053C  0800               	andlw	080h
  8776  053D  3980               	goto	l540
  8777  053E  2D70               	
  8778                           l5031:	
  8779  053F                     	goto	l540
  8780  053F  2D70               	
  8781                           l5033:	
  8782  0540                     	goto	l540
  8783  0540  2D70               	line	79
  8784                           ;atuadores.c: 79:         case 'd': return(*ptr & 0x40); break;
  8785                           	
  8786                           l548:	
  8787  0541                     	
  8788                           l5035:	
  8789  0541                     	movf	(ler_sensor@ptr),w
  8790  0541  0820               	movwf	fsr0
  8791  0542  0084               	bcf	status, 7	;select IRP bank0
  8792  0543  1383               	movf	indf,w
  8793  0544  0800               	andlw	040h
  8794  0545  3940               	goto	l540
  8795  0546  2D70               	
  8796                           l5037:	
  8797  0547                     	goto	l540
  8798  0547  2D70               	
  8799                           l5039:	
  8800  0548                     	goto	l540
  8801  0548  2D70               	line	80
  8802                           ;atuadores.c: 80:         default: return( 0 ); break;
  8803                           	
  8804                           l549:	
  8805  0549                     	
  8806                           l5041:	
  8807  0549                     	movlw	low(0)
  8808  0549  3000               	goto	l540
  8809  054A  2D70               	
  8810                           l5043:	
  8811  054B                     	goto	l540
  8812  054B  2D70               	
  8813                           l5045:	
  8814  054C                     	goto	l540
  8815  054C  2D70               	line	81
  8816                           	
  8817                           l5047:	
  8818  054D                     ;atuadores.c: 81:     }
  8819                           	goto	l540
  8820  054D  2D70               	
  8821                           l538:	
  8822  054E                     	
  8823                           l5049:	
  8824  054E                     	movf	(ler_sensor@passo),w
  8825  054E  0823               	movwf	(??_ler_sensor+0)+0
  8826  054F  00A1               	clrf	(??_ler_sensor+0)+0+1
  8827  0550  01A2               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  8828                           ; Switch size 1, requested type "space"
  8829                           ; Number of cases is 1, Range of values is 0 to 0
  8830                           ; switch strategies available:
  8831                           ; Name         Instructions Cycles
  8832                           ; simple_byte            4     3 (average)
  8833                           ; direct_byte           11     8 (fixed)
  8834                           ; jumptable            260     6 (fixed)
  8835                           ;	Chosen strategy is simple_byte
  8836                           
  8837                           	movf 1+(??_ler_sensor+0)+0,w
  8838  0551  0822               	opt asmopt_push
  8839                           	opt asmopt_off
  8840                           	xorlw	0^0	; case 0
  8841  0552  3A00               	skipnz
  8842  0553  1903               	goto	l5797
  8843  0554  2D56               	goto	l5041
  8844  0555  2D49               	opt asmopt_pop
  8845                           	
  8846                           l5797:	
  8847  0556                     ; Switch size 1, requested type "space"
  8848                           ; Number of cases is 8, Range of values is 65 to 100
  8849                           ; switch strategies available:
  8850                           ; Name         Instructions Cycles
  8851                           ; simple_byte           25    13 (average)
  8852                           ; direct_byte          119    11 (fixed)
  8853                           ; jumptable            263     9 (fixed)
  8854                           ;	Chosen strategy is simple_byte
  8855                           
  8856                           	movf 0+(??_ler_sensor+0)+0,w
  8857  0556  0821               	opt asmopt_push
  8858                           	opt asmopt_off
  8859                           	xorlw	65^0	; case 65
  8860  0557  3A41               	skipnz
  8861  0558  1903               	goto	l4993
  8862  0559  2D09               	xorlw	66^65	; case 66
  8863  055A  3A03               	skipnz
  8864  055B  1903               	goto	l5005
  8865  055C  2D19               	xorlw	67^66	; case 67
  8866  055D  3A01               	skipnz
  8867  055E  1903               	goto	l5017
  8868  055F  2D29               	xorlw	68^67	; case 68
  8869  0560  3A07               	skipnz
  8870  0561  1903               	goto	l5029
  8871  0562  2D39               	xorlw	97^68	; case 97
  8872  0563  3A25               	skipnz
  8873  0564  1903               	goto	l4999
  8874  0565  2D11               	xorlw	98^97	; case 98
  8875  0566  3A03               	skipnz
  8876  0567  1903               	goto	l5011
  8877  0568  2D21               	xorlw	99^98	; case 99
  8878  0569  3A01               	skipnz
  8879  056A  1903               	goto	l5023
  8880  056B  2D31               	xorlw	100^99	; case 100
  8881  056C  3A07               	skipnz
  8882  056D  1903               	goto	l5035
  8883  056E  2D41               	goto	l5041
  8884  056F  2D49               	opt asmopt_pop
  8885                           
  8886                           	
  8887                           l541:	
  8888  0570                     	line	83
  8889                           	
  8890                           l540:	
  8891  0570                     	return
  8892  0570  0008               	opt stack 0
  8893                           GLOBAL	__end_of_ler_sensor
  8894                           	__end_of_ler_sensor:
  8895  0571                     	signat	_ler_sensor,8313
  8896                           	global	_ler_atuador
  8897                           
  8898 ;; *************** function _ler_atuador *****************
  8899 ;; Defined at:
  8900 ;;		line 80 in file "fifo.c"
  8901 ;; Parameters:    Size  Location     Type
  8902 ;;  tecla           1    wreg     unsigned char 
  8903 ;; Auto vars:     Size  Location     Type
  8904 ;;  tecla           1    2[BANK0 ] unsigned char 
  8905 ;; Return value:  Size  Location     Type
  8906 ;;                  1    wreg      unsigned char 
  8907 ;; Registers used:
  8908 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8909 ;; Tracked objects:
  8910 ;;		On entry : 0/0
  8911 ;;		On exit  : 0/0
  8912 ;;		Unchanged: 0/0
  8913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8914 ;;      Params:         0       0       0       0       0
  8915 ;;      Locals:         0       1       0       0       0
  8916 ;;      Temps:          0       2       0       0       0
  8917 ;;      Totals:         0       3       0       0       0
  8918 ;;Total ram usage:        3 bytes
  8919 ;; Hardware stack levels used:    1
  8920 ;; Hardware stack levels required when called:    2
  8921 ;; This function calls:
  8922 ;;		Nothing
  8923 ;; This function is called by:
  8924 ;;		_main
  8925 ;; This function uses a non-reentrant model
  8926 ;;
  8927                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  8928                           	file	"fifo.c"
  8929                           	line	80
  8930                           global __ptext19
  8931                           __ptext19:	;psect for function _ler_atuador
  8932  178D                     psect	text19
  8933                           	file	"fifo.c"
  8934                           	line	80
  8935                           	global	__size_of_ler_atuador
  8936                           	__size_of_ler_atuador	equ	__end_of_ler_atuador-_ler_atuador
  8937  0039                     	
  8938                           _ler_atuador:	
  8939  178D                     ;incstack = 0
  8940                           	opt	stack 5
  8941                           ; Regs used in _ler_atuador: [wreg-fsr0h+status,2+status,0]
  8942                           ;ler_atuador@tecla stored from wreg
  8943                           	bcf	status, 5	;RP0=0, select bank0
  8944  178D  1283               	bcf	status, 6	;RP1=0, select bank0
  8945  178E  1303               	movwf	(ler_atuador@tecla)
  8946  178F  00A2               	line	82
  8947                           	
  8948                           l4661:	
  8949  1790                     ;fifo.c: 80: char ler_atuador(char tecla);fifo.c: 81: {;fifo.c: 82:     switch(tecla)
  8950                           	goto	l4695
  8951  1790  2FAF               	line	84
  8952                           ;fifo.c: 83:     {;fifo.c: 84:         case 'A': return(atuador.A); break;
  8953                           	
  8954                           l117:	
  8955  1791                     	
  8956                           l4663:	
  8957  1791                     	movf	(_atuador),w
  8958  1791  087A               	andlw	(1<<1)-1
  8959  1792  3901               	goto	l118
  8960  1793  2FC5               	
  8961                           l4665:	
  8962  1794                     	goto	l118
  8963  1794  2FC5               	
  8964                           l4667:	
  8965  1795                     	goto	l118
  8966  1795  2FC5               	line	85
  8967                           ;fifo.c: 85:         case 'B': return(atuador.B); break;
  8968                           	
  8969                           l120:	
  8970  1796                     	
  8971                           l4669:	
  8972  1796                     	rrf	(_atuador),w
  8973  1796  0C7A               	andlw	(1<<1)-1
  8974  1797  3901               	goto	l118
  8975  1798  2FC5               	
  8976                           l4671:	
  8977  1799                     	goto	l118
  8978  1799  2FC5               	
  8979                           l4673:	
  8980  179A                     	goto	l118
  8981  179A  2FC5               	line	86
  8982                           ;fifo.c: 86:         case 'C': return(atuador.C); break;
  8983                           	
  8984                           l121:	
  8985  179B                     	
  8986                           l4675:	
  8987  179B                     	rrf	(_atuador),w
  8988  179B  0C7A               	movwf	(??_ler_atuador+0)+0
  8989  179C  00A0               	rrf	(??_ler_atuador+0)+0,w
  8990  179D  0C20               	andlw	(1<<1)-1
  8991  179E  3901               	goto	l118
  8992  179F  2FC5               	
  8993                           l4677:	
  8994  17A0                     	goto	l118
  8995  17A0  2FC5               	
  8996                           l4679:	
  8997  17A1                     	goto	l118
  8998  17A1  2FC5               	line	87
  8999                           ;fifo.c: 87:         case 'D': return(atuador.D); break;
  9000                           	
  9001                           l122:	
  9002  17A2                     	
  9003                           l4681:	
  9004  17A2                     	rrf	(_atuador),w
  9005  17A2  0C7A               	movwf	(??_ler_atuador+0)+0
  9006  17A3  00A0               	rrf	(??_ler_atuador+0)+0,f
  9007  17A4  0CA0               	rrf	(??_ler_atuador+0)+0,w
  9008  17A5  0C20               	andlw	(1<<1)-1
  9009  17A6  3901               	goto	l118
  9010  17A7  2FC5               	
  9011                           l4683:	
  9012  17A8                     	goto	l118
  9013  17A8  2FC5               	
  9014                           l4685:	
  9015  17A9                     	goto	l118
  9016  17A9  2FC5               	line	88
  9017                           ;fifo.c: 88:         default: return 0; break;
  9018                           	
  9019                           l123:	
  9020  17AA                     	
  9021                           l4687:	
  9022  17AA                     	movlw	low(0)
  9023  17AA  3000               	goto	l118
  9024  17AB  2FC5               	
  9025                           l4689:	
  9026  17AC                     	goto	l118
  9027  17AC  2FC5               	
  9028                           l4691:	
  9029  17AD                     	goto	l118
  9030  17AD  2FC5               	line	89
  9031                           	
  9032                           l4693:	
  9033  17AE                     ;fifo.c: 89:     }
  9034                           	goto	l118
  9035  17AE  2FC5               	
  9036                           l116:	
  9037  17AF                     	
  9038                           l4695:	
  9039  17AF                     	movf	(ler_atuador@tecla),w
  9040  17AF  0822               	movwf	(??_ler_atuador+0)+0
  9041  17B0  00A0               	clrf	(??_ler_atuador+0)+0+1
  9042  17B1  01A1               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  9043                           ; Switch size 1, requested type "space"
  9044                           ; Number of cases is 1, Range of values is 0 to 0
  9045                           ; switch strategies available:
  9046                           ; Name         Instructions Cycles
  9047                           ; simple_byte            4     3 (average)
  9048                           ; direct_byte           11     8 (fixed)
  9049                           ; jumptable            260     6 (fixed)
  9050                           ;	Chosen strategy is simple_byte
  9051                           
  9052                           	movf 1+(??_ler_atuador+0)+0,w
  9053  17B2  0821               	opt asmopt_push
  9054                           	opt asmopt_off
  9055                           	xorlw	0^0	; case 0
  9056  17B3  3A00               	skipnz
  9057  17B4  1903               	goto	l5799
  9058  17B5  2FB7               	goto	l4687
  9059  17B6  2FAA               	opt asmopt_pop
  9060                           	
  9061                           l5799:	
  9062  17B7                     ; Switch size 1, requested type "space"
  9063                           ; Number of cases is 4, Range of values is 65 to 68
  9064                           ; switch strategies available:
  9065                           ; Name         Instructions Cycles
  9066                           ; simple_byte           13     7 (average)
  9067                           ; direct_byte           23    11 (fixed)
  9068                           ; jumptable            263     9 (fixed)
  9069                           ;	Chosen strategy is simple_byte
  9070                           
  9071                           	movf 0+(??_ler_atuador+0)+0,w
  9072  17B7  0820               	opt asmopt_push
  9073                           	opt asmopt_off
  9074                           	xorlw	65^0	; case 65
  9075  17B8  3A41               	skipnz
  9076  17B9  1903               	goto	l4663
  9077  17BA  2F91               	xorlw	66^65	; case 66
  9078  17BB  3A03               	skipnz
  9079  17BC  1903               	goto	l4669
  9080  17BD  2F96               	xorlw	67^66	; case 67
  9081  17BE  3A01               	skipnz
  9082  17BF  1903               	goto	l4675
  9083  17C0  2F9B               	xorlw	68^67	; case 68
  9084  17C1  3A07               	skipnz
  9085  17C2  1903               	goto	l4681
  9086  17C3  2FA2               	goto	l4687
  9087  17C4  2FAA               	opt asmopt_pop
  9088                           
  9089                           	
  9090                           l119:	
  9091  17C5                     	line	90
  9092                           	
  9093                           l118:	
  9094  17C5                     	return
  9095  17C5  0008               	opt stack 0
  9096                           GLOBAL	__end_of_ler_atuador
  9097                           	__end_of_ler_atuador:
  9098  17C6                     	signat	_ler_atuador,4217
  9099                           	global	_init_atuadores
  9100                           
  9101 ;; *************** function _init_atuadores *****************
  9102 ;; Defined at:
  9103 ;;		line 103 in file "fifo.c"
  9104 ;; Parameters:    Size  Location     Type
  9105 ;;		None
  9106 ;; Auto vars:     Size  Location     Type
  9107 ;;		None
  9108 ;; Return value:  Size  Location     Type
  9109 ;;                  1    wreg      void 
  9110 ;; Registers used:
  9111 ;;		None
  9112 ;; Tracked objects:
  9113 ;;		On entry : 0/0
  9114 ;;		On exit  : 0/0
  9115 ;;		Unchanged: 0/0
  9116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9117 ;;      Params:         0       0       0       0       0
  9118 ;;      Locals:         0       0       0       0       0
  9119 ;;      Temps:          0       0       0       0       0
  9120 ;;      Totals:         0       0       0       0       0
  9121 ;;Total ram usage:        0 bytes
  9122 ;; Hardware stack levels used:    1
  9123 ;; Hardware stack levels required when called:    2
  9124 ;; This function calls:
  9125 ;;		Nothing
  9126 ;; This function is called by:
  9127 ;;		_main
  9128 ;; This function uses a non-reentrant model
  9129 ;;
  9130                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  9131                           	line	103
  9132                           global __ptext20
  9133                           __ptext20:	;psect for function _init_atuadores
  9134  13D1                     psect	text20
  9135                           	file	"fifo.c"
  9136                           	line	103
  9137                           	global	__size_of_init_atuadores
  9138                           	__size_of_init_atuadores	equ	__end_of_init_atuadores-_init_atuadores
  9139  0005                     	
  9140                           _init_atuadores:	
  9141  13D1                     ;incstack = 0
  9142                           	opt	stack 5
  9143                           ; Regs used in _init_atuadores: []
  9144                           	line	105
  9145                           	
  9146                           l4703:	
  9147  13D1                     ;fifo.c: 105:     atuador.A = 0;
  9148                           	bcf	(_atuador),0
  9149  13D1  107A               	line	106
  9150                           ;fifo.c: 106:     atuador.B = 0;
  9151                           	bcf	(_atuador),1
  9152  13D2  10FA               	line	107
  9153                           ;fifo.c: 107:     atuador.C = 0;
  9154                           	bcf	(_atuador),2
  9155  13D3  117A               	line	108
  9156                           ;fifo.c: 108:     atuador.D = 0;
  9157                           	bcf	(_atuador),3
  9158  13D4  11FA               	line	109
  9159                           	
  9160                           l135:	
  9161  13D5                     	return
  9162  13D5  0008               	opt stack 0
  9163                           GLOBAL	__end_of_init_atuadores
  9164                           	__end_of_init_atuadores:
  9165  13D6                     	signat	_init_atuadores,89
  9166                           	global	_initSerialIO
  9167                           
  9168 ;; *************** function _initSerialIO *****************
  9169 ;; Defined at:
  9170 ;;		line 89 in file "serialIO.c"
  9171 ;; Parameters:    Size  Location     Type
  9172 ;;  ptrIn           1    wreg     PTR unsigned char 
  9173 ;;		 -> main@vetorIn(1), 
  9174 ;;  ptrOut          1    0[BANK0 ] PTR unsigned char 
  9175 ;;		 -> main@vetorOut(1), 
  9176 ;;  length          1    1[BANK0 ] unsigned char 
  9177 ;; Auto vars:     Size  Location     Type
  9178 ;;  ptrIn           1    3[BANK0 ] PTR unsigned char 
  9179 ;;		 -> main@vetorIn(1), 
  9180 ;; Return value:  Size  Location     Type
  9181 ;;                  1    wreg      void 
  9182 ;; Registers used:
  9183 ;;		wreg
  9184 ;; Tracked objects:
  9185 ;;		On entry : 0/0
  9186 ;;		On exit  : 0/0
  9187 ;;		Unchanged: 0/0
  9188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9189 ;;      Params:         0       2       0       0       0
  9190 ;;      Locals:         0       1       0       0       0
  9191 ;;      Temps:          0       1       0       0       0
  9192 ;;      Totals:         0       4       0       0       0
  9193 ;;Total ram usage:        4 bytes
  9194 ;; Hardware stack levels used:    1
  9195 ;; Hardware stack levels required when called:    2
  9196 ;; This function calls:
  9197 ;;		Nothing
  9198 ;; This function is called by:
  9199 ;;		_main
  9200 ;; This function uses a non-reentrant model
  9201 ;;
  9202                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  9203                           	file	"serialIO.c"
  9204                           	line	89
  9205                           global __ptext21
  9206                           __ptext21:	;psect for function _initSerialIO
  9207  1756                     psect	text21
  9208                           	file	"serialIO.c"
  9209                           	line	89
  9210                           	global	__size_of_initSerialIO
  9211                           	__size_of_initSerialIO	equ	__end_of_initSerialIO-_initSerialIO
  9212  0037                     	
  9213                           _initSerialIO:	
  9214  1756                     ;incstack = 0
  9215                           	opt	stack 5
  9216                           ; Regs used in _initSerialIO: [wreg]
  9217                           ;initSerialIO@ptrIn stored from wreg
  9218                           	bcf	status, 5	;RP0=0, select bank0
  9219  1756  1283               	bcf	status, 6	;RP1=0, select bank0
  9220  1757  1303               	movwf	(initSerialIO@ptrIn)
  9221  1758  00A3               	line	91
  9222                           	
  9223                           l4899:	
  9224  1759                     ;serialIO.c: 89: void initSerialIO( char * ptrIn, char * ptrOut, unsigned char length );
                                 serialIO.c: 90: {;serialIO.c: 91:     ptrSerialIn = ptrIn;
  9225                           	movf	(initSerialIO@ptrIn),w
  9226  1759  0823               	movwf	(??_initSerialIO+0)+0
  9227  175A  00A2               	movf	(??_initSerialIO+0)+0,w
  9228  175B  0822               	movwf	(_ptrSerialIn)
  9229  175C  00E0               	line	92
  9230                           ;serialIO.c: 92:     ptrSerialOut = ptrOut;
  9231                           	movf	(initSerialIO@ptrOut),w
  9232  175D  0820               	movwf	(??_initSerialIO+0)+0
  9233  175E  00A2               	movf	(??_initSerialIO+0)+0,w
  9234  175F  0822               	movwf	(_ptrSerialOut)
  9235  1760  00DF               	line	93
  9236                           ;serialIO.c: 93:     lenSerialIO = length;
  9237                           	movf	(initSerialIO@length),w
  9238  1761  0821               	movwf	(??_initSerialIO+0)+0
  9239  1762  00A2               	movf	(??_initSerialIO+0)+0,w
  9240  1763  0822               	movwf	(_lenSerialIO)
  9241  1764  00DE               	line	95
  9242                           	
  9243                           l4901:	
  9244  1765                     ;serialIO.c: 95:     PORTAbits.RA3 = 0;
  9245                           	bcf	(5),3	;volatile
  9246  1765  1185               	line	96
  9247                           	
  9248                           l4903:	
  9249  1766                     ;serialIO.c: 96:     ANSELbits.ANS3 = 0;
  9250                           	bsf	status, 5	;RP0=1, select bank3
  9251  1766  1683               	bsf	status, 6	;RP1=1, select bank3
  9252  1767  1703               	bcf	(392)^0180h,3	;volatile
  9253  1768  1188               	line	97
  9254                           	
  9255                           l4905:	
  9256  1769                     ;serialIO.c: 97:     TRISAbits.TRISA3 = 0;
  9257                           	bsf	status, 5	;RP0=1, select bank1
  9258  1769  1683               	bcf	status, 6	;RP1=0, select bank1
  9259  176A  1303               	bcf	(133)^080h,3	;volatile
  9260  176B  1185               	line	100
  9261                           	
  9262                           l4907:	
  9263  176C                     ;serialIO.c: 100:     PORTAbits.RA2 = 0;
  9264                           	bcf	status, 5	;RP0=0, select bank0
  9265  176C  1283               	bcf	status, 6	;RP1=0, select bank0
  9266  176D  1303               	bcf	(5),2	;volatile
  9267  176E  1105               	line	101
  9268                           	
  9269                           l4909:	
  9270  176F                     ;serialIO.c: 101:     ANSELbits.ANS2 = 0;
  9271                           	bsf	status, 5	;RP0=1, select bank3
  9272  176F  1683               	bsf	status, 6	;RP1=1, select bank3
  9273  1770  1703               	bcf	(392)^0180h,2	;volatile
  9274  1771  1108               	line	102
  9275                           	
  9276                           l4911:	
  9277  1772                     ;serialIO.c: 102:     TRISAbits.TRISA2 = 0;
  9278                           	bsf	status, 5	;RP0=1, select bank1
  9279  1772  1683               	bcf	status, 6	;RP1=0, select bank1
  9280  1773  1303               	bcf	(133)^080h,2	;volatile
  9281  1774  1105               	line	105
  9282                           	
  9283                           l4913:	
  9284  1775                     ;serialIO.c: 105:     PORTAbits.RA0 = 0;
  9285                           	bcf	status, 5	;RP0=0, select bank0
  9286  1775  1283               	bcf	status, 6	;RP1=0, select bank0
  9287  1776  1303               	bcf	(5),0	;volatile
  9288  1777  1005               	line	106
  9289                           	
  9290                           l4915:	
  9291  1778                     ;serialIO.c: 106:     ANSELbits.ANS0 = 0;
  9292                           	bsf	status, 5	;RP0=1, select bank3
  9293  1778  1683               	bsf	status, 6	;RP1=1, select bank3
  9294  1779  1703               	bcf	(392)^0180h,0	;volatile
  9295  177A  1008               	line	107
  9296                           	
  9297                           l4917:	
  9298  177B                     ;serialIO.c: 107:     TRISAbits.TRISA0 = 0;
  9299                           	bsf	status, 5	;RP0=1, select bank1
  9300  177B  1683               	bcf	status, 6	;RP1=0, select bank1
  9301  177C  1303               	bcf	(133)^080h,0	;volatile
  9302  177D  1005               	line	110
  9303                           ;serialIO.c: 110:     PORTAbits.RA1;
  9304                           	bcf	status, 5	;RP0=0, select bank0
  9305  177E  1283               	bcf	status, 6	;RP1=0, select bank0
  9306  177F  1303               	movf	(5),w	;volatile
  9307  1780  0805               	line	111
  9308                           	
  9309                           l4919:	
  9310  1781                     ;serialIO.c: 111:     ANSELbits.ANS1 = 0;
  9311                           	bsf	status, 5	;RP0=1, select bank3
  9312  1781  1683               	bsf	status, 6	;RP1=1, select bank3
  9313  1782  1703               	bcf	(392)^0180h,1	;volatile
  9314  1783  1088               	line	112
  9315                           	
  9316                           l4921:	
  9317  1784                     ;serialIO.c: 112:     TRISAbits.TRISA1 = 1;
  9318                           	bsf	status, 5	;RP0=1, select bank1
  9319  1784  1683               	bcf	status, 6	;RP1=0, select bank1
  9320  1785  1303               	bsf	(133)^080h,1	;volatile
  9321  1786  1485               	line	115
  9322                           	
  9323                           l4923:	
  9324  1787                     ;serialIO.c: 115:     SERIALIO.CLK = 0;
  9325                           	bcf	status, 5	;RP0=0, select bank0
  9326  1787  1283               	bcf	status, 6	;RP1=0, select bank0
  9327  1788  1303               	bcf	(5),2	;volatile
  9328  1789  1105               	line	116
  9329                           	
  9330                           l4925:	
  9331  178A                     ;serialIO.c: 116:     SERIALIO.OUT = 0;
  9332                           	bcf	(5),0	;volatile
  9333  178A  1005               	line	117
  9334                           	
  9335                           l4927:	
  9336  178B                     ;serialIO.c: 117:     SERIALIO.SHLD = 1;
  9337                           	bsf	(5),3	;volatile
  9338  178B  1585               	line	118
  9339                           	
  9340                           l584:	
  9341  178C                     	return
  9342  178C  0008               	opt stack 0
  9343                           GLOBAL	__end_of_initSerialIO
  9344                           	__end_of_initSerialIO:
  9345  178D                     	signat	_initSerialIO,12409
  9346                           	global	_getContCiclos
  9347                           
  9348 ;; *************** function _getContCiclos *****************
  9349 ;; Defined at:
  9350 ;;		line 47 in file "fifo.c"
  9351 ;; Parameters:    Size  Location     Type
  9352 ;;		None
  9353 ;; Auto vars:     Size  Location     Type
  9354 ;;		None
  9355 ;; Return value:  Size  Location     Type
  9356 ;;                  2    0[BANK0 ] unsigned int 
  9357 ;; Registers used:
  9358 ;;		wreg
  9359 ;; Tracked objects:
  9360 ;;		On entry : 0/0
  9361 ;;		On exit  : 0/0
  9362 ;;		Unchanged: 0/0
  9363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9364 ;;      Params:         0       2       0       0       0
  9365 ;;      Locals:         0       0       0       0       0
  9366 ;;      Temps:          0       0       0       0       0
  9367 ;;      Totals:         0       2       0       0       0
  9368 ;;Total ram usage:        2 bytes
  9369 ;; Hardware stack levels used:    1
  9370 ;; Hardware stack levels required when called:    2
  9371 ;; This function calls:
  9372 ;;		Nothing
  9373 ;; This function is called by:
  9374 ;;		_main
  9375 ;; This function uses a non-reentrant model
  9376 ;;
  9377                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  9378                           	file	"fifo.c"
  9379                           	line	47
  9380                           global __ptext22
  9381                           __ptext22:	;psect for function _getContCiclos
  9382  13F0                     psect	text22
  9383                           	file	"fifo.c"
  9384                           	line	47
  9385                           	global	__size_of_getContCiclos
  9386                           	__size_of_getContCiclos	equ	__end_of_getContCiclos-_getContCiclos
  9387  0008                     	
  9388                           _getContCiclos:	
  9389  13F0                     ;incstack = 0
  9390                           	opt	stack 5
  9391                           ; Regs used in _getContCiclos: [wreg]
  9392                           	line	49
  9393                           	
  9394                           l4653:	
  9395  13F0                     ;fifo.c: 49:     return(cont_ciclos);
  9396                           	movf	(_cont_ciclos+1),w
  9397  13F0  0877               	bcf	status, 5	;RP0=0, select bank0
  9398  13F1  1283               	bcf	status, 6	;RP1=0, select bank0
  9399  13F2  1303               	movwf	(?_getContCiclos+1)
  9400  13F3  00A1               	movf	(_cont_ciclos),w
  9401  13F4  0876               	movwf	(?_getContCiclos)
  9402  13F5  00A0               	goto	l105
  9403  13F6  2BF7               	
  9404                           l4655:	
  9405  13F7                     	line	50
  9406                           	
  9407                           l105:	
  9408  13F7                     	return
  9409  13F7  0008               	opt stack 0
  9410                           GLOBAL	__end_of_getContCiclos
  9411                           	__end_of_getContCiclos:
  9412  13F8                     	signat	_getContCiclos,90
  9413                           	global	_getCiclos
  9414                           
  9415 ;; *************** function _getCiclos *****************
  9416 ;; Defined at:
  9417 ;;		line 39 in file "fifo.c"
  9418 ;; Parameters:    Size  Location     Type
  9419 ;;		None
  9420 ;; Auto vars:     Size  Location     Type
  9421 ;;  aux             2    4[BANK0 ] int 
  9422 ;; Return value:  Size  Location     Type
  9423 ;;                  2    0[BANK0 ] unsigned int 
  9424 ;; Registers used:
  9425 ;;		wreg
  9426 ;; Tracked objects:
  9427 ;;		On entry : 0/0
  9428 ;;		On exit  : 0/0
  9429 ;;		Unchanged: 0/0
  9430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9431 ;;      Params:         0       2       0       0       0
  9432 ;;      Locals:         0       2       0       0       0
  9433 ;;      Temps:          0       2       0       0       0
  9434 ;;      Totals:         0       6       0       0       0
  9435 ;;Total ram usage:        6 bytes
  9436 ;; Hardware stack levels used:    1
  9437 ;; Hardware stack levels required when called:    2
  9438 ;; This function calls:
  9439 ;;		Nothing
  9440 ;; This function is called by:
  9441 ;;		_main
  9442 ;; This function uses a non-reentrant model
  9443 ;;
  9444                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  9445                           	line	39
  9446                           global __ptext23
  9447                           __ptext23:	;psect for function _getCiclos
  9448  1555                     psect	text23
  9449                           	file	"fifo.c"
  9450                           	line	39
  9451                           	global	__size_of_getCiclos
  9452                           	__size_of_getCiclos	equ	__end_of_getCiclos-_getCiclos
  9453  0025                     	
  9454                           _getCiclos:	
  9455  1555                     ;incstack = 0
  9456                           	opt	stack 5
  9457                           ; Regs used in _getCiclos: [wreg]
  9458                           	line	41
  9459                           	
  9460                           l4649:	
  9461  1555                     ;fifo.c: 41:     int aux = fila[1];
  9462                           	bsf	status, 5	;RP0=1, select bank3
  9463  1555  1683               	bsf	status, 6	;RP1=1, select bank3
  9464  1556  1703               	movf	0+(_fila)^0180h+01h,w
  9465  1557  0811               	bcf	status, 5	;RP0=0, select bank0
  9466  1558  1283               	bcf	status, 6	;RP1=0, select bank0
  9467  1559  1303               	movwf	(??_getCiclos+0)+0
  9468  155A  00A2               	clrf	(??_getCiclos+0)+0+1
  9469  155B  01A3               	movf	0+(??_getCiclos+0)+0,w
  9470  155C  0822               	movwf	(getCiclos@aux)
  9471  155D  00A4               	movf	1+(??_getCiclos+0)+0,w
  9472  155E  0823               	movwf	(getCiclos@aux+1)
  9473  155F  00A5               	line	42
  9474                           ;fifo.c: 42:     aux <<= 8;
  9475                           	movlw	08h
  9476  1560  3008               	
  9477                           u3875:
  9478  1561                     	clrc
  9479  1561  1003               	rlf	(getCiclos@aux),f
  9480  1562  0DA4               	rlf	(getCiclos@aux+1),f
  9481  1563  0DA5               	addlw	-1
  9482  1564  3EFF               	skipz
  9483  1565  1D03               	goto	u3875
  9484  1566  2D61               	line	43
  9485                           ;fifo.c: 43:     aux +=fila[0];
  9486                           	bsf	status, 5	;RP0=1, select bank3
  9487  1567  1683               	bsf	status, 6	;RP1=1, select bank3
  9488  1568  1703               	movf	(_fila)^0180h,w
  9489  1569  0810               	bcf	status, 5	;RP0=0, select bank0
  9490  156A  1283               	bcf	status, 6	;RP1=0, select bank0
  9491  156B  1303               	movwf	(??_getCiclos+0)+0
  9492  156C  00A2               	clrf	(??_getCiclos+0)+0+1
  9493  156D  01A3               	movf	0+(??_getCiclos+0)+0,w
  9494  156E  0822               	addwf	(getCiclos@aux),f
  9495  156F  07A4               	skipnc
  9496  1570  1803               	incf	(getCiclos@aux+1),f
  9497  1571  0AA5               	movf	1+(??_getCiclos+0)+0,w
  9498  1572  0823               	addwf	(getCiclos@aux+1),f
  9499  1573  07A5               	line	44
  9500                           ;fifo.c: 44:     return(aux);
  9501                           	movf	(getCiclos@aux+1),w
  9502  1574  0825               	movwf	(?_getCiclos+1)
  9503  1575  00A1               	movf	(getCiclos@aux),w
  9504  1576  0824               	movwf	(?_getCiclos)
  9505  1577  00A0               	goto	l102
  9506  1578  2D79               	
  9507                           l4651:	
  9508  1579                     	line	45
  9509                           	
  9510                           l102:	
  9511  1579                     	return
  9512  1579  0008               	opt stack 0
  9513                           GLOBAL	__end_of_getCiclos
  9514                           	__end_of_getCiclos:
  9515  157A                     	signat	_getCiclos,90
  9516                           	global	_fifo_tam
  9517                           
  9518 ;; *************** function _fifo_tam *****************
  9519 ;; Defined at:
  9520 ;;		line 201 in file "fifo.c"
  9521 ;; Parameters:    Size  Location     Type
  9522 ;;		None
  9523 ;; Auto vars:     Size  Location     Type
  9524 ;;		None
  9525 ;; Return value:  Size  Location     Type
  9526 ;;                  1    wreg      unsigned char 
  9527 ;; Registers used:
  9528 ;;		wreg
  9529 ;; Tracked objects:
  9530 ;;		On entry : 0/0
  9531 ;;		On exit  : 0/0
  9532 ;;		Unchanged: 0/0
  9533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9534 ;;      Params:         0       0       0       0       0
  9535 ;;      Locals:         0       0       0       0       0
  9536 ;;      Temps:          0       0       0       0       0
  9537 ;;      Totals:         0       0       0       0       0
  9538 ;;Total ram usage:        0 bytes
  9539 ;; Hardware stack levels used:    1
  9540 ;; Hardware stack levels required when called:    2
  9541 ;; This function calls:
  9542 ;;		Nothing
  9543 ;; This function is called by:
  9544 ;;		_main
  9545 ;; This function uses a non-reentrant model
  9546 ;;
  9547                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  9548                           	line	201
  9549                           global __ptext24
  9550                           __ptext24:	;psect for function _fifo_tam
  9551  13C6                     psect	text24
  9552                           	file	"fifo.c"
  9553                           	line	201
  9554                           	global	__size_of_fifo_tam
  9555                           	__size_of_fifo_tam	equ	__end_of_fifo_tam-_fifo_tam
  9556  0003                     	
  9557                           _fifo_tam:	
  9558  13C6                     ;incstack = 0
  9559                           	opt	stack 5
  9560                           ; Regs used in _fifo_tam: [wreg]
  9561                           	line	203
  9562                           	
  9563                           l4753:	
  9564  13C6                     ;fifo.c: 203:     return( 62 );
  9565                           	movlw	low(03Eh)
  9566  13C6  303E               	goto	l176
  9567  13C7  2BC8               	
  9568                           l4755:	
  9569  13C8                     	line	204
  9570                           	
  9571                           l176:	
  9572  13C8                     	return
  9573  13C8  0008               	opt stack 0
  9574                           GLOBAL	__end_of_fifo_tam
  9575                           	__end_of_fifo_tam:
  9576  13C9                     	signat	_fifo_tam,89
  9577                           	global	_fifo_print
  9578                           
  9579 ;; *************** function _fifo_print *****************
  9580 ;; Defined at:
  9581 ;;		line 226 in file "fifo.c"
  9582 ;; Parameters:    Size  Location     Type
  9583 ;;		None
  9584 ;; Auto vars:     Size  Location     Type
  9585 ;;  atraso          1   18[BANK0 ] unsigned char 
  9586 ;;  comando         1   17[BANK0 ] unsigned char 
  9587 ;;  i               1   16[BANK0 ] unsigned char 
  9588 ;;  indPrint        1   15[BANK0 ] unsigned char 
  9589 ;;  completar       1   14[BANK0 ] unsigned char 
  9590 ;; Return value:  Size  Location     Type
  9591 ;;                  1    wreg      void 
  9592 ;; Registers used:
  9593 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9594 ;; Tracked objects:
  9595 ;;		On entry : 0/0
  9596 ;;		On exit  : 0/0
  9597 ;;		Unchanged: 0/0
  9598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9599 ;;      Params:         0       0       0       0       0
  9600 ;;      Locals:         0       7       0       0       0
  9601 ;;      Temps:          0       3       0       0       0
  9602 ;;      Totals:         0      10       0       0       0
  9603 ;;Total ram usage:       10 bytes
  9604 ;; Hardware stack levels used:    1
  9605 ;; Hardware stack levels required when called:    4
  9606 ;; This function calls:
  9607 ;;		___awdiv
  9608 ;;		___awmod
  9609 ;;		_dispLCD_dataReg
  9610 ;;		_dispLCD_lincol
  9611 ;; This function is called by:
  9612 ;;		_main
  9613 ;; This function uses a non-reentrant model
  9614 ;;
  9615                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  9616                           	line	226
  9617                           global __ptext25
  9618                           __ptext25:	;psect for function _fifo_print
  9619  004F                     psect	text25
  9620                           	file	"fifo.c"
  9621                           	line	226
  9622                           	global	__size_of_fifo_print
  9623                           	__size_of_fifo_print	equ	__end_of_fifo_print-_fifo_print
  9624  0133                     	
  9625                           _fifo_print:	
  9626  004F                     ;incstack = 0
  9627                           	opt	stack 3
  9628                           ; Regs used in _fifo_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9629                           	line	228
  9630                           	
  9631                           l4771:	
  9632  004F                     ;fifo.c: 228:     char completar = 0;
  9633                           	bcf	status, 5	;RP0=0, select bank0
  9634  004F  1283               	bcf	status, 6	;RP1=0, select bank0
  9635  0050  1303               	clrf	(fifo_print@completar)
  9636  0051  01AE               	line	229
  9637                           ;fifo.c: 229:     char comando = 0;
  9638                           	clrf	(fifo_print@comando)
  9639  0052  01B1               	line	230
  9640                           ;fifo.c: 230:     char atraso = 0;
  9641                           	clrf	(fifo_print@atraso)
  9642  0053  01B2               	line	231
  9643                           ;fifo.c: 231:     char i = 0;
  9644                           	clrf	(fifo_print@i)
  9645  0054  01B0               	line	232
  9646                           	
  9647                           l4773:	
  9648  0055                     ;fifo.c: 232:     char indPrint = ind_print;
  9649                           	movf	(_ind_print),w
  9650  0055  0858               	movwf	(??_fifo_print+0)+0
  9651  0056  00A9               	movf	(??_fifo_print+0)+0,w
  9652  0057  0829               	movwf	(fifo_print@indPrint)
  9653  0058  00AF               	line	234
  9654                           	
  9655                           l4775:	
  9656  0059                     ;fifo.c: 234:     dispLCD_lincol(0, 0);
  9657                           	clrf	(dispLCD_lincol@col)
  9658  0059  01A3               	movlw	low(0)
  9659  005A  3000               	fcall	_dispLCD_lincol
  9660  005B  160A  118A  24A8  120A  118A  	goto	l4777
  9661  0060  2861               	line	235
  9662                           ;fifo.c: 235:     do
  9663                           	
  9664                           l190:	
  9665  0061                     	line	237
  9666                           	
  9667                           l4777:	
  9668  0061                     ;fifo.c: 236:     {;fifo.c: 237:         if( completar )
  9669                           	bcf	status, 5	;RP0=0, select bank0
  9670  0061  1283               	bcf	status, 6	;RP1=0, select bank0
  9671  0062  1303               	movf	((fifo_print@completar)),w
  9672  0063  082E               	btfsc	status,2
  9673  0064  1903               	goto	u3991
  9674  0065  2867               	goto	u3990
  9675  0066  2868               u3991:
  9676  0067                     	goto	l4783
  9677  0067  2875               u3990:
  9678  0068                     	line	239
  9679                           	
  9680                           l4779:	
  9681  0068                     ;fifo.c: 238:         {;fifo.c: 239:             dispLCD_dataReg(' ');
  9682                           	movlw	low(020h)
  9683  0068  3020               	fcall	_dispLCD_dataReg
  9684  0069  160A  118A  2725  120A  118A  	line	240
  9685                           	
  9686                           l4781:	
  9687  006E                     ;fifo.c: 240:             ++i;
  9688                           	movlw	low(01h)
  9689  006E  3001               	bcf	status, 5	;RP0=0, select bank0
  9690  006F  1283               	bcf	status, 6	;RP1=0, select bank0
  9691  0070  1303               	movwf	(??_fifo_print+0)+0
  9692  0071  00A9               	movf	(??_fifo_print+0)+0,w
  9693  0072  0829               	addwf	(fifo_print@i),f
  9694  0073  07B0               	line	241
  9695                           ;fifo.c: 241:         }
  9696                           	goto	l4839
  9697  0074  297A               	line	242
  9698                           ;fifo.c: 242:         else
  9699                           	
  9700                           l191:	
  9701  0075                     	line	244
  9702                           	
  9703                           l4783:	
  9704  0075                     ;fifo.c: 243:         {;fifo.c: 244:             comando = fila[indPrint++];
  9705                           	movf	(fifo_print@indPrint),w
  9706  0075  082F               	addlw	low(_fila|((0x1)<<8))&0ffh
  9707  0076  3E90               	movwf	fsr0
  9708  0077  0084               	bsf	status, 7	;select IRP bank3
  9709  0078  1783               	movf	indf,w
  9710  0079  0800               	movwf	(??_fifo_print+0)+0
  9711  007A  00A9               	movf	(??_fifo_print+0)+0,w
  9712  007B  0829               	movwf	(fifo_print@comando)
  9713  007C  00B1               	
  9714                           l4785:	
  9715  007D                     	movlw	low(01h)
  9716  007D  3001               	movwf	(??_fifo_print+0)+0
  9717  007E  00A9               	movf	(??_fifo_print+0)+0,w
  9718  007F  0829               	addwf	(fifo_print@indPrint),f
  9719  0080  07AF               	line	246
  9720                           	
  9721                           l4787:	
  9722  0081                     ;fifo.c: 246:             if( comando == 0 )
  9723                           	movf	((fifo_print@comando)),w
  9724  0081  0831               	btfss	status,2
  9725  0082  1D03               	goto	u4001
  9726  0083  2885               	goto	u4000
  9727  0084  2886               u4001:
  9728  0085                     	goto	l193
  9729  0085  2889               u4000:
  9730  0086                     	line	247
  9731                           	
  9732                           l4789:	
  9733  0086                     ;fifo.c: 247:                 completar = 1;
  9734                           	clrf	(fifo_print@completar)
  9735  0086  01AE               	incf	(fifo_print@completar),f
  9736  0087  0AAE               	goto	l4839
  9737  0088  297A               	line	248
  9738                           ;fifo.c: 248:             else if(comando & 0x80)
  9739                           	
  9740                           l193:	
  9741  0089                     	btfss	(fifo_print@comando),(7)&7
  9742  0089  1FB1               	goto	u4011
  9743  008A  288C               	goto	u4010
  9744  008B  288D               u4011:
  9745  008C                     	goto	l4837
  9746  008C  2955               u4010:
  9747  008D                     	line	250
  9748                           	
  9749                           l4791:	
  9750  008D                     ;fifo.c: 249:             {;fifo.c: 250:                 atraso = comando & ~0x80;
  9751                           	movf	(fifo_print@comando),w
  9752  008D  0831               	andlw	07Fh
  9753  008E  397F               	movwf	(??_fifo_print+0)+0
  9754  008F  00A9               	movf	(??_fifo_print+0)+0,w
  9755  0090  0829               	movwf	(fifo_print@atraso)
  9756  0091  00B2               	line	251
  9757                           	
  9758                           l4793:	
  9759  0092                     ;fifo.c: 251:                 if( atraso >= 100 )
  9760                           	movlw	low(064h)
  9761  0092  3064               	subwf	(fifo_print@atraso),w
  9762  0093  0232               	skipc
  9763  0094  1C03               	goto	u4021
  9764  0095  2897               	goto	u4020
  9765  0096  2898               u4021:
  9766  0097                     	goto	l4807
  9767  0097  28CE               u4020:
  9768  0098                     	line	253
  9769                           	
  9770                           l4795:	
  9771  0098                     ;fifo.c: 252:                 {;fifo.c: 253:                     dispLCD_dataReg('1');
  9772                           	movlw	low(031h)
  9773  0098  3031               	fcall	_dispLCD_dataReg
  9774  0099  160A  118A  2725  120A  118A  	line	254
  9775                           	
  9776                           l4797:	
  9777  009E                     ;fifo.c: 254:                     ++i;
  9778                           	movlw	low(01h)
  9779  009E  3001               	bcf	status, 5	;RP0=0, select bank0
  9780  009F  1283               	bcf	status, 6	;RP1=0, select bank0
  9781  00A0  1303               	movwf	(??_fifo_print+0)+0
  9782  00A1  00A9               	movf	(??_fifo_print+0)+0,w
  9783  00A2  0829               	addwf	(fifo_print@i),f
  9784  00A3  07B0               	line	255
  9785                           	
  9786                           l4799:	
  9787  00A4                     ;fifo.c: 255:                     atraso %= 100;
  9788                           	movlw	064h
  9789  00A4  3064               	movwf	(___awmod@divisor)
  9790  00A5  00A0               	movlw	0
  9791  00A6  3000               	movwf	((___awmod@divisor))+1
  9792  00A7  00A1               	movf	(fifo_print@atraso),w
  9793  00A8  0832               	movwf	(??_fifo_print+0)+0
  9794  00A9  00A9               	clrf	(??_fifo_print+0)+0+1
  9795  00AA  01AA               	movf	0+(??_fifo_print+0)+0,w
  9796  00AB  0829               	movwf	(___awmod@dividend)
  9797  00AC  00A2               	movf	1+(??_fifo_print+0)+0,w
  9798  00AD  082A               	movwf	(___awmod@dividend+1)
  9799  00AE  00A3               	fcall	___awmod
  9800  00AF  120A  118A  2571  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  9801  00B4  1283               	bcf	status, 6	;RP1=0, select bank0
  9802  00B5  1303               	movf	(0+(?___awmod)),w
  9803  00B6  0820               	movwf	(??_fifo_print+2)+0
  9804  00B7  00AB               	movf	(??_fifo_print+2)+0,w
  9805  00B8  082B               	movwf	(fifo_print@atraso)
  9806  00B9  00B2               	line	256
  9807                           	
  9808                           l4801:	
  9809  00BA                     ;fifo.c: 256:                     if(atraso < 10)
  9810                           	movlw	low(0Ah)
  9811  00BA  300A               	subwf	(fifo_print@atraso),w
  9812  00BB  0232               	skipnc
  9813  00BC  1803               	goto	u4031
  9814  00BD  28BF               	goto	u4030
  9815  00BE  28C0               u4031:
  9816  00BF                     	goto	l4807
  9817  00BF  28CE               u4030:
  9818  00C0                     	line	258
  9819                           	
  9820                           l4803:	
  9821  00C0                     ;fifo.c: 257:                     {;fifo.c: 258:                         dispLCD_dataReg
                                 ('0');
  9822                           	movlw	low(030h)
  9823  00C0  3030               	fcall	_dispLCD_dataReg
  9824  00C1  160A  118A  2725  120A  118A  	line	259
  9825                           	
  9826                           l4805:	
  9827  00C6                     ;fifo.c: 259:                         ++i;
  9828                           	movlw	low(01h)
  9829  00C6  3001               	bcf	status, 5	;RP0=0, select bank0
  9830  00C7  1283               	bcf	status, 6	;RP1=0, select bank0
  9831  00C8  1303               	movwf	(??_fifo_print+0)+0
  9832  00C9  00A9               	movf	(??_fifo_print+0)+0,w
  9833  00CA  0829               	addwf	(fifo_print@i),f
  9834  00CB  07B0               	goto	l4807
  9835  00CC  28CE               	line	260
  9836                           ;fifo.c: 260:                     }
  9837                           	
  9838                           l197:	
  9839  00CD                     	goto	l4807
  9840  00CD  28CE               	line	261
  9841                           ;fifo.c: 261:                 }
  9842                           	
  9843                           l196:	
  9844  00CE                     	line	262
  9845                           	
  9846                           l4807:	
  9847  00CE                     ;fifo.c: 262:                 if( atraso >= 10 )
  9848                           	movlw	low(0Ah)
  9849  00CE  300A               	subwf	(fifo_print@atraso),w
  9850  00CF  0232               	skipc
  9851  00D0  1C03               	goto	u4041
  9852  00D1  28D3               	goto	u4040
  9853  00D2  28D4               u4041:
  9854  00D3                     	goto	l4815
  9855  00D3  290A               u4040:
  9856  00D4                     	line	264
  9857                           	
  9858                           l4809:	
  9859  00D4                     ;fifo.c: 263:                 {;fifo.c: 264:                     dispLCD_dataReg(atraso/
                                 10 + '0');
  9860                           	movlw	0Ah
  9861  00D4  300A               	movwf	(___awdiv@divisor)
  9862  00D5  00A0               	movlw	0
  9863  00D6  3000               	movwf	((___awdiv@divisor))+1
  9864  00D7  00A1               	movf	(fifo_print@atraso),w
  9865  00D8  0832               	movwf	(??_fifo_print+0)+0
  9866  00D9  00A9               	clrf	(??_fifo_print+0)+0+1
  9867  00DA  01AA               	movf	0+(??_fifo_print+0)+0,w
  9868  00DB  0829               	movwf	(___awdiv@dividend)
  9869  00DC  00A2               	movf	1+(??_fifo_print+0)+0,w
  9870  00DD  082A               	movwf	(___awdiv@dividend+1)
  9871  00DE  00A3               	fcall	___awdiv
  9872  00DF  120A  118A  2492  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  9873  00E4  1283               	bcf	status, 6	;RP1=0, select bank0
  9874  00E5  1303               	movf	(0+(?___awdiv)),w
  9875  00E6  0820               	addlw	030h
  9876  00E7  3E30               	fcall	_dispLCD_dataReg
  9877  00E8  160A  118A  2725  120A  118A  	line	265
  9878                           	
  9879                           l4811:	
  9880  00ED                     ;fifo.c: 265:                     ++i;
  9881                           	movlw	low(01h)
  9882  00ED  3001               	bcf	status, 5	;RP0=0, select bank0
  9883  00EE  1283               	bcf	status, 6	;RP1=0, select bank0
  9884  00EF  1303               	movwf	(??_fifo_print+0)+0
  9885  00F0  00A9               	movf	(??_fifo_print+0)+0,w
  9886  00F1  0829               	addwf	(fifo_print@i),f
  9887  00F2  07B0               	line	266
  9888                           	
  9889                           l4813:	
  9890  00F3                     ;fifo.c: 266:                     atraso %= 10;
  9891                           	movlw	0Ah
  9892  00F3  300A               	movwf	(___awmod@divisor)
  9893  00F4  00A0               	movlw	0
  9894  00F5  3000               	movwf	((___awmod@divisor))+1
  9895  00F6  00A1               	movf	(fifo_print@atraso),w
  9896  00F7  0832               	movwf	(??_fifo_print+0)+0
  9897  00F8  00A9               	clrf	(??_fifo_print+0)+0+1
  9898  00F9  01AA               	movf	0+(??_fifo_print+0)+0,w
  9899  00FA  0829               	movwf	(___awmod@dividend)
  9900  00FB  00A2               	movf	1+(??_fifo_print+0)+0,w
  9901  00FC  082A               	movwf	(___awmod@dividend+1)
  9902  00FD  00A3               	fcall	___awmod
  9903  00FE  120A  118A  2571  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  9904  0103  1283               	bcf	status, 6	;RP1=0, select bank0
  9905  0104  1303               	movf	(0+(?___awmod)),w
  9906  0105  0820               	movwf	(??_fifo_print+2)+0
  9907  0106  00AB               	movf	(??_fifo_print+2)+0,w
  9908  0107  082B               	movwf	(fifo_print@atraso)
  9909  0108  00B2               	goto	l4815
  9910  0109  290A               	line	267
  9911                           ;fifo.c: 267:                 }
  9912                           	
  9913                           l198:	
  9914  010A                     	line	269
  9915                           	
  9916                           l4815:	
  9917  010A                     ;fifo.c: 269:                 dispLCD_dataReg(atraso + '0');
  9918                           	movf	(fifo_print@atraso),w
  9919  010A  0832               	addlw	030h
  9920  010B  3E30               	fcall	_dispLCD_dataReg
  9921  010C  160A  118A  2725  120A  118A  	line	270
  9922                           	
  9923                           l4817:	
  9924  0111                     ;fifo.c: 270:                 ++i;
  9925                           	movlw	low(01h)
  9926  0111  3001               	bcf	status, 5	;RP0=0, select bank0
  9927  0112  1283               	bcf	status, 6	;RP1=0, select bank0
  9928  0113  1303               	movwf	(??_fifo_print+0)+0
  9929  0114  00A9               	movf	(??_fifo_print+0)+0,w
  9930  0115  0829               	addwf	(fifo_print@i),f
  9931  0116  07B0               	line	272
  9932                           ;fifo.c: 272:                 dispLCD_dataReg('s');
  9933                           	movlw	low(073h)
  9934  0117  3073               	fcall	_dispLCD_dataReg
  9935  0118  160A  118A  2725  120A  118A  	line	273
  9936                           	
  9937                           l4819:	
  9938  011D                     ;fifo.c: 273:                 ++i;
  9939                           	movlw	low(01h)
  9940  011D  3001               	bcf	status, 5	;RP0=0, select bank0
  9941  011E  1283               	bcf	status, 6	;RP1=0, select bank0
  9942  011F  1303               	movwf	(??_fifo_print+0)+0
  9943  0120  00A9               	movf	(??_fifo_print+0)+0,w
  9944  0121  0829               	addwf	(fifo_print@i),f
  9945  0122  07B0               	line	274
  9946                           ;fifo.c: 274:             }
  9947                           	goto	l4839
  9948  0123  297A               	line	275
  9949                           ;fifo.c: 275:             else
  9950                           	
  9951                           l195:	
  9952  0124                     	line	277
  9953                           ;fifo.c: 276:             {;fifo.c: 277:                 switch( comando )
  9954                           	goto	l4837
  9955  0124  2955               	line	279
  9956                           ;fifo.c: 278:                 {;fifo.c: 279:                     case 'A':
  9957                           	
  9958                           l201:	
  9959  0125                     	goto	l4821
  9960  0125  292C               	line	280
  9961                           ;fifo.c: 280:                     case 'B':
  9962                           	
  9963                           l202:	
  9964  0126                     	goto	l4821
  9965  0126  292C               	line	281
  9966                           ;fifo.c: 281:                     case 'C':
  9967                           	
  9968                           l203:	
  9969  0127                     	goto	l4821
  9970  0127  292C               	line	282
  9971                           ;fifo.c: 282:                     case 'D':
  9972                           	
  9973                           l204:	
  9974  0128                     	goto	l4821
  9975  0128  292C               	line	283
  9976                           ;fifo.c: 283:                     case 'a':
  9977                           	
  9978                           l205:	
  9979  0129                     	goto	l4821
  9980  0129  292C               	line	284
  9981                           ;fifo.c: 284:                     case 'b':
  9982                           	
  9983                           l206:	
  9984  012A                     	goto	l4821
  9985  012A  292C               	line	285
  9986                           ;fifo.c: 285:                     case 'c':
  9987                           	
  9988                           l207:	
  9989  012B                     	goto	l4821
  9990  012B  292C               	line	286
  9991                           ;fifo.c: 286:                     case 'd':
  9992                           	
  9993                           l208:	
  9994  012C                     	line	287
  9995                           	
  9996                           l4821:	
  9997  012C                     ;fifo.c: 287:                                 dispLCD_dataReg( comando & ~0x20 );
  9998                           	movf	(fifo_print@comando),w
  9999  012C  0831               	andlw	0DFh
 10000  012D  39DF               	fcall	_dispLCD_dataReg
 10001  012E  160A  118A  2725  120A  118A  	line	288
 10002                           	
 10003                           l4823:	
 10004  0133                     ;fifo.c: 288:                                 ++i;
 10005                           	movlw	low(01h)
 10006  0133  3001               	bcf	status, 5	;RP0=0, select bank0
 10007  0134  1283               	bcf	status, 6	;RP1=0, select bank0
 10008  0135  1303               	movwf	(??_fifo_print+0)+0
 10009  0136  00A9               	movf	(??_fifo_print+0)+0,w
 10010  0137  0829               	addwf	(fifo_print@i),f
 10011  0138  07B0               	line	289
 10012                           	
 10013                           l4825:	
 10014  0139                     ;fifo.c: 289:                                 dispLCD_dataReg( comando & 0x20 ? '-': '+'
                                  );
 10015                           	btfsc	(fifo_print@comando),(5)&7
 10016  0139  1AB1               	goto	u4051
 10017  013A  293C               	goto	u4050
 10018  013B  293D               u4051:
 10019  013C                     	goto	l4829
 10020  013C  2942               u4050:
 10021  013D                     	
 10022                           l4827:	
 10023  013D                     	movlw	02Bh
 10024  013D  302B               	movwf	(_fifo_print$183)
 10025  013E  00AC               	movlw	0
 10026  013F  3000               	movwf	((_fifo_print$183))+1
 10027  0140  00AD               	goto	l4831
 10028  0141  2947               	
 10029                           l210:	
 10030  0142                     	
 10031                           l4829:	
 10032  0142                     	movlw	02Dh
 10033  0142  302D               	movwf	(_fifo_print$183)
 10034  0143  00AC               	movlw	0
 10035  0144  3000               	movwf	((_fifo_print$183))+1
 10036  0145  00AD               	goto	l4831
 10037  0146  2947               	
 10038                           l212:	
 10039  0147                     	
 10040                           l4831:	
 10041  0147                     	movf	(_fifo_print$183),w
 10042  0147  082C               	fcall	_dispLCD_dataReg
 10043  0148  160A  118A  2725  120A  118A  	line	290
 10044                           	
 10045                           l4833:	
 10046  014D                     ;fifo.c: 290:                                 ++i;
 10047                           	movlw	low(01h)
 10048  014D  3001               	bcf	status, 5	;RP0=0, select bank0
 10049  014E  1283               	bcf	status, 6	;RP1=0, select bank0
 10050  014F  1303               	movwf	(??_fifo_print+0)+0
 10051  0150  00A9               	movf	(??_fifo_print+0)+0,w
 10052  0151  0829               	addwf	(fifo_print@i),f
 10053  0152  07B0               	line	291
 10054                           ;fifo.c: 291:                                 break;
 10055                           	goto	l4839
 10056  0153  297A               	line	293
 10057                           	
 10058                           l4835:	
 10059  0154                     ;fifo.c: 293:                 }
 10060                           	goto	l4839
 10061  0154  297A               	
 10062                           l200:	
 10063  0155                     	
 10064                           l4837:	
 10065  0155                     	movf	(fifo_print@comando),w
 10066  0155  0831               	movwf	(??_fifo_print+0)+0
 10067  0156  00A9               	clrf	(??_fifo_print+0)+0+1
 10068  0157  01AA               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 10069                           ; Switch size 1, requested type "space"
 10070                           ; Number of cases is 1, Range of values is 0 to 0
 10071                           ; switch strategies available:
 10072                           ; Name         Instructions Cycles
 10073                           ; simple_byte            4     3 (average)
 10074                           ; direct_byte           11     8 (fixed)
 10075                           ; jumptable            260     6 (fixed)
 10076                           ;	Chosen strategy is simple_byte
 10077                           
 10078                           	movf 1+(??_fifo_print+0)+0,w
 10079  0158  082A               	opt asmopt_push
 10080                           	opt asmopt_off
 10081                           	xorlw	0^0	; case 0
 10082  0159  3A00               	skipnz
 10083  015A  1903               	goto	l5801
 10084  015B  295D               	goto	l4839
 10085  015C  297A               	opt asmopt_pop
 10086                           	
 10087                           l5801:	
 10088  015D                     ; Switch size 1, requested type "space"
 10089                           ; Number of cases is 8, Range of values is 65 to 100
 10090                           ; switch strategies available:
 10091                           ; Name         Instructions Cycles
 10092                           ; simple_byte           25    13 (average)
 10093                           ; direct_byte          119    11 (fixed)
 10094                           ; jumptable            263     9 (fixed)
 10095                           ;	Chosen strategy is simple_byte
 10096                           
 10097                           	movf 0+(??_fifo_print+0)+0,w
 10098  015D  0829               	opt asmopt_push
 10099                           	opt asmopt_off
 10100                           	xorlw	65^0	; case 65
 10101  015E  3A41               	skipnz
 10102  015F  1903               	goto	l4821
 10103  0160  292C               	xorlw	66^65	; case 66
 10104  0161  3A03               	skipnz
 10105  0162  1903               	goto	l4821
 10106  0163  292C               	xorlw	67^66	; case 67
 10107  0164  3A01               	skipnz
 10108  0165  1903               	goto	l4821
 10109  0166  292C               	xorlw	68^67	; case 68
 10110  0167  3A07               	skipnz
 10111  0168  1903               	goto	l4821
 10112  0169  292C               	xorlw	97^68	; case 97
 10113  016A  3A25               	skipnz
 10114  016B  1903               	goto	l4821
 10115  016C  292C               	xorlw	98^97	; case 98
 10116  016D  3A03               	skipnz
 10117  016E  1903               	goto	l4821
 10118  016F  292C               	xorlw	99^98	; case 99
 10119  0170  3A01               	skipnz
 10120  0171  1903               	goto	l4821
 10121  0172  292C               	xorlw	100^99	; case 100
 10122  0173  3A07               	skipnz
 10123  0174  1903               	goto	l4821
 10124  0175  292C               	goto	l4839
 10125  0176  297A               	opt asmopt_pop
 10126                           
 10127                           	
 10128                           l213:	
 10129  0177                     	goto	l4839
 10130  0177  297A               	line	295
 10131                           ;fifo.c: 295:             }
 10132                           	
 10133                           l199:	
 10134  0178                     	goto	l4839
 10135  0178  297A               	
 10136                           l194:	
 10137  0179                     	goto	l4839
 10138  0179  297A               	line	296
 10139                           ;fifo.c: 296:         }
 10140                           	
 10141                           l192:	
 10142  017A                     	line	297
 10143                           	
 10144                           l4839:	
 10145  017A                     ;fifo.c: 297:     }
 10146                           	movlw	low(011h)
 10147  017A  3011               	subwf	(fifo_print@i),w
 10148  017B  0230               	skipc
 10149  017C  1C03               	goto	u4061
 10150  017D  297F               	goto	u4060
 10151  017E  2980               u4061:
 10152  017F                     	goto	l4777
 10153  017F  2861               u4060:
 10154  0180                     	goto	l215
 10155  0180  2981               	
 10156                           l214:	
 10157  0181                     	line	299
 10158                           	
 10159                           l215:	
 10160  0181                     	return
 10161  0181  0008               	opt stack 0
 10162                           GLOBAL	__end_of_fifo_print
 10163                           	__end_of_fifo_print:
 10164  0182                     	signat	_fifo_print,89
 10165                           	global	___awmod
 10166                           
 10167 ;; *************** function ___awmod *****************
 10168 ;; Defined at:
 10169 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
 10170 ;; Parameters:    Size  Location     Type
 10171 ;;  divisor         2    0[BANK0 ] int 
 10172 ;;  dividend        2    2[BANK0 ] int 
 10173 ;; Auto vars:     Size  Location     Type
 10174 ;;  sign            1    6[BANK0 ] unsigned char 
 10175 ;;  counter         1    5[BANK0 ] unsigned char 
 10176 ;; Return value:  Size  Location     Type
 10177 ;;                  2    0[BANK0 ] int 
 10178 ;; Registers used:
 10179 ;;		wreg, status,2, status,0
 10180 ;; Tracked objects:
 10181 ;;		On entry : 0/0
 10182 ;;		On exit  : 0/0
 10183 ;;		Unchanged: 0/0
 10184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10185 ;;      Params:         0       4       0       0       0
 10186 ;;      Locals:         0       2       0       0       0
 10187 ;;      Temps:          0       1       0       0       0
 10188 ;;      Totals:         0       7       0       0       0
 10189 ;;Total ram usage:        7 bytes
 10190 ;; Hardware stack levels used:    1
 10191 ;; Hardware stack levels required when called:    2
 10192 ;; This function calls:
 10193 ;;		Nothing
 10194 ;; This function is called by:
 10195 ;;		_dispLCD_num
 10196 ;;		_fifo_print
 10197 ;; This function uses a non-reentrant model
 10198 ;;
 10199                           psect	text26,local,class=CODE,delta=2,merge=1,group=1
 10200                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
 10201                           	line	5
 10202                           global __ptext26
 10203                           __ptext26:	;psect for function ___awmod
 10204  0571                     psect	text26
 10205                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
 10206                           	line	5
 10207                           	global	__size_of___awmod
 10208                           	__size_of___awmod	equ	__end_of___awmod-___awmod
 10209  0065                     	
 10210                           ___awmod:	
 10211  0571                     ;incstack = 0
 10212                           	opt	stack 3
 10213                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10214                           	line	12
 10215                           	
 10216                           l4411:	
 10217  0571                     	bcf	status, 5	;RP0=0, select bank0
 10218  0571  1283               	bcf	status, 6	;RP1=0, select bank0
 10219  0572  1303               	clrf	(___awmod@sign)
 10220  0573  01A6               	line	13
 10221                           	
 10222                           l4413:	
 10223  0574                     	btfss	(___awmod@dividend+1),7
 10224  0574  1FA3               	goto	u3381
 10225  0575  2D77               	goto	u3380
 10226  0576  2D78               u3381:
 10227  0577                     	goto	l4419
 10228  0577  2D80               u3380:
 10229  0578                     	line	14
 10230                           	
 10231                           l4415:	
 10232  0578                     	comf	(___awmod@dividend),f
 10233  0578  09A2               	comf	(___awmod@dividend+1),f
 10234  0579  09A3               	incf	(___awmod@dividend),f
 10235  057A  0AA2               	skipnz
 10236  057B  1903               	incf	(___awmod@dividend+1),f
 10237  057C  0AA3               	line	15
 10238                           	
 10239                           l4417:	
 10240  057D                     	clrf	(___awmod@sign)
 10241  057D  01A6               	incf	(___awmod@sign),f
 10242  057E  0AA6               	goto	l4419
 10243  057F  2D80               	line	16
 10244                           	
 10245                           l852:	
 10246  0580                     	line	17
 10247                           	
 10248                           l4419:	
 10249  0580                     	btfss	(___awmod@divisor+1),7
 10250  0580  1FA1               	goto	u3391
 10251  0581  2D83               	goto	u3390
 10252  0582  2D84               u3391:
 10253  0583                     	goto	l4423
 10254  0583  2D8A               u3390:
 10255  0584                     	line	18
 10256                           	
 10257                           l4421:	
 10258  0584                     	comf	(___awmod@divisor),f
 10259  0584  09A0               	comf	(___awmod@divisor+1),f
 10260  0585  09A1               	incf	(___awmod@divisor),f
 10261  0586  0AA0               	skipnz
 10262  0587  1903               	incf	(___awmod@divisor+1),f
 10263  0588  0AA1               	goto	l4423
 10264  0589  2D8A               	
 10265                           l853:	
 10266  058A                     	line	19
 10267                           	
 10268                           l4423:	
 10269  058A                     	movf	((___awmod@divisor)),w
 10270  058A  0820               iorwf	((___awmod@divisor+1)),w
 10271  058B  0421               	btfsc	status,2
 10272  058C  1903               	goto	u3401
 10273  058D  2D8F               	goto	u3400
 10274  058E  2D90               u3401:
 10275  058F                     	goto	l4441
 10276  058F  2DC5               u3400:
 10277  0590                     	line	20
 10278                           	
 10279                           l4425:	
 10280  0590                     	clrf	(___awmod@counter)
 10281  0590  01A5               	incf	(___awmod@counter),f
 10282  0591  0AA5               	line	21
 10283                           	goto	l4431
 10284  0592  2D9F               	
 10285                           l856:	
 10286  0593                     	line	22
 10287                           	
 10288                           l4427:	
 10289  0593                     	movlw	01h
 10290  0593  3001               	
 10291                           u3415:
 10292  0594                     	clrc
 10293  0594  1003               	rlf	(___awmod@divisor),f
 10294  0595  0DA0               	rlf	(___awmod@divisor+1),f
 10295  0596  0DA1               	addlw	-1
 10296  0597  3EFF               	skipz
 10297  0598  1D03               	goto	u3415
 10298  0599  2D94               	line	23
 10299                           	
 10300                           l4429:	
 10301  059A                     	movlw	low(01h)
 10302  059A  3001               	movwf	(??___awmod+0)+0
 10303  059B  00A4               	movf	(??___awmod+0)+0,w
 10304  059C  0824               	addwf	(___awmod@counter),f
 10305  059D  07A5               	goto	l4431
 10306  059E  2D9F               	line	24
 10307                           	
 10308                           l855:	
 10309  059F                     	line	21
 10310                           	
 10311                           l4431:	
 10312  059F                     	btfss	(___awmod@divisor+1),(15)&7
 10313  059F  1FA1               	goto	u3421
 10314  05A0  2DA2               	goto	u3420
 10315  05A1  2DA3               u3421:
 10316  05A2                     	goto	l4427
 10317  05A2  2D93               u3420:
 10318  05A3                     	goto	l4433
 10319  05A3  2DA5               	
 10320                           l857:	
 10321  05A4                     	goto	l4433
 10322  05A4  2DA5               	line	25
 10323                           	
 10324                           l858:	
 10325  05A5                     	line	26
 10326                           	
 10327                           l4433:	
 10328  05A5                     	movf	(___awmod@divisor+1),w
 10329  05A5  0821               	subwf	(___awmod@dividend+1),w
 10330  05A6  0223               	skipz
 10331  05A7  1D03               	goto	u3435
 10332  05A8  2DAB               	movf	(___awmod@divisor),w
 10333  05A9  0820               	subwf	(___awmod@dividend),w
 10334  05AA  0222               u3435:
 10335  05AB                     	skipc
 10336  05AB  1C03               	goto	u3431
 10337  05AC  2DAE               	goto	u3430
 10338  05AD  2DAF               u3431:
 10339  05AE                     	goto	l4437
 10340  05AE  2DB6               u3430:
 10341  05AF                     	line	27
 10342                           	
 10343                           l4435:	
 10344  05AF                     	movf	(___awmod@divisor),w
 10345  05AF  0820               	subwf	(___awmod@dividend),f
 10346  05B0  02A2               	movf	(___awmod@divisor+1),w
 10347  05B1  0821               	skipc
 10348  05B2  1C03               	decf	(___awmod@dividend+1),f
 10349  05B3  03A3               	subwf	(___awmod@dividend+1),f
 10350  05B4  02A3               	goto	l4437
 10351  05B5  2DB6               	
 10352                           l859:	
 10353  05B6                     	line	28
 10354                           	
 10355                           l4437:	
 10356  05B6                     	movlw	01h
 10357  05B6  3001               	
 10358                           u3445:
 10359  05B7                     	clrc
 10360  05B7  1003               	rrf	(___awmod@divisor+1),f
 10361  05B8  0CA1               	rrf	(___awmod@divisor),f
 10362  05B9  0CA0               	addlw	-1
 10363  05BA  3EFF               	skipz
 10364  05BB  1D03               	goto	u3445
 10365  05BC  2DB7               	line	29
 10366                           	
 10367                           l4439:	
 10368  05BD                     	movlw	01h
 10369  05BD  3001               	subwf	(___awmod@counter),f
 10370  05BE  02A5               	btfss	status,2
 10371  05BF  1D03               	goto	u3451
 10372  05C0  2DC2               	goto	u3450
 10373  05C1  2DC3               u3451:
 10374  05C2                     	goto	l4433
 10375  05C2  2DA5               u3450:
 10376  05C3                     	goto	l4441
 10377  05C3  2DC5               	
 10378                           l860:	
 10379  05C4                     	goto	l4441
 10380  05C4  2DC5               	line	30
 10381                           	
 10382                           l854:	
 10383  05C5                     	line	31
 10384                           	
 10385                           l4441:	
 10386  05C5                     	movf	((___awmod@sign)),w
 10387  05C5  0826               	btfsc	status,2
 10388  05C6  1903               	goto	u3461
 10389  05C7  2DC9               	goto	u3460
 10390  05C8  2DCA               u3461:
 10391  05C9                     	goto	l4445
 10392  05C9  2DD0               u3460:
 10393  05CA                     	line	32
 10394                           	
 10395                           l4443:	
 10396  05CA                     	comf	(___awmod@dividend),f
 10397  05CA  09A2               	comf	(___awmod@dividend+1),f
 10398  05CB  09A3               	incf	(___awmod@dividend),f
 10399  05CC  0AA2               	skipnz
 10400  05CD  1903               	incf	(___awmod@dividend+1),f
 10401  05CE  0AA3               	goto	l4445
 10402  05CF  2DD0               	
 10403                           l861:	
 10404  05D0                     	line	33
 10405                           	
 10406                           l4445:	
 10407  05D0                     	movf	(___awmod@dividend+1),w
 10408  05D0  0823               	movwf	(?___awmod+1)
 10409  05D1  00A1               	movf	(___awmod@dividend),w
 10410  05D2  0822               	movwf	(?___awmod)
 10411  05D3  00A0               	goto	l862
 10412  05D4  2DD5               	
 10413                           l4447:	
 10414  05D5                     	line	34
 10415                           	
 10416                           l862:	
 10417  05D5                     	return
 10418  05D5  0008               	opt stack 0
 10419                           GLOBAL	__end_of___awmod
 10420                           	__end_of___awmod:
 10421  05D6                     	signat	___awmod,8314
 10422                           	global	_fifo_indicePrint_inc
 10423                           
 10424 ;; *************** function _fifo_indicePrint_inc *****************
 10425 ;; Defined at:
 10426 ;;		line 206 in file "fifo.c"
 10427 ;; Parameters:    Size  Location     Type
 10428 ;;		None
 10429 ;; Auto vars:     Size  Location     Type
 10430 ;;		None
 10431 ;; Return value:  Size  Location     Type
 10432 ;;                  1    wreg      void 
 10433 ;; Registers used:
 10434 ;;		wreg, status,2, status,0
 10435 ;; Tracked objects:
 10436 ;;		On entry : 0/0
 10437 ;;		On exit  : 0/0
 10438 ;;		Unchanged: 0/0
 10439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10440 ;;      Params:         0       0       0       0       0
 10441 ;;      Locals:         0       0       0       0       0
 10442 ;;      Temps:          0       2       0       0       0
 10443 ;;      Totals:         0       2       0       0       0
 10444 ;;Total ram usage:        2 bytes
 10445 ;; Hardware stack levels used:    1
 10446 ;; Hardware stack levels required when called:    2
 10447 ;; This function calls:
 10448 ;;		Nothing
 10449 ;; This function is called by:
 10450 ;;		_main
 10451 ;; This function uses a non-reentrant model
 10452 ;;
 10453                           psect	text27,local,class=CODE,delta=2,merge=1,group=0
 10454                           	file	"fifo.c"
 10455                           	line	206
 10456                           global __ptext27
 10457                           __ptext27:	;psect for function _fifo_indicePrint_inc
 10458  16F5                     psect	text27
 10459                           	file	"fifo.c"
 10460                           	line	206
 10461                           	global	__size_of_fifo_indicePrint_inc
 10462                           	__size_of_fifo_indicePrint_inc	equ	__end_of_fifo_indicePrint_inc-_fifo_indicePrint_inc

 10463  0030                     	
 10464                           _fifo_indicePrint_inc:	
 10465  16F5                     ;incstack = 0
 10466                           	opt	stack 5
 10467                           ; Regs used in _fifo_indicePrint_inc: [wreg+status,2+status,0]
 10468                           	line	208
 10469                           	
 10470                           l4757:	
 10471  16F5                     ;fifo.c: 208:     if( ind_print < 62 -1 )
 10472                           	movlw	low(03Dh)
 10473  16F5  303D               	bcf	status, 5	;RP0=0, select bank0
 10474  16F6  1283               	bcf	status, 6	;RP1=0, select bank0
 10475  16F7  1303               	subwf	(_ind_print),w
 10476  16F8  0258               	skipnc
 10477  16F9  1803               	goto	u3961
 10478  16FA  2EFC               	goto	u3960
 10479  16FB  2EFD               u3961:
 10480  16FC                     	goto	l4765
 10481  16FC  2F1F               u3960:
 10482  16FD                     	line	210
 10483                           	
 10484                           l4759:	
 10485  16FD                     ;fifo.c: 209:     {;fifo.c: 210:         if( ind_print < ind_fila-1 )
 10486                           	movf	(_ind_fila),w
 10487  16FD  0859               	addlw	low(-1)
 10488  16FE  3EFF               	movwf	(??_fifo_indicePrint_inc+0)+0
 10489  16FF  00A0               	movlw	high(-1)
 10490  1700  30FF               	skipnc
 10491  1701  1803               	movlw	(high(-1)+1)&0ffh
 10492  1702  3000               	movwf	((??_fifo_indicePrint_inc+0)+0)+1
 10493  1703  00A1               	movf	1+(??_fifo_indicePrint_inc+0)+0,w
 10494  1704  0821               	xorlw	80h
 10495  1705  3A80               	sublw	080h
 10496  1706  3C80               	skipz
 10497  1707  1D03               	goto	u3975
 10498  1708  2F0B               	movf	0+(??_fifo_indicePrint_inc+0)+0,w
 10499  1709  0820               	subwf	(_ind_print),w
 10500  170A  0258               u3975:
 10501  170B                     
 10502                           	skipnc
 10503  170B  1803               	goto	u3971
 10504  170C  2F0E               	goto	u3970
 10505  170D  2F0F               u3971:
 10506  170E                     	goto	l4763
 10507  170E  2F16               u3970:
 10508  170F                     	line	211
 10509                           	
 10510                           l4761:	
 10511  170F                     ;fifo.c: 211:             ind_print++;
 10512                           	movlw	low(01h)
 10513  170F  3001               	bcf	status, 5	;RP0=0, select bank0
 10514  1710  1283               	bcf	status, 6	;RP1=0, select bank0
 10515  1711  1303               	movwf	(??_fifo_indicePrint_inc+0)+0
 10516  1712  00A0               	movf	(??_fifo_indicePrint_inc+0)+0,w
 10517  1713  0820               	addwf	(_ind_print),f
 10518  1714  07D8               	goto	l183
 10519  1715  2F24               	line	212
 10520                           ;fifo.c: 212:         else
 10521                           	
 10522                           l180:	
 10523  1716                     	line	213
 10524                           	
 10525                           l4763:	
 10526  1716                     ;fifo.c: 213:             ind_print = ind_fila-1;
 10527                           	bcf	status, 5	;RP0=0, select bank0
 10528  1716  1283               	bcf	status, 6	;RP1=0, select bank0
 10529  1717  1303               	movf	(_ind_fila),w
 10530  1718  0859               	addlw	0FFh
 10531  1719  3EFF               	movwf	(??_fifo_indicePrint_inc+0)+0
 10532  171A  00A0               	movf	(??_fifo_indicePrint_inc+0)+0,w
 10533  171B  0820               	movwf	(_ind_print)
 10534  171C  00D8               	goto	l183
 10535  171D  2F24               	
 10536                           l181:	
 10537  171E                     	line	214
 10538                           ;fifo.c: 214:     }
 10539                           	goto	l183
 10540  171E  2F24               	line	215
 10541                           ;fifo.c: 215:     else
 10542                           	
 10543                           l179:	
 10544  171F                     	line	216
 10545                           	
 10546                           l4765:	
 10547  171F                     ;fifo.c: 216:         ind_print = 62 -1;
 10548                           	movlw	low(03Dh)
 10549  171F  303D               	movwf	(??_fifo_indicePrint_inc+0)+0
 10550  1720  00A0               	movf	(??_fifo_indicePrint_inc+0)+0,w
 10551  1721  0820               	movwf	(_ind_print)
 10552  1722  00D8               	goto	l183
 10553  1723  2F24               	
 10554                           l182:	
 10555  1724                     	line	217
 10556                           	
 10557                           l183:	
 10558  1724                     	return
 10559  1724  0008               	opt stack 0
 10560                           GLOBAL	__end_of_fifo_indicePrint_inc
 10561                           	__end_of_fifo_indicePrint_inc:
 10562  1725                     	signat	_fifo_indicePrint_inc,89
 10563                           	global	_fifo_indicePrint_dec
 10564                           
 10565 ;; *************** function _fifo_indicePrint_dec *****************
 10566 ;; Defined at:
 10567 ;;		line 218 in file "fifo.c"
 10568 ;; Parameters:    Size  Location     Type
 10569 ;;		None
 10570 ;; Auto vars:     Size  Location     Type
 10571 ;;		None
 10572 ;; Return value:  Size  Location     Type
 10573 ;;                  1    wreg      void 
 10574 ;; Registers used:
 10575 ;;		wreg, status,2, status,0
 10576 ;; Tracked objects:
 10577 ;;		On entry : 0/0
 10578 ;;		On exit  : 0/0
 10579 ;;		Unchanged: 0/0
 10580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10581 ;;      Params:         0       0       0       0       0
 10582 ;;      Locals:         0       0       0       0       0
 10583 ;;      Temps:          0       0       0       0       0
 10584 ;;      Totals:         0       0       0       0       0
 10585 ;;Total ram usage:        0 bytes
 10586 ;; Hardware stack levels used:    1
 10587 ;; Hardware stack levels required when called:    2
 10588 ;; This function calls:
 10589 ;;		Nothing
 10590 ;; This function is called by:
 10591 ;;		_main
 10592 ;; This function uses a non-reentrant model
 10593 ;;
 10594                           psect	text28,local,class=CODE,delta=2,merge=1,group=0
 10595                           	line	218
 10596                           global __ptext28
 10597                           __ptext28:	;psect for function _fifo_indicePrint_dec
 10598  141E                     psect	text28
 10599                           	file	"fifo.c"
 10600                           	line	218
 10601                           	global	__size_of_fifo_indicePrint_dec
 10602                           	__size_of_fifo_indicePrint_dec	equ	__end_of_fifo_indicePrint_dec-_fifo_indicePrint_dec

 10603  000C                     	
 10604                           _fifo_indicePrint_dec:	
 10605  141E                     ;incstack = 0
 10606                           	opt	stack 5
 10607                           ; Regs used in _fifo_indicePrint_dec: [wreg+status,2+status,0]
 10608                           	line	220
 10609                           	
 10610                           l4767:	
 10611  141E                     ;fifo.c: 220:     if( ind_print > 2 )
 10612                           	movlw	low(03h)
 10613  141E  3003               	bcf	status, 5	;RP0=0, select bank0
 10614  141F  1283               	bcf	status, 6	;RP1=0, select bank0
 10615  1420  1303               	subwf	(_ind_print),w
 10616  1421  0258               	skipc
 10617  1422  1C03               	goto	u3981
 10618  1423  2C25               	goto	u3980
 10619  1424  2C26               u3981:
 10620  1425                     	goto	l187
 10621  1425  2C29               u3980:
 10622  1426                     	line	221
 10623                           	
 10624                           l4769:	
 10625  1426                     ;fifo.c: 221:         ind_print--;
 10626                           	movlw	01h
 10627  1426  3001               	subwf	(_ind_print),f
 10628  1427  02D8               	goto	l187
 10629  1428  2C29               	
 10630                           l186:	
 10631  1429                     	line	222
 10632                           	
 10633                           l187:	
 10634  1429                     	return
 10635  1429  0008               	opt stack 0
 10636                           GLOBAL	__end_of_fifo_indicePrint_dec
 10637                           	__end_of_fifo_indicePrint_dec:
 10638  142A                     	signat	_fifo_indicePrint_dec,89
 10639                           	global	_fifo_indice
 10640                           
 10641 ;; *************** function _fifo_indice *****************
 10642 ;; Defined at:
 10643 ;;		line 191 in file "fifo.c"
 10644 ;; Parameters:    Size  Location     Type
 10645 ;;		None
 10646 ;; Auto vars:     Size  Location     Type
 10647 ;;		None
 10648 ;; Return value:  Size  Location     Type
 10649 ;;                  1    wreg      unsigned char 
 10650 ;; Registers used:
 10651 ;;		wreg
 10652 ;; Tracked objects:
 10653 ;;		On entry : 0/0
 10654 ;;		On exit  : 0/0
 10655 ;;		Unchanged: 0/0
 10656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10657 ;;      Params:         0       0       0       0       0
 10658 ;;      Locals:         0       0       0       0       0
 10659 ;;      Temps:          0       0       0       0       0
 10660 ;;      Totals:         0       0       0       0       0
 10661 ;;Total ram usage:        0 bytes
 10662 ;; Hardware stack levels used:    1
 10663 ;; Hardware stack levels required when called:    2
 10664 ;; This function calls:
 10665 ;;		Nothing
 10666 ;; This function is called by:
 10667 ;;		_main
 10668 ;; This function uses a non-reentrant model
 10669 ;;
 10670                           psect	text29,local,class=CODE,delta=2,merge=1,group=0
 10671                           	line	191
 10672                           global __ptext29
 10673                           __ptext29:	;psect for function _fifo_indice
 10674  13CC                     psect	text29
 10675                           	file	"fifo.c"
 10676                           	line	191
 10677                           	global	__size_of_fifo_indice
 10678                           	__size_of_fifo_indice	equ	__end_of_fifo_indice-_fifo_indice
 10679  0005                     	
 10680                           _fifo_indice:	
 10681  13CC                     ;incstack = 0
 10682                           	opt	stack 5
 10683                           ; Regs used in _fifo_indice: [wreg]
 10684                           	line	193
 10685                           	
 10686                           l4745:	
 10687  13CC                     ;fifo.c: 193:     return ( ind_fila );
 10688                           	bcf	status, 5	;RP0=0, select bank0
 10689  13CC  1283               	bcf	status, 6	;RP1=0, select bank0
 10690  13CD  1303               	movf	(_ind_fila),w
 10691  13CE  0859               	goto	l170
 10692  13CF  2BD0               	
 10693                           l4747:	
 10694  13D0                     	line	194
 10695                           	
 10696                           l170:	
 10697  13D0                     	return
 10698  13D0  0008               	opt stack 0
 10699                           GLOBAL	__end_of_fifo_indice
 10700                           	__end_of_fifo_indice:
 10701  13D1                     	signat	_fifo_indice,89
 10702                           	global	_fifo_disponivel
 10703                           
 10704 ;; *************** function _fifo_disponivel *****************
 10705 ;; Defined at:
 10706 ;;		line 196 in file "fifo.c"
 10707 ;; Parameters:    Size  Location     Type
 10708 ;;		None
 10709 ;; Auto vars:     Size  Location     Type
 10710 ;;		None
 10711 ;; Return value:  Size  Location     Type
 10712 ;;                  1    wreg      unsigned char 
 10713 ;; Registers used:
 10714 ;;		wreg
 10715 ;; Tracked objects:
 10716 ;;		On entry : 0/0
 10717 ;;		On exit  : 0/0
 10718 ;;		Unchanged: 0/0
 10719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10720 ;;      Params:         0       0       0       0       0
 10721 ;;      Locals:         0       0       0       0       0
 10722 ;;      Temps:          0       0       0       0       0
 10723 ;;      Totals:         0       0       0       0       0
 10724 ;;Total ram usage:        0 bytes
 10725 ;; Hardware stack levels used:    1
 10726 ;; Hardware stack levels required when called:    2
 10727 ;; This function calls:
 10728 ;;		Nothing
 10729 ;; This function is called by:
 10730 ;;		_main
 10731 ;; This function uses a non-reentrant model
 10732 ;;
 10733                           psect	text30,local,class=CODE,delta=2,merge=1,group=0
 10734                           	line	196
 10735                           global __ptext30
 10736                           __ptext30:	;psect for function _fifo_disponivel
 10737  1412                     psect	text30
 10738                           	file	"fifo.c"
 10739                           	line	196
 10740                           	global	__size_of_fifo_disponivel
 10741                           	__size_of_fifo_disponivel	equ	__end_of_fifo_disponivel-_fifo_disponivel
 10742  000C                     	
 10743                           _fifo_disponivel:	
 10744  1412                     ;incstack = 0
 10745                           	opt	stack 5
 10746                           ; Regs used in _fifo_disponivel: [wreg]
 10747                           	line	198
 10748                           	
 10749                           l4749:	
 10750  1412                     ;fifo.c: 198:     return( ind_fila < 62 );
 10751                           	movlw	low(03Eh)
 10752  1412  303E               	bcf	status, 5	;RP0=0, select bank0
 10753  1413  1283               	bcf	status, 6	;RP1=0, select bank0
 10754  1414  1303               	subwf	(_ind_fila),w
 10755  1415  0259               	skipc
 10756  1416  1C03               	goto	u3941
 10757  1417  2C19               	goto	u3940
 10758  1418  2C1B               u3941:
 10759  1419                     	movlw	1
 10760  1419  3001               	goto	u3950
 10761  141A  2C1C               u3940:
 10762  141B                     	movlw	0
 10763  141B  3000               u3950:
 10764  141C                     	goto	l173
 10765  141C  2C1D               	
 10766                           l4751:	
 10767  141D                     	line	199
 10768                           	
 10769                           l173:	
 10770  141D                     	return
 10771  141D  0008               	opt stack 0
 10772                           GLOBAL	__end_of_fifo_disponivel
 10773                           	__end_of_fifo_disponivel:
 10774  141E                     	signat	_fifo_disponivel,89
 10775                           	global	_fifo_delete
 10776                           
 10777 ;; *************** function _fifo_delete *****************
 10778 ;; Defined at:
 10779 ;;		line 143 in file "fifo.c"
 10780 ;; Parameters:    Size  Location     Type
 10781 ;;		None
 10782 ;; Auto vars:     Size  Location     Type
 10783 ;;		None
 10784 ;; Return value:  Size  Location     Type
 10785 ;;                  1    wreg      void 
 10786 ;; Registers used:
 10787 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10788 ;; Tracked objects:
 10789 ;;		On entry : 0/0
 10790 ;;		On exit  : 0/0
 10791 ;;		Unchanged: 0/0
 10792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10793 ;;      Params:         0       0       0       0       0
 10794 ;;      Locals:         0       0       0       0       0
 10795 ;;      Temps:          0       0       0       0       0
 10796 ;;      Totals:         0       0       0       0       0
 10797 ;;Total ram usage:        0 bytes
 10798 ;; Hardware stack levels used:    1
 10799 ;; Hardware stack levels required when called:    5
 10800 ;; This function calls:
 10801 ;;		_alt_atuador
 10802 ;;		_fifo_alinharPrint
 10803 ;; This function is called by:
 10804 ;;		_main
 10805 ;; This function uses a non-reentrant model
 10806 ;;
 10807                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
 10808                           	line	143
 10809                           global __ptext31
 10810                           __ptext31:	;psect for function _fifo_delete
 10811  15ED                     psect	text31
 10812                           	file	"fifo.c"
 10813                           	line	143
 10814                           	global	__size_of_fifo_delete
 10815                           	__size_of_fifo_delete	equ	__end_of_fifo_delete-_fifo_delete
 10816  0029                     	
 10817                           _fifo_delete:	
 10818  15ED                     ;incstack = 0
 10819                           	opt	stack 2
 10820                           ; Regs used in _fifo_delete: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10821                           	line	145
 10822                           	
 10823                           l4705:	
 10824  15ED                     ;fifo.c: 145:     if(ind_fila)
 10825                           	bcf	status, 5	;RP0=0, select bank0
 10826  15ED  1283               	bcf	status, 6	;RP1=0, select bank0
 10827  15EE  1303               	movf	((_ind_fila)),w
 10828  15EF  0859               	btfsc	status,2
 10829  15F0  1903               	goto	u3881
 10830  15F1  2DF3               	goto	u3880
 10831  15F2  2DF4               u3881:
 10832  15F3                     	goto	l4715
 10833  15F3  2E10               u3880:
 10834  15F4                     	line	147
 10835                           	
 10836                           l4707:	
 10837  15F4                     ;fifo.c: 146:     {;fifo.c: 147:         if(ind_fila > 2)
 10838                           	movlw	low(03h)
 10839  15F4  3003               	subwf	(_ind_fila),w
 10840  15F5  0259               	skipc
 10841  15F6  1C03               	goto	u3891
 10842  15F7  2DF9               	goto	u3890
 10843  15F8  2DFA               u3891:
 10844  15F9                     	goto	l4711
 10845  15F9  2DFD               u3890:
 10846  15FA                     	line	148
 10847                           	
 10848                           l4709:	
 10849  15FA                     ;fifo.c: 148:             ind_fila--;
 10850                           	movlw	01h
 10851  15FA  3001               	subwf	(_ind_fila),f
 10852  15FB  02D9               	goto	l4711
 10853  15FC  2DFD               	
 10854                           l153:	
 10855  15FD                     	line	149
 10856                           	
 10857                           l4711:	
 10858  15FD                     ;fifo.c: 149:         alt_atuador(fila[ind_fila] & ~0x20);
 10859                           	movf	(_ind_fila),w
 10860  15FD  0859               	addlw	low(_fila|((0x1)<<8))&0ffh
 10861  15FE  3E90               	movwf	fsr0
 10862  15FF  0084               	bsf	status, 7	;select IRP bank3
 10863  1600  1783               	movf	indf,w
 10864  1601  0800               	andlw	0DFh
 10865  1602  39DF               	fcall	_alt_atuador
 10866  1603  160A  118A  27C6  160A  118A  	line	150
 10867                           	
 10868                           l4713:	
 10869  1608                     ;fifo.c: 150:         fila[ind_fila] = 0;
 10870                           	bcf	status, 5	;RP0=0, select bank0
 10871  1608  1283               	bcf	status, 6	;RP1=0, select bank0
 10872  1609  1303               	movf	(_ind_fila),w
 10873  160A  0859               	addlw	low(_fila|((0x1)<<8))&0ffh
 10874  160B  3E90               	movwf	fsr0
 10875  160C  0084               	bsf	status, 7	;select IRP bank3
 10876  160D  1783               	clrf	indf
 10877  160E  0180               	goto	l4715
 10878  160F  2E10               	line	151
 10879                           ;fifo.c: 151:     }
 10880                           	
 10881                           l152:	
 10882  1610                     	line	152
 10883                           	
 10884                           l4715:	
 10885  1610                     ;fifo.c: 152:     fifo_alinharPrint();
 10886                           	fcall	_fifo_alinharPrint
 10887  1610  120A  118A  2690  160A  118A  	line	153
 10888                           	
 10889                           l154:	
 10890  1615                     	return
 10891  1615  0008               	opt stack 0
 10892                           GLOBAL	__end_of_fifo_delete
 10893                           	__end_of_fifo_delete:
 10894  1616                     	signat	_fifo_delete,89
 10895                           	global	_alt_atuador
 10896                           
 10897 ;; *************** function _alt_atuador *****************
 10898 ;; Defined at:
 10899 ;;		line 92 in file "fifo.c"
 10900 ;; Parameters:    Size  Location     Type
 10901 ;;  tecla           1    wreg     unsigned char 
 10902 ;; Auto vars:     Size  Location     Type
 10903 ;;  tecla           1    2[BANK0 ] unsigned char 
 10904 ;; Return value:  Size  Location     Type
 10905 ;;                  1    wreg      void 
 10906 ;; Registers used:
 10907 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10908 ;; Tracked objects:
 10909 ;;		On entry : 0/0
 10910 ;;		On exit  : 0/0
 10911 ;;		Unchanged: 0/0
 10912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10913 ;;      Params:         0       0       0       0       0
 10914 ;;      Locals:         0       1       0       0       0
 10915 ;;      Temps:          0       2       0       0       0
 10916 ;;      Totals:         0       3       0       0       0
 10917 ;;Total ram usage:        3 bytes
 10918 ;; Hardware stack levels used:    1
 10919 ;; Hardware stack levels required when called:    2
 10920 ;; This function calls:
 10921 ;;		Nothing
 10922 ;; This function is called by:
 10923 ;;		_fifo_delete
 10924 ;;		_main
 10925 ;; This function uses a non-reentrant model
 10926 ;;
 10927                           psect	text32,local,class=CODE,delta=2,merge=1,group=0
 10928                           	line	92
 10929                           global __ptext32
 10930                           __ptext32:	;psect for function _alt_atuador
 10931  17C6                     psect	text32
 10932                           	file	"fifo.c"
 10933                           	line	92
 10934                           	global	__size_of_alt_atuador
 10935                           	__size_of_alt_atuador	equ	__end_of_alt_atuador-_alt_atuador
 10936  003A                     	
 10937                           _alt_atuador:	
 10938  17C6                     ;incstack = 0
 10939                           	opt	stack 4
 10940                           ; Regs used in _alt_atuador: [wreg-fsr0h+status,2+status,0]
 10941                           ;alt_atuador@tecla stored from wreg
 10942                           	bcf	status, 5	;RP0=0, select bank0
 10943  17C6  1283               	bcf	status, 6	;RP1=0, select bank0
 10944  17C7  1303               	movwf	(alt_atuador@tecla)
 10945  17C8  00A2               	line	94
 10946                           	
 10947                           l4489:	
 10948  17C9                     ;fifo.c: 92: void alt_atuador( char tecla );fifo.c: 93: {;fifo.c: 94:     switch(tecla)

 10949                           	goto	l4493
 10950  17C9  2FE7               	line	96
 10951                           ;fifo.c: 95:     {;fifo.c: 96:         case 'A': atuador.A = atuador.A ^ 1; break;
 10952                           	
 10953                           l127:	
 10954  17CA                     	btfss	(_atuador),0
 10955  17CA  1C7A               	goto	u3571
 10956  17CB  2FCD               	goto	u3570
 10957  17CC  2FCF               	
 10958                           u3571:
 10959  17CD                     	bsf	(_atuador),0
 10960  17CD  147A               	goto	u3584
 10961  17CE  2FD0               u3570:
 10962  17CF                     	bcf	(_atuador),0
 10963  17CF  107A               u3584:
 10964  17D0                     	goto	l132
 10965  17D0  2FFF               	line	97
 10966                           ;fifo.c: 97:         case 'B': atuador.B = atuador.B ^ 1; break;
 10967                           	
 10968                           l129:	
 10969  17D1                     	btfss	(_atuador),1
 10970  17D1  1CFA               	goto	u3591
 10971  17D2  2FD4               	goto	u3590
 10972  17D3  2FD6               	
 10973                           u3591:
 10974  17D4                     	bsf	(_atuador),1
 10975  17D4  14FA               	goto	u3604
 10976  17D5  2FD7               u3590:
 10977  17D6                     	bcf	(_atuador),1
 10978  17D6  10FA               u3604:
 10979  17D7                     	goto	l132
 10980  17D7  2FFF               	line	98
 10981                           ;fifo.c: 98:         case 'C': atuador.C = atuador.C ^ 1; break;
 10982                           	
 10983                           l130:	
 10984  17D8                     	btfss	(_atuador),2
 10985  17D8  1D7A               	goto	u3611
 10986  17D9  2FDB               	goto	u3610
 10987  17DA  2FDD               	
 10988                           u3611:
 10989  17DB                     	bsf	(_atuador),2
 10990  17DB  157A               	goto	u3624
 10991  17DC  2FDE               u3610:
 10992  17DD                     	bcf	(_atuador),2
 10993  17DD  117A               u3624:
 10994  17DE                     	goto	l132
 10995  17DE  2FFF               	line	99
 10996                           ;fifo.c: 99:         case 'D': atuador.D = atuador.D ^ 1; break;
 10997                           	
 10998                           l131:	
 10999  17DF                     	btfss	(_atuador),3
 11000  17DF  1DFA               	goto	u3631
 11001  17E0  2FE2               	goto	u3630
 11002  17E1  2FE4               	
 11003                           u3631:
 11004  17E2                     	bsf	(_atuador),3
 11005  17E2  15FA               	goto	u3644
 11006  17E3  2FE5               u3630:
 11007  17E4                     	bcf	(_atuador),3
 11008  17E4  11FA               u3644:
 11009  17E5                     	goto	l132
 11010  17E5  2FFF               	line	100
 11011                           	
 11012                           l4491:	
 11013  17E6                     ;fifo.c: 100:     }
 11014                           	goto	l132
 11015  17E6  2FFF               	
 11016                           l126:	
 11017  17E7                     	
 11018                           l4493:	
 11019  17E7                     	bcf	status, 5	;RP0=0, select bank0
 11020  17E7  1283               	bcf	status, 6	;RP1=0, select bank0
 11021  17E8  1303               	movf	(alt_atuador@tecla),w
 11022  17E9  0822               	movwf	(??_alt_atuador+0)+0
 11023  17EA  00A0               	clrf	(??_alt_atuador+0)+0+1
 11024  17EB  01A1               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 11025                           ; Switch size 1, requested type "space"
 11026                           ; Number of cases is 1, Range of values is 0 to 0
 11027                           ; switch strategies available:
 11028                           ; Name         Instructions Cycles
 11029                           ; simple_byte            4     3 (average)
 11030                           ; direct_byte           11     8 (fixed)
 11031                           ; jumptable            260     6 (fixed)
 11032                           ;	Chosen strategy is simple_byte
 11033                           
 11034                           	movf 1+(??_alt_atuador+0)+0,w
 11035  17EC  0821               	opt asmopt_push
 11036                           	opt asmopt_off
 11037                           	xorlw	0^0	; case 0
 11038  17ED  3A00               	skipnz
 11039  17EE  1903               	goto	l5803
 11040  17EF  2FF1               	goto	l132
 11041  17F0  2FFF               	opt asmopt_pop
 11042                           	
 11043                           l5803:	
 11044  17F1                     ; Switch size 1, requested type "space"
 11045                           ; Number of cases is 4, Range of values is 65 to 68
 11046                           ; switch strategies available:
 11047                           ; Name         Instructions Cycles
 11048                           ; simple_byte           13     7 (average)
 11049                           ; direct_byte           23    11 (fixed)
 11050                           ; jumptable            263     9 (fixed)
 11051                           ;	Chosen strategy is simple_byte
 11052                           
 11053                           	movf 0+(??_alt_atuador+0)+0,w
 11054  17F1  0820               	opt asmopt_push
 11055                           	opt asmopt_off
 11056                           	xorlw	65^0	; case 65
 11057  17F2  3A41               	skipnz
 11058  17F3  1903               	goto	l127
 11059  17F4  2FCA               	xorlw	66^65	; case 66
 11060  17F5  3A03               	skipnz
 11061  17F6  1903               	goto	l129
 11062  17F7  2FD1               	xorlw	67^66	; case 67
 11063  17F8  3A01               	skipnz
 11064  17F9  1903               	goto	l130
 11065  17FA  2FD8               	xorlw	68^67	; case 68
 11066  17FB  3A07               	skipnz
 11067  17FC  1903               	goto	l131
 11068  17FD  2FDF               	goto	l132
 11069  17FE  2FFF               	opt asmopt_pop
 11070                           
 11071                           	
 11072                           l128:	
 11073  17FF                     	line	101
 11074                           	
 11075                           l132:	
 11076  17FF                     	return
 11077  17FF  0008               	opt stack 0
 11078                           GLOBAL	__end_of_alt_atuador
 11079                           	__end_of_alt_atuador:
 11080  1800                     	signat	_alt_atuador,4217
 11081                           	global	_fifo_add_tempo
 11082                           
 11083 ;; *************** function _fifo_add_tempo *****************
 11084 ;; Defined at:
 11085 ;;		line 169 in file "fifo.c"
 11086 ;; Parameters:    Size  Location     Type
 11087 ;;  t               1    wreg     const unsigned char 
 11088 ;; Auto vars:     Size  Location     Type
 11089 ;;  t               1   20[BANK0 ] const unsigned char 
 11090 ;; Return value:  Size  Location     Type
 11091 ;;                  1    wreg      void 
 11092 ;; Registers used:
 11093 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11094 ;; Tracked objects:
 11095 ;;		On entry : 0/0
 11096 ;;		On exit  : 0/0
 11097 ;;		Unchanged: 0/0
 11098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11099 ;;      Params:         0       0       0       0       0
 11100 ;;      Locals:         0       1       0       0       0
 11101 ;;      Temps:          0       1       0       0       0
 11102 ;;      Totals:         0       2       0       0       0
 11103 ;;Total ram usage:        2 bytes
 11104 ;; Hardware stack levels used:    1
 11105 ;; Hardware stack levels required when called:    5
 11106 ;; This function calls:
 11107 ;;		_fifo_alinharPrint
 11108 ;; This function is called by:
 11109 ;;		_main
 11110 ;; This function uses a non-reentrant model
 11111 ;;
 11112                           psect	text33,local,class=CODE,delta=2,merge=1,group=0
 11113                           	line	169
 11114                           global __ptext33
 11115                           __ptext33:	;psect for function _fifo_add_tempo
 11116  15C6                     psect	text33
 11117                           	file	"fifo.c"
 11118                           	line	169
 11119                           	global	__size_of_fifo_add_tempo
 11120                           	__size_of_fifo_add_tempo	equ	__end_of_fifo_add_tempo-_fifo_add_tempo
 11121  0027                     	
 11122                           _fifo_add_tempo:	
 11123  15C6                     ;incstack = 0
 11124                           	opt	stack 2
 11125                           ; Regs used in _fifo_add_tempo: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11126                           ;fifo_add_tempo@t stored from wreg
 11127                           	bcf	status, 5	;RP0=0, select bank0
 11128  15C6  1283               	bcf	status, 6	;RP1=0, select bank0
 11129  15C7  1303               	movwf	(fifo_add_tempo@t)
 11130  15C8  00B4               	line	171
 11131                           	
 11132                           l4729:	
 11133  15C9                     ;fifo.c: 169: void fifo_add_tempo(const char t);fifo.c: 170: {;fifo.c: 171:     if(ind_f
                                 ila < 62)
 11134                           	movlw	low(03Eh)
 11135  15C9  303E               	subwf	(_ind_fila),w
 11136  15CA  0259               	skipnc
 11137  15CB  1803               	goto	u3921
 11138  15CC  2DCE               	goto	u3920
 11139  15CD  2DCF               u3921:
 11140  15CE                     	goto	l4739
 11141  15CE  2DE7               u3920:
 11142  15CF                     	line	173
 11143                           	
 11144                           l4731:	
 11145  15CF                     ;fifo.c: 172:     {;fifo.c: 173:         if(t)
 11146                           	movf	((fifo_add_tempo@t)),w
 11147  15CF  0834               	btfsc	status,2
 11148  15D0  1903               	goto	u3931
 11149  15D1  2DD3               	goto	u3930
 11150  15D2  2DD4               u3931:
 11151  15D3                     	goto	l4739
 11152  15D3  2DE7               u3930:
 11153  15D4                     	line	175
 11154                           	
 11155                           l4733:	
 11156  15D4                     ;fifo.c: 174:         {;fifo.c: 175:             fila[ind_fila] = t | 0x80;
 11157                           	movf	(fifo_add_tempo@t),w
 11158  15D4  0834               	iorlw	080h
 11159  15D5  3880               	movwf	(??_fifo_add_tempo+0)+0
 11160  15D6  00B3               	movf	(_ind_fila),w
 11161  15D7  0859               	addlw	low(_fila|((0x1)<<8))&0ffh
 11162  15D8  3E90               	movwf	fsr0
 11163  15D9  0084               	movf	(??_fifo_add_tempo+0)+0,w
 11164  15DA  0833               	bsf	status, 7	;select IRP bank3
 11165  15DB  1783               	movwf	indf
 11166  15DC  0080               	line	176
 11167                           	
 11168                           l4735:	
 11169  15DD                     ;fifo.c: 176:             ind_fila++;
 11170                           	movlw	low(01h)
 11171  15DD  3001               	movwf	(??_fifo_add_tempo+0)+0
 11172  15DE  00B3               	movf	(??_fifo_add_tempo+0)+0,w
 11173  15DF  0833               	addwf	(_ind_fila),f
 11174  15E0  07D9               	line	177
 11175                           	
 11176                           l4737:	
 11177  15E1                     ;fifo.c: 177:             fila[ind_fila] = 0;
 11178                           	movf	(_ind_fila),w
 11179  15E1  0859               	addlw	low(_fila|((0x1)<<8))&0ffh
 11180  15E2  3E90               	movwf	fsr0
 11181  15E3  0084               	clrf	indf
 11182  15E4  0180               	goto	l4739
 11183  15E5  2DE7               	line	178
 11184                           ;fifo.c: 178:         }
 11185                           	
 11186                           l163:	
 11187  15E6                     	goto	l4739
 11188  15E6  2DE7               	line	179
 11189                           ;fifo.c: 179:     }
 11190                           	
 11191                           l162:	
 11192  15E7                     	line	180
 11193                           	
 11194                           l4739:	
 11195  15E7                     ;fifo.c: 180:     fifo_alinharPrint();
 11196                           	fcall	_fifo_alinharPrint
 11197  15E7  120A  118A  2690  160A  118A  	line	181
 11198                           	
 11199                           l164:	
 11200  15EC                     	return
 11201  15EC  0008               	opt stack 0
 11202                           GLOBAL	__end_of_fifo_add_tempo
 11203                           	__end_of_fifo_add_tempo:
 11204  15ED                     	signat	_fifo_add_tempo,4217
 11205                           	global	_fifo_add_ciclo
 11206                           
 11207 ;; *************** function _fifo_add_ciclo *****************
 11208 ;; Defined at:
 11209 ;;		line 183 in file "fifo.c"
 11210 ;; Parameters:    Size  Location     Type
 11211 ;;  ciclos          2    0[BANK0 ] unsigned int 
 11212 ;; Auto vars:     Size  Location     Type
 11213 ;;		None
 11214 ;; Return value:  Size  Location     Type
 11215 ;;                  1    wreg      void 
 11216 ;; Registers used:
 11217 ;;		wreg, status,2
 11218 ;; Tracked objects:
 11219 ;;		On entry : 0/0
 11220 ;;		On exit  : 0/0
 11221 ;;		Unchanged: 0/0
 11222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11223 ;;      Params:         0       2       0       0       0
 11224 ;;      Locals:         0       0       0       0       0
 11225 ;;      Temps:          0       1       0       0       0
 11226 ;;      Totals:         0       3       0       0       0
 11227 ;;Total ram usage:        3 bytes
 11228 ;; Hardware stack levels used:    1
 11229 ;; Hardware stack levels required when called:    2
 11230 ;; This function calls:
 11231 ;;		Nothing
 11232 ;; This function is called by:
 11233 ;;		_main
 11234 ;; This function uses a non-reentrant model
 11235 ;;
 11236                           psect	text34,local,class=CODE,delta=2,merge=1,group=0
 11237                           	line	183
 11238                           global __ptext34
 11239                           __ptext34:	;psect for function _fifo_add_ciclo
 11240  1450                     psect	text34
 11241                           	file	"fifo.c"
 11242                           	line	183
 11243                           	global	__size_of_fifo_add_ciclo
 11244                           	__size_of_fifo_add_ciclo	equ	__end_of_fifo_add_ciclo-_fifo_add_ciclo
 11245  0011                     	
 11246                           _fifo_add_ciclo:	
 11247  1450                     ;incstack = 0
 11248                           	opt	stack 5
 11249                           ; Regs used in _fifo_add_ciclo: [wreg+status,2]
 11250                           	line	185
 11251                           	
 11252                           l4741:	
 11253  1450                     ;fifo.c: 183: void fifo_add_ciclo(unsigned int ciclos);fifo.c: 184: {;fifo.c: 185:     f
                                 ila[0] = ciclos & 0x00ff;
 11254                           	bcf	status, 5	;RP0=0, select bank0
 11255  1450  1283               	bcf	status, 6	;RP1=0, select bank0
 11256  1451  1303               	movf	(fifo_add_ciclo@ciclos),w
 11257  1452  0820               	movwf	(??_fifo_add_ciclo+0)+0
 11258  1453  00A2               	movf	(??_fifo_add_ciclo+0)+0,w
 11259  1454  0822               	bsf	status, 5	;RP0=1, select bank3
 11260  1455  1683               	bsf	status, 6	;RP1=1, select bank3
 11261  1456  1703               	movwf	(_fila)^0180h
 11262  1457  0090               	line	186
 11263                           	
 11264                           l4743:	
 11265  1458                     ;fifo.c: 186:     fila[1] = ciclos >> 8;
 11266                           	bcf	status, 5	;RP0=0, select bank0
 11267  1458  1283               	bcf	status, 6	;RP1=0, select bank0
 11268  1459  1303               	movf	(fifo_add_ciclo@ciclos+1),w
 11269  145A  0821               	movwf	(??_fifo_add_ciclo+0)+0
 11270  145B  00A2               	movf	(??_fifo_add_ciclo+0)+0,w
 11271  145C  0822               	bsf	status, 5	;RP0=1, select bank3
 11272  145D  1683               	bsf	status, 6	;RP1=1, select bank3
 11273  145E  1703               	movwf	0+(_fila)^0180h+01h
 11274  145F  0091               	line	187
 11275                           	
 11276                           l167:	
 11277  1460                     	return
 11278  1460  0008               	opt stack 0
 11279                           GLOBAL	__end_of_fifo_add_ciclo
 11280                           	__end_of_fifo_add_ciclo:
 11281  1461                     	signat	_fifo_add_ciclo,4217
 11282                           	global	_fifo_add
 11283                           
 11284 ;; *************** function _fifo_add *****************
 11285 ;; Defined at:
 11286 ;;		line 155 in file "fifo.c"
 11287 ;; Parameters:    Size  Location     Type
 11288 ;;  passo           1    wreg     const unsigned char 
 11289 ;; Auto vars:     Size  Location     Type
 11290 ;;  passo           1   20[BANK0 ] const unsigned char 
 11291 ;; Return value:  Size  Location     Type
 11292 ;;                  1    wreg      void 
 11293 ;; Registers used:
 11294 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11295 ;; Tracked objects:
 11296 ;;		On entry : 0/0
 11297 ;;		On exit  : 0/0
 11298 ;;		Unchanged: 0/0
 11299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11300 ;;      Params:         0       0       0       0       0
 11301 ;;      Locals:         0       1       0       0       0
 11302 ;;      Temps:          0       1       0       0       0
 11303 ;;      Totals:         0       2       0       0       0
 11304 ;;Total ram usage:        2 bytes
 11305 ;; Hardware stack levels used:    1
 11306 ;; Hardware stack levels required when called:    5
 11307 ;; This function calls:
 11308 ;;		_fifo_alinharPrint
 11309 ;; This function is called by:
 11310 ;;		_main
 11311 ;; This function uses a non-reentrant model
 11312 ;;
 11313                           psect	text35,local,class=CODE,delta=2,merge=1,group=0
 11314                           	line	155
 11315                           global __ptext35
 11316                           __ptext35:	;psect for function _fifo_add
 11317  15A0                     psect	text35
 11318                           	file	"fifo.c"
 11319                           	line	155
 11320                           	global	__size_of_fifo_add
 11321                           	__size_of_fifo_add	equ	__end_of_fifo_add-_fifo_add
 11322  0026                     	
 11323                           _fifo_add:	
 11324  15A0                     ;incstack = 0
 11325                           	opt	stack 2
 11326                           ; Regs used in _fifo_add: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11327                           ;fifo_add@passo stored from wreg
 11328                           	bcf	status, 5	;RP0=0, select bank0
 11329  15A0  1283               	bcf	status, 6	;RP1=0, select bank0
 11330  15A1  1303               	movwf	(fifo_add@passo)
 11331  15A2  00B4               	line	157
 11332                           	
 11333                           l4717:	
 11334  15A3                     ;fifo.c: 155: void fifo_add(const char passo);fifo.c: 156: {;fifo.c: 157:     if(ind_fil
                                 a < 62)
 11335                           	movlw	low(03Eh)
 11336  15A3  303E               	subwf	(_ind_fila),w
 11337  15A4  0259               	skipnc
 11338  15A5  1803               	goto	u3901
 11339  15A6  2DA8               	goto	u3900
 11340  15A7  2DA9               u3901:
 11341  15A8                     	goto	l4727
 11342  15A8  2DC0               u3900:
 11343  15A9                     	line	159
 11344                           	
 11345                           l4719:	
 11346  15A9                     ;fifo.c: 158:     {;fifo.c: 159:         if(passo)
 11347                           	movf	((fifo_add@passo)),w
 11348  15A9  0834               	btfsc	status,2
 11349  15AA  1903               	goto	u3911
 11350  15AB  2DAD               	goto	u3910
 11351  15AC  2DAE               u3911:
 11352  15AD                     	goto	l4727
 11353  15AD  2DC0               u3910:
 11354  15AE                     	line	161
 11355                           	
 11356                           l4721:	
 11357  15AE                     ;fifo.c: 160:         {;fifo.c: 161:             fila[ind_fila] = passo;
 11358                           	movf	(fifo_add@passo),w
 11359  15AE  0834               	movwf	(??_fifo_add+0)+0
 11360  15AF  00B3               	movf	(_ind_fila),w
 11361  15B0  0859               	addlw	low(_fila|((0x1)<<8))&0ffh
 11362  15B1  3E90               	movwf	fsr0
 11363  15B2  0084               	movf	(??_fifo_add+0)+0,w
 11364  15B3  0833               	bsf	status, 7	;select IRP bank3
 11365  15B4  1783               	movwf	indf
 11366  15B5  0080               	line	162
 11367                           	
 11368                           l4723:	
 11369  15B6                     ;fifo.c: 162:             ind_fila++;
 11370                           	movlw	low(01h)
 11371  15B6  3001               	movwf	(??_fifo_add+0)+0
 11372  15B7  00B3               	movf	(??_fifo_add+0)+0,w
 11373  15B8  0833               	addwf	(_ind_fila),f
 11374  15B9  07D9               	line	163
 11375                           	
 11376                           l4725:	
 11377  15BA                     ;fifo.c: 163:             fila[ind_fila] = 0;
 11378                           	movf	(_ind_fila),w
 11379  15BA  0859               	addlw	low(_fila|((0x1)<<8))&0ffh
 11380  15BB  3E90               	movwf	fsr0
 11381  15BC  0084               	clrf	indf
 11382  15BD  0180               	goto	l4727
 11383  15BE  2DC0               	line	164
 11384                           ;fifo.c: 164:         }
 11385                           	
 11386                           l158:	
 11387  15BF                     	goto	l4727
 11388  15BF  2DC0               	line	165
 11389                           ;fifo.c: 165:     }
 11390                           	
 11391                           l157:	
 11392  15C0                     	line	166
 11393                           	
 11394                           l4727:	
 11395  15C0                     ;fifo.c: 166:     fifo_alinharPrint();
 11396                           	fcall	_fifo_alinharPrint
 11397  15C0  120A  118A  2690  160A  118A  	line	167
 11398                           	
 11399                           l159:	
 11400  15C5                     	return
 11401  15C5  0008               	opt stack 0
 11402                           GLOBAL	__end_of_fifo_add
 11403                           	__end_of_fifo_add:
 11404  15C6                     	signat	_fifo_add,4217
 11405                           	global	_fifo_alinharPrint
 11406                           
 11407 ;; *************** function _fifo_alinharPrint *****************
 11408 ;; Defined at:
 11409 ;;		line 323 in file "fifo.c"
 11410 ;; Parameters:    Size  Location     Type
 11411 ;;		None
 11412 ;; Auto vars:     Size  Location     Type
 11413 ;;  i               1   18[BANK0 ] unsigned char 
 11414 ;;  aux             1   17[BANK0 ] unsigned char 
 11415 ;;  cont            1   16[BANK0 ] unsigned char 
 11416 ;; Return value:  Size  Location     Type
 11417 ;;                  1    wreg      void 
 11418 ;; Registers used:
 11419 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11420 ;; Tracked objects:
 11421 ;;		On entry : 0/0
 11422 ;;		On exit  : 0/0
 11423 ;;		Unchanged: 0/0
 11424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11425 ;;      Params:         0       0       0       0       0
 11426 ;;      Locals:         0       3       0       0       0
 11427 ;;      Temps:          0       3       0       0       0
 11428 ;;      Totals:         0       6       0       0       0
 11429 ;;Total ram usage:        6 bytes
 11430 ;; Hardware stack levels used:    1
 11431 ;; Hardware stack levels required when called:    4
 11432 ;; This function calls:
 11433 ;;		_dignum_tam
 11434 ;; This function is called by:
 11435 ;;		_fifo_delete
 11436 ;;		_fifo_add
 11437 ;;		_fifo_add_tempo
 11438 ;; This function uses a non-reentrant model
 11439 ;;
 11440                           psect	text36,local,class=CODE,delta=2,merge=1,group=0
 11441                           	line	323
 11442                           global __ptext36
 11443                           __ptext36:	;psect for function _fifo_alinharPrint
 11444  0690                     psect	text36
 11445                           	file	"fifo.c"
 11446                           	line	323
 11447                           	global	__size_of_fifo_alinharPrint
 11448                           	__size_of_fifo_alinharPrint	equ	__end_of_fifo_alinharPrint-_fifo_alinharPrint
 11449  005A                     	
 11450                           _fifo_alinharPrint:	
 11451  0690                     ;incstack = 0
 11452                           	opt	stack 2
 11453                           ; Regs used in _fifo_alinharPrint: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11454                           	line	327
 11455                           	
 11456                           l4501:	
 11457  0690                     ;fifo.c: 325:     unsigned char i;;fifo.c: 326:     unsigned char aux;;fifo.c: 327:     
                                 unsigned char cont = 0;
 11458                           	bcf	status, 5	;RP0=0, select bank0
 11459  0690  1283               	bcf	status, 6	;RP1=0, select bank0
 11460  0691  1303               	clrf	(fifo_alinharPrint@cont)
 11461  0692  01B0               	line	329
 11462                           	
 11463                           l4503:	
 11464  0693                     ;fifo.c: 329:     for( i=ind_fila-1; i>=2; i-- )
 11465                           	movf	(_ind_fila),w
 11466  0693  0859               	addlw	0FFh
 11467  0694  3EFF               	movwf	(??_fifo_alinharPrint+0)+0
 11468  0695  00AD               	movf	(??_fifo_alinharPrint+0)+0,w
 11469  0696  082D               	movwf	(fifo_alinharPrint@i)
 11470  0697  00B2               	
 11471                           l4505:	
 11472  0698                     	movlw	low(02h)
 11473  0698  3002               	subwf	(fifo_alinharPrint@i),w
 11474  0699  0232               	skipnc
 11475  069A  1803               	goto	u3651
 11476  069B  2E9D               	goto	u3650
 11477  069C  2E9E               u3651:
 11478  069D                     	goto	l4509
 11479  069D  2EA0               u3650:
 11480  069E                     	goto	l237
 11481  069E  2EE9               	
 11482                           l4507:	
 11483  069F                     	goto	l237
 11484  069F  2EE9               	
 11485                           l230:	
 11486  06A0                     	line	331
 11487                           	
 11488                           l4509:	
 11489  06A0                     ;fifo.c: 330:     {;fifo.c: 331:         aux = fila[i];
 11490                           	movf	(fifo_alinharPrint@i),w
 11491  06A0  0832               	addlw	low(_fila|((0x1)<<8))&0ffh
 11492  06A1  3E90               	movwf	fsr0
 11493  06A2  0084               	bsf	status, 7	;select IRP bank3
 11494  06A3  1783               	movf	indf,w
 11495  06A4  0800               	movwf	(??_fifo_alinharPrint+0)+0
 11496  06A5  00AD               	movf	(??_fifo_alinharPrint+0)+0,w
 11497  06A6  082D               	movwf	(fifo_alinharPrint@aux)
 11498  06A7  00B1               	line	332
 11499                           	
 11500                           l4511:	
 11501  06A8                     ;fifo.c: 332:         if( aux & 0x80 )
 11502                           	btfss	(fifo_alinharPrint@aux),(7)&7
 11503  06A8  1FB1               	goto	u3661
 11504  06A9  2EAB               	goto	u3660
 11505  06AA  2EAC               u3661:
 11506  06AB                     	goto	l4515
 11507  06AB  2EC0               u3660:
 11508  06AC                     	line	334
 11509                           	
 11510                           l4513:	
 11511  06AC                     ;fifo.c: 333:         {;fifo.c: 334:             cont += dignum_tam( aux & 0x7F )+1;
 11512                           	movf	(fifo_alinharPrint@aux),w
 11513  06AC  0831               	andlw	07Fh
 11514  06AD  397F               	movwf	(??_fifo_alinharPrint+0)+0
 11515  06AE  00AD               	clrf	(??_fifo_alinharPrint+0)+0+1
 11516  06AF  01AE               	movf	0+(??_fifo_alinharPrint+0)+0,w
 11517  06B0  082D               	movwf	(dignum_tam@num)
 11518  06B1  00A9               	movf	1+(??_fifo_alinharPrint+0)+0,w
 11519  06B2  082E               	movwf	(dignum_tam@num+1)
 11520  06B3  00AA               	fcall	_dignum_tam
 11521  06B4  160A  118A  257A  120A  118A  	addlw	01h
 11522  06B9  3E01               	bcf	status, 5	;RP0=0, select bank0
 11523  06BA  1283               	bcf	status, 6	;RP1=0, select bank0
 11524  06BB  1303               	movwf	(??_fifo_alinharPrint+2)+0
 11525  06BC  00AF               	movf	(??_fifo_alinharPrint+2)+0,w
 11526  06BD  082F               	addwf	(fifo_alinharPrint@cont),f
 11527  06BE  07B0               	line	335
 11528                           ;fifo.c: 335:         }
 11529                           	goto	l4521
 11530  06BF  2ED2               	line	336
 11531                           ;fifo.c: 336:         else if( aux >= 'A' && aux <= 'z' )
 11532                           	
 11533                           l232:	
 11534  06C0                     	
 11535                           l4515:	
 11536  06C0                     	movlw	low(041h)
 11537  06C0  3041               	subwf	(fifo_alinharPrint@aux),w
 11538  06C1  0231               	skipc
 11539  06C2  1C03               	goto	u3671
 11540  06C3  2EC5               	goto	u3670
 11541  06C4  2EC6               u3671:
 11542  06C5                     	goto	l4521
 11543  06C5  2ED2               u3670:
 11544  06C6                     	
 11545                           l4517:	
 11546  06C6                     	movlw	low(07Bh)
 11547  06C6  307B               	subwf	(fifo_alinharPrint@aux),w
 11548  06C7  0231               	skipnc
 11549  06C8  1803               	goto	u3681
 11550  06C9  2ECB               	goto	u3680
 11551  06CA  2ECC               u3681:
 11552  06CB                     	goto	l4521
 11553  06CB  2ED2               u3680:
 11554  06CC                     	line	338
 11555                           	
 11556                           l4519:	
 11557  06CC                     ;fifo.c: 337:         {;fifo.c: 338:             cont += 2;
 11558                           	movlw	low(02h)
 11559  06CC  3002               	movwf	(??_fifo_alinharPrint+0)+0
 11560  06CD  00AD               	movf	(??_fifo_alinharPrint+0)+0,w
 11561  06CE  082D               	addwf	(fifo_alinharPrint@cont),f
 11562  06CF  07B0               	goto	l4521
 11563  06D0  2ED2               	line	339
 11564                           ;fifo.c: 339:         }
 11565                           	
 11566                           l234:	
 11567  06D1                     	goto	l4521
 11568  06D1  2ED2               	
 11569                           l233:	
 11570  06D2                     	line	341
 11571                           	
 11572                           l4521:	
 11573  06D2                     ;fifo.c: 341:         if( cont > 16 )
 11574                           	movlw	low(011h)
 11575  06D2  3011               	subwf	(fifo_alinharPrint@cont),w
 11576  06D3  0230               	skipc
 11577  06D4  1C03               	goto	u3691
 11578  06D5  2ED7               	goto	u3690
 11579  06D6  2ED8               u3691:
 11580  06D7                     	goto	l4527
 11581  06D7  2EDB               u3690:
 11582  06D8                     	goto	l237
 11583  06D8  2EE9               	line	343
 11584                           	
 11585                           l4523:	
 11586  06D9                     ;fifo.c: 342:         {;fifo.c: 343:             break;
 11587                           	goto	l237
 11588  06D9  2EE9               	line	344
 11589                           	
 11590                           l4525:	
 11591  06DA                     ;fifo.c: 344:         }
 11592                           	goto	l4529
 11593  06DA  2EE0               	line	345
 11594                           ;fifo.c: 345:         else
 11595                           	
 11596                           l235:	
 11597  06DB                     	line	346
 11598                           	
 11599                           l4527:	
 11600  06DB                     ;fifo.c: 346:             ind_print = i;
 11601                           	movf	(fifo_alinharPrint@i),w
 11602  06DB  0832               	movwf	(??_fifo_alinharPrint+0)+0
 11603  06DC  00AD               	movf	(??_fifo_alinharPrint+0)+0,w
 11604  06DD  082D               	movwf	(_ind_print)
 11605  06DE  00D8               	goto	l4529
 11606  06DF  2EE0               	
 11607                           l236:	
 11608  06E0                     	line	347
 11609                           	
 11610                           l4529:	
 11611  06E0                     ;fifo.c: 347:     }
 11612                           	movlw	01h
 11613  06E0  3001               	subwf	(fifo_alinharPrint@i),f
 11614  06E1  02B2               	
 11615                           l4531:	
 11616  06E2                     	movlw	low(02h)
 11617  06E2  3002               	subwf	(fifo_alinharPrint@i),w
 11618  06E3  0232               	skipnc
 11619  06E4  1803               	goto	u3701
 11620  06E5  2EE7               	goto	u3700
 11621  06E6  2EE8               u3701:
 11622  06E7                     	goto	l4509
 11623  06E7  2EA0               u3700:
 11624  06E8                     	goto	l237
 11625  06E8  2EE9               	
 11626                           l231:	
 11627  06E9                     	line	348
 11628                           	
 11629                           l237:	
 11630  06E9                     	return
 11631  06E9  0008               	opt stack 0
 11632                           GLOBAL	__end_of_fifo_alinharPrint
 11633                           	__end_of_fifo_alinharPrint:
 11634  06EA                     	signat	_fifo_alinharPrint,89
 11635                           	global	_dignum_tam
 11636                           
 11637 ;; *************** function _dignum_tam *****************
 11638 ;; Defined at:
 11639 ;;		line 311 in file "fifo.c"
 11640 ;; Parameters:    Size  Location     Type
 11641 ;;  num             2    9[BANK0 ] int 
 11642 ;; Auto vars:     Size  Location     Type
 11643 ;;  tam             1   12[BANK0 ] unsigned char 
 11644 ;; Return value:  Size  Location     Type
 11645 ;;                  1    wreg      unsigned char 
 11646 ;; Registers used:
 11647 ;;		wreg, status,2, status,0, pclath, cstack
 11648 ;; Tracked objects:
 11649 ;;		On entry : 0/0
 11650 ;;		On exit  : 0/0
 11651 ;;		Unchanged: 0/0
 11652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11653 ;;      Params:         0       2       0       0       0
 11654 ;;      Locals:         0       1       0       0       0
 11655 ;;      Temps:          0       1       0       0       0
 11656 ;;      Totals:         0       4       0       0       0
 11657 ;;Total ram usage:        4 bytes
 11658 ;; Hardware stack levels used:    1
 11659 ;; Hardware stack levels required when called:    3
 11660 ;; This function calls:
 11661 ;;		___awdiv
 11662 ;; This function is called by:
 11663 ;;		_fifo_alinharPrint
 11664 ;;		_printExec
 11665 ;; This function uses a non-reentrant model
 11666 ;;
 11667                           psect	text37,local,class=CODE,delta=2,merge=1,group=0
 11668                           	line	311
 11669                           global __ptext37
 11670                           __ptext37:	;psect for function _dignum_tam
 11671  157A                     psect	text37
 11672                           	file	"fifo.c"
 11673                           	line	311
 11674                           	global	__size_of_dignum_tam
 11675                           	__size_of_dignum_tam	equ	__end_of_dignum_tam-_dignum_tam
 11676  0026                     	
 11677                           _dignum_tam:	
 11678  157A                     ;incstack = 0
 11679                           	opt	stack 3
 11680                           ; Regs used in _dignum_tam: [wreg+status,2+status,0+pclath+cstack]
 11681                           	line	313
 11682                           	
 11683                           l4399:	
 11684  157A                     ;fifo.c: 311: unsigned char dignum_tam(int num);fifo.c: 312: {;fifo.c: 313:     unsigned
                                  char tam = 0;
 11685                           	bcf	status, 5	;RP0=0, select bank0
 11686  157A  1283               	bcf	status, 6	;RP1=0, select bank0
 11687  157B  1303               	clrf	(dignum_tam@tam)
 11688  157C  01AC               	line	315
 11689                           ;fifo.c: 315:     while(num != 0)
 11690                           	goto	l4405
 11691  157D  2D96               	
 11692                           l225:	
 11693  157E                     	line	317
 11694                           	
 11695                           l4401:	
 11696  157E                     ;fifo.c: 316:     {;fifo.c: 317:         num /= 10;
 11697                           	movlw	0Ah
 11698  157E  300A               	movwf	(___awdiv@divisor)
 11699  157F  00A0               	movlw	0
 11700  1580  3000               	movwf	((___awdiv@divisor))+1
 11701  1581  00A1               	movf	(dignum_tam@num+1),w
 11702  1582  082A               	movwf	(___awdiv@dividend+1)
 11703  1583  00A3               	movf	(dignum_tam@num),w
 11704  1584  0829               	movwf	(___awdiv@dividend)
 11705  1585  00A2               	fcall	___awdiv
 11706  1586  120A  118A  2492  160A  118A  	bcf	status, 5	;RP0=0, select bank0
 11707  158B  1283               	bcf	status, 6	;RP1=0, select bank0
 11708  158C  1303               	movf	(1+(?___awdiv)),w
 11709  158D  0821               	movwf	(dignum_tam@num+1)
 11710  158E  00AA               	movf	(0+(?___awdiv)),w
 11711  158F  0820               	movwf	(dignum_tam@num)
 11712  1590  00A9               	line	318
 11713                           	
 11714                           l4403:	
 11715  1591                     ;fifo.c: 318:         tam++;
 11716                           	movlw	low(01h)
 11717  1591  3001               	movwf	(??_dignum_tam+0)+0
 11718  1592  00AB               	movf	(??_dignum_tam+0)+0,w
 11719  1593  082B               	addwf	(dignum_tam@tam),f
 11720  1594  07AC               	goto	l4405
 11721  1595  2D96               	line	319
 11722                           ;fifo.c: 319:     }
 11723                           	
 11724                           l224:	
 11725  1596                     	line	315
 11726                           	
 11727                           l4405:	
 11728  1596                     ;fifo.c: 315:     while(num != 0)
 11729                           	movf	((dignum_tam@num)),w
 11730  1596  0829               iorwf	((dignum_tam@num+1)),w
 11731  1597  042A               	btfss	status,2
 11732  1598  1D03               	goto	u3371
 11733  1599  2D9B               	goto	u3370
 11734  159A  2D9C               u3371:
 11735  159B                     	goto	l4401
 11736  159B  2D7E               u3370:
 11737  159C                     	goto	l4407
 11738  159C  2D9D               	
 11739                           l226:	
 11740  159D                     	line	320
 11741                           	
 11742                           l4407:	
 11743  159D                     ;fifo.c: 320:     return ( tam );
 11744                           	movf	(dignum_tam@tam),w
 11745  159D  082C               	goto	l227
 11746  159E  2D9F               	
 11747                           l4409:	
 11748  159F                     	line	321
 11749                           	
 11750                           l227:	
 11751  159F                     	return
 11752  159F  0008               	opt stack 0
 11753                           GLOBAL	__end_of_dignum_tam
 11754                           	__end_of_dignum_tam:
 11755  15A0                     	signat	_dignum_tam,4217
 11756                           	global	___awdiv
 11757                           
 11758 ;; *************** function ___awdiv *****************
 11759 ;; Defined at:
 11760 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
 11761 ;; Parameters:    Size  Location     Type
 11762 ;;  divisor         2    0[BANK0 ] int 
 11763 ;;  dividend        2    2[BANK0 ] int 
 11764 ;; Auto vars:     Size  Location     Type
 11765 ;;  quotient        2    7[BANK0 ] int 
 11766 ;;  sign            1    6[BANK0 ] unsigned char 
 11767 ;;  counter         1    5[BANK0 ] unsigned char 
 11768 ;; Return value:  Size  Location     Type
 11769 ;;                  2    0[BANK0 ] int 
 11770 ;; Registers used:
 11771 ;;		wreg, status,2, status,0
 11772 ;; Tracked objects:
 11773 ;;		On entry : 0/0
 11774 ;;		On exit  : 0/0
 11775 ;;		Unchanged: 0/0
 11776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11777 ;;      Params:         0       4       0       0       0
 11778 ;;      Locals:         0       4       0       0       0
 11779 ;;      Temps:          0       1       0       0       0
 11780 ;;      Totals:         0       9       0       0       0
 11781 ;;Total ram usage:        9 bytes
 11782 ;; Hardware stack levels used:    1
 11783 ;; Hardware stack levels required when called:    2
 11784 ;; This function calls:
 11785 ;;		Nothing
 11786 ;; This function is called by:
 11787 ;;		_dispLCD_num
 11788 ;;		_fifo_print
 11789 ;;		_dignum_tam
 11790 ;; This function uses a non-reentrant model
 11791 ;;
 11792                           psect	text38,local,class=CODE,delta=2,merge=1,group=1
 11793                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
 11794                           	line	5
 11795                           global __ptext38
 11796                           __ptext38:	;psect for function ___awdiv
 11797  0492                     psect	text38
 11798                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
 11799                           	line	5
 11800                           	global	__size_of___awdiv
 11801                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 11802  0073                     	
 11803                           ___awdiv:	
 11804  0492                     ;incstack = 0
 11805                           	opt	stack 3
 11806                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11807                           	line	13
 11808                           	
 11809                           l4327:	
 11810  0492                     	bcf	status, 5	;RP0=0, select bank0
 11811  0492  1283               	bcf	status, 6	;RP1=0, select bank0
 11812  0493  1303               	clrf	(___awdiv@sign)
 11813  0494  01A6               	line	14
 11814                           	
 11815                           l4329:	
 11816  0495                     	btfss	(___awdiv@divisor+1),7
 11817  0495  1FA1               	goto	u3251
 11818  0496  2C98               	goto	u3250
 11819  0497  2C99               u3251:
 11820  0498                     	goto	l4335
 11821  0498  2CA1               u3250:
 11822  0499                     	line	15
 11823                           	
 11824                           l4331:	
 11825  0499                     	comf	(___awdiv@divisor),f
 11826  0499  09A0               	comf	(___awdiv@divisor+1),f
 11827  049A  09A1               	incf	(___awdiv@divisor),f
 11828  049B  0AA0               	skipnz
 11829  049C  1903               	incf	(___awdiv@divisor+1),f
 11830  049D  0AA1               	line	16
 11831                           	
 11832                           l4333:	
 11833  049E                     	clrf	(___awdiv@sign)
 11834  049E  01A6               	incf	(___awdiv@sign),f
 11835  049F  0AA6               	goto	l4335
 11836  04A0  2CA1               	line	17
 11837                           	
 11838                           l839:	
 11839  04A1                     	line	18
 11840                           	
 11841                           l4335:	
 11842  04A1                     	btfss	(___awdiv@dividend+1),7
 11843  04A1  1FA3               	goto	u3261
 11844  04A2  2CA4               	goto	u3260
 11845  04A3  2CA5               u3261:
 11846  04A4                     	goto	l4341
 11847  04A4  2CAF               u3260:
 11848  04A5                     	line	19
 11849                           	
 11850                           l4337:	
 11851  04A5                     	comf	(___awdiv@dividend),f
 11852  04A5  09A2               	comf	(___awdiv@dividend+1),f
 11853  04A6  09A3               	incf	(___awdiv@dividend),f
 11854  04A7  0AA2               	skipnz
 11855  04A8  1903               	incf	(___awdiv@dividend+1),f
 11856  04A9  0AA3               	line	20
 11857                           	
 11858                           l4339:	
 11859  04AA                     	movlw	low(01h)
 11860  04AA  3001               	movwf	(??___awdiv+0)+0
 11861  04AB  00A4               	movf	(??___awdiv+0)+0,w
 11862  04AC  0824               	xorwf	(___awdiv@sign),f
 11863  04AD  06A6               	goto	l4341
 11864  04AE  2CAF               	line	21
 11865                           	
 11866                           l840:	
 11867  04AF                     	line	22
 11868                           	
 11869                           l4341:	
 11870  04AF                     	clrf	(___awdiv@quotient)
 11871  04AF  01A7               	clrf	(___awdiv@quotient+1)
 11872  04B0  01A8               	line	23
 11873                           	
 11874                           l4343:	
 11875  04B1                     	movf	((___awdiv@divisor)),w
 11876  04B1  0820               iorwf	((___awdiv@divisor+1)),w
 11877  04B2  0421               	btfsc	status,2
 11878  04B3  1903               	goto	u3271
 11879  04B4  2CB6               	goto	u3270
 11880  04B5  2CB7               u3271:
 11881  04B6                     	goto	l4363
 11882  04B6  2CF4               u3270:
 11883  04B7                     	line	24
 11884                           	
 11885                           l4345:	
 11886  04B7                     	clrf	(___awdiv@counter)
 11887  04B7  01A5               	incf	(___awdiv@counter),f
 11888  04B8  0AA5               	line	25
 11889                           	goto	l4351
 11890  04B9  2CC6               	
 11891                           l843:	
 11892  04BA                     	line	26
 11893                           	
 11894                           l4347:	
 11895  04BA                     	movlw	01h
 11896  04BA  3001               	
 11897                           u3285:
 11898  04BB                     	clrc
 11899  04BB  1003               	rlf	(___awdiv@divisor),f
 11900  04BC  0DA0               	rlf	(___awdiv@divisor+1),f
 11901  04BD  0DA1               	addlw	-1
 11902  04BE  3EFF               	skipz
 11903  04BF  1D03               	goto	u3285
 11904  04C0  2CBB               	line	27
 11905                           	
 11906                           l4349:	
 11907  04C1                     	movlw	low(01h)
 11908  04C1  3001               	movwf	(??___awdiv+0)+0
 11909  04C2  00A4               	movf	(??___awdiv+0)+0,w
 11910  04C3  0824               	addwf	(___awdiv@counter),f
 11911  04C4  07A5               	goto	l4351
 11912  04C5  2CC6               	line	28
 11913                           	
 11914                           l842:	
 11915  04C6                     	line	25
 11916                           	
 11917                           l4351:	
 11918  04C6                     	btfss	(___awdiv@divisor+1),(15)&7
 11919  04C6  1FA1               	goto	u3291
 11920  04C7  2CC9               	goto	u3290
 11921  04C8  2CCA               u3291:
 11922  04C9                     	goto	l4347
 11923  04C9  2CBA               u3290:
 11924  04CA                     	goto	l4353
 11925  04CA  2CCC               	
 11926                           l844:	
 11927  04CB                     	goto	l4353
 11928  04CB  2CCC               	line	29
 11929                           	
 11930                           l845:	
 11931  04CC                     	line	30
 11932                           	
 11933                           l4353:	
 11934  04CC                     	movlw	01h
 11935  04CC  3001               	
 11936                           u3305:
 11937  04CD                     	clrc
 11938  04CD  1003               	rlf	(___awdiv@quotient),f
 11939  04CE  0DA7               	rlf	(___awdiv@quotient+1),f
 11940  04CF  0DA8               	addlw	-1
 11941  04D0  3EFF               	skipz
 11942  04D1  1D03               	goto	u3305
 11943  04D2  2CCD               	line	31
 11944                           	movf	(___awdiv@divisor+1),w
 11945  04D3  0821               	subwf	(___awdiv@dividend+1),w
 11946  04D4  0223               	skipz
 11947  04D5  1D03               	goto	u3315
 11948  04D6  2CD9               	movf	(___awdiv@divisor),w
 11949  04D7  0820               	subwf	(___awdiv@dividend),w
 11950  04D8  0222               u3315:
 11951  04D9                     	skipc
 11952  04D9  1C03               	goto	u3311
 11953  04DA  2CDC               	goto	u3310
 11954  04DB  2CDD               u3311:
 11955  04DC                     	goto	l4359
 11956  04DC  2CE5               u3310:
 11957  04DD                     	line	32
 11958                           	
 11959                           l4355:	
 11960  04DD                     	movf	(___awdiv@divisor),w
 11961  04DD  0820               	subwf	(___awdiv@dividend),f
 11962  04DE  02A2               	movf	(___awdiv@divisor+1),w
 11963  04DF  0821               	skipc
 11964  04E0  1C03               	decf	(___awdiv@dividend+1),f
 11965  04E1  03A3               	subwf	(___awdiv@dividend+1),f
 11966  04E2  02A3               	line	33
 11967                           	
 11968                           l4357:	
 11969  04E3                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
 11970  04E3  1427               	goto	l4359
 11971  04E4  2CE5               	line	34
 11972                           	
 11973                           l846:	
 11974  04E5                     	line	35
 11975                           	
 11976                           l4359:	
 11977  04E5                     	movlw	01h
 11978  04E5  3001               	
 11979                           u3325:
 11980  04E6                     	clrc
 11981  04E6  1003               	rrf	(___awdiv@divisor+1),f
 11982  04E7  0CA1               	rrf	(___awdiv@divisor),f
 11983  04E8  0CA0               	addlw	-1
 11984  04E9  3EFF               	skipz
 11985  04EA  1D03               	goto	u3325
 11986  04EB  2CE6               	line	36
 11987                           	
 11988                           l4361:	
 11989  04EC                     	movlw	01h
 11990  04EC  3001               	subwf	(___awdiv@counter),f
 11991  04ED  02A5               	btfss	status,2
 11992  04EE  1D03               	goto	u3331
 11993  04EF  2CF1               	goto	u3330
 11994  04F0  2CF2               u3331:
 11995  04F1                     	goto	l4353
 11996  04F1  2CCC               u3330:
 11997  04F2                     	goto	l4363
 11998  04F2  2CF4               	
 11999                           l847:	
 12000  04F3                     	goto	l4363
 12001  04F3  2CF4               	line	37
 12002                           	
 12003                           l841:	
 12004  04F4                     	line	38
 12005                           	
 12006                           l4363:	
 12007  04F4                     	movf	((___awdiv@sign)),w
 12008  04F4  0826               	btfsc	status,2
 12009  04F5  1903               	goto	u3341
 12010  04F6  2CF8               	goto	u3340
 12011  04F7  2CF9               u3341:
 12012  04F8                     	goto	l4367
 12013  04F8  2CFF               u3340:
 12014  04F9                     	line	39
 12015                           	
 12016                           l4365:	
 12017  04F9                     	comf	(___awdiv@quotient),f
 12018  04F9  09A7               	comf	(___awdiv@quotient+1),f
 12019  04FA  09A8               	incf	(___awdiv@quotient),f
 12020  04FB  0AA7               	skipnz
 12021  04FC  1903               	incf	(___awdiv@quotient+1),f
 12022  04FD  0AA8               	goto	l4367
 12023  04FE  2CFF               	
 12024                           l848:	
 12025  04FF                     	line	40
 12026                           	
 12027                           l4367:	
 12028  04FF                     	movf	(___awdiv@quotient+1),w
 12029  04FF  0828               	movwf	(?___awdiv+1)
 12030  0500  00A1               	movf	(___awdiv@quotient),w
 12031  0501  0827               	movwf	(?___awdiv)
 12032  0502  00A0               	goto	l849
 12033  0503  2D04               	
 12034                           l4369:	
 12035  0504                     	line	41
 12036                           	
 12037                           l849:	
 12038  0504                     	return
 12039  0504  0008               	opt stack 0
 12040                           GLOBAL	__end_of___awdiv
 12041                           	__end_of___awdiv:
 12042  0505                     	signat	___awdiv,8314
 12043                           	global	_dispLCD_init
 12044                           
 12045 ;; *************** function _dispLCD_init *****************
 12046 ;; Defined at:
 12047 ;;		line 152 in file "dispLCD4vias.c"
 12048 ;; Parameters:    Size  Location     Type
 12049 ;;		None
 12050 ;; Auto vars:     Size  Location     Type
 12051 ;;		None
 12052 ;; Return value:  Size  Location     Type
 12053 ;;                  1    wreg      void 
 12054 ;; Registers used:
 12055 ;;		wreg, status,2, status,0, pclath, cstack
 12056 ;; Tracked objects:
 12057 ;;		On entry : 0/0
 12058 ;;		On exit  : 0/0
 12059 ;;		Unchanged: 0/0
 12060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12061 ;;      Params:         0       0       0       0       0
 12062 ;;      Locals:         0       0       0       0       0
 12063 ;;      Temps:          0       0       0       0       0
 12064 ;;      Totals:         0       0       0       0       0
 12065 ;;Total ram usage:        0 bytes
 12066 ;; Hardware stack levels used:    1
 12067 ;; Hardware stack levels required when called:    3
 12068 ;; This function calls:
 12069 ;;		_delay
 12070 ;;		_dispLCD_instReg
 12071 ;; This function is called by:
 12072 ;;		_main
 12073 ;; This function uses a non-reentrant model
 12074 ;;
 12075                           psect	text39,local,class=CODE,delta=2,merge=1,group=0
 12076                           	file	"dispLCD4vias.c"
 12077                           	line	152
 12078                           global __ptext39
 12079                           __ptext39:	;psect for function _dispLCD_init
 12080  16C5                     psect	text39
 12081                           	file	"dispLCD4vias.c"
 12082                           	line	152
 12083                           	global	__size_of_dispLCD_init
 12084                           	__size_of_dispLCD_init	equ	__end_of_dispLCD_init-_dispLCD_init
 12085  0030                     	
 12086                           _dispLCD_init:	
 12087  16C5                     ;incstack = 0
 12088                           	opt	stack 4
 12089                           ; Regs used in _dispLCD_init: [wreg+status,2+status,0+pclath+cstack]
 12090                           	line	154
 12091                           	
 12092                           l4603:	
 12093  16C5                     ;dispLCD4vias.c: 154:     ANSELH = 0x00;
 12094                           	bsf	status, 5	;RP0=1, select bank3
 12095  16C5  1683               	bsf	status, 6	;RP1=1, select bank3
 12096  16C6  1703               	clrf	(393)^0180h	;volatile
 12097  16C7  0189               	line	156
 12098                           	
 12099                           l4605:	
 12100  16C8                     ;dispLCD4vias.c: 156:     TRISBbits.TRISB4 = 0;
 12101                           	bsf	status, 5	;RP0=1, select bank1
 12102  16C8  1683               	bcf	status, 6	;RP1=0, select bank1
 12103  16C9  1303               	bcf	(134)^080h,4	;volatile
 12104  16CA  1206               	line	157
 12105                           	
 12106                           l4607:	
 12107  16CB                     ;dispLCD4vias.c: 157:     TRISBbits.TRISB5 = 0;
 12108                           	bcf	(134)^080h,5	;volatile
 12109  16CB  1286               	line	159
 12110                           	
 12111                           l4609:	
 12112  16CC                     ;dispLCD4vias.c: 159:     TRISBbits.TRISB0 = 0;
 12113                           	bcf	(134)^080h,0	;volatile
 12114  16CC  1006               	line	160
 12115                           	
 12116                           l4611:	
 12117  16CD                     ;dispLCD4vias.c: 160:     TRISBbits.TRISB1 = 0;
 12118                           	bcf	(134)^080h,1	;volatile
 12119  16CD  1086               	line	161
 12120                           	
 12121                           l4613:	
 12122  16CE                     ;dispLCD4vias.c: 161:     TRISBbits.TRISB2 = 0;
 12123                           	bcf	(134)^080h,2	;volatile
 12124  16CE  1106               	line	162
 12125                           	
 12126                           l4615:	
 12127  16CF                     ;dispLCD4vias.c: 162:     TRISBbits.TRISB3 = 0;
 12128                           	bcf	(134)^080h,3	;volatile
 12129  16CF  1186               	line	164
 12130                           	
 12131                           l4617:	
 12132  16D0                     ;dispLCD4vias.c: 164:     LCDbits.EN = 1;
 12133                           	bcf	status, 5	;RP0=0, select bank0
 12134  16D0  1283               	bcf	status, 6	;RP1=0, select bank0
 12135  16D1  1303               	bsf	(6),5	;volatile
 12136  16D2  1686               	line	165
 12137                           	
 12138                           l4619:	
 12139  16D3                     ;dispLCD4vias.c: 165:     delay(5);
 12140                           	movlw	05h
 12141  16D3  3005               	movwf	(delay@t)
 12142  16D4  00A0               	movlw	0
 12143  16D5  3000               	movwf	((delay@t))+1
 12144  16D6  00A1               	fcall	_delay
 12145  16D7  160A  118A  2513  160A  118A  	line	166
 12146                           	
 12147                           l4621:	
 12148  16DC                     ;dispLCD4vias.c: 166:     dispLCD_instReg( 0x20|0x00|0x08);
 12149                           	movlw	low(028h)
 12150  16DC  3028               	fcall	_dispLCD_instReg
 12151  16DD  120A  118A  240E  160A  118A  	line	167
 12152                           	
 12153                           l4623:	
 12154  16E2                     ;dispLCD4vias.c: 167:     dispLCD_instReg( 0x08|0x04|0x00|0x00 );
 12155                           	movlw	low(0Ch)
 12156  16E2  300C               	fcall	_dispLCD_instReg
 12157  16E3  120A  118A  240E  160A  118A  	line	168
 12158                           	
 12159                           l4625:	
 12160  16E8                     ;dispLCD4vias.c: 168:     dispLCD_instReg( 0x01 );
 12161                           	movlw	low(01h)
 12162  16E8  3001               	fcall	_dispLCD_instReg
 12163  16E9  120A  118A  240E  160A  118A  	line	169
 12164                           	
 12165                           l4627:	
 12166  16EE                     ;dispLCD4vias.c: 169:     dispLCD_instReg( 0x02 );
 12167                           	movlw	low(02h)
 12168  16EE  3002               	fcall	_dispLCD_instReg
 12169  16EF  120A  118A  240E  160A  118A  	line	170
 12170                           	
 12171                           l39:	
 12172  16F4                     	return
 12173  16F4  0008               	opt stack 0
 12174                           GLOBAL	__end_of_dispLCD_init
 12175                           	__end_of_dispLCD_init:
 12176  16F5                     	signat	_dispLCD_init,89
 12177                           	global	_delay
 12178                           
 12179 ;; *************** function _delay *****************
 12180 ;; Defined at:
 12181 ;;		line 10 in file "delay.c"
 12182 ;; Parameters:    Size  Location     Type
 12183 ;;  t               2    0[BANK0 ] unsigned int 
 12184 ;; Auto vars:     Size  Location     Type
 12185 ;;		None
 12186 ;; Return value:  Size  Location     Type
 12187 ;;                  1    wreg      void 
 12188 ;; Registers used:
 12189 ;;		wreg, status,2, status,0
 12190 ;; Tracked objects:
 12191 ;;		On entry : 0/0
 12192 ;;		On exit  : 0/0
 12193 ;;		Unchanged: 0/0
 12194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12195 ;;      Params:         0       2       0       0       0
 12196 ;;      Locals:         0       0       0       0       0
 12197 ;;      Temps:          0       2       0       0       0
 12198 ;;      Totals:         0       4       0       0       0
 12199 ;;Total ram usage:        4 bytes
 12200 ;; Hardware stack levels used:    1
 12201 ;; Hardware stack levels required when called:    2
 12202 ;; This function calls:
 12203 ;;		Nothing
 12204 ;; This function is called by:
 12205 ;;		_dispLCD_init
 12206 ;;		_main
 12207 ;; This function uses a non-reentrant model
 12208 ;;
 12209                           psect	text40,local,class=CODE,delta=2,merge=1,group=0
 12210                           	file	"delay.c"
 12211                           	line	10
 12212                           global __ptext40
 12213                           __ptext40:	;psect for function _delay
 12214  1513                     psect	text40
 12215                           	file	"delay.c"
 12216                           	line	10
 12217                           	global	__size_of_delay
 12218                           	__size_of_delay	equ	__end_of_delay-_delay
 12219  001F                     	
 12220                           _delay:	
 12221  1513                     ;incstack = 0
 12222                           	opt	stack 4
 12223                           ; Regs used in _delay: [wreg+status,2+status,0]
 12224                           	line	12
 12225                           	
 12226                           l4449:	
 12227  1513                     ;delay.c: 10: void delay( unsigned int t );delay.c: 11: {;delay.c: 12:     while( t )
 12228                           	goto	l4453
 12229  1513  2D28               	
 12230                           l6:	
 12231  1514                     	line	14
 12232                           	
 12233                           l4451:	
 12234  1514                     ;delay.c: 13:     {;delay.c: 14:         _delay((unsigned long)((1)*(20000000/4000.0)));
                                 
 12235                           	opt asmopt_push
 12236                           opt asmopt_off
 12237                           movlw	7
 12238  1514  3007               	bcf	status, 5	;RP0=0, select bank0
 12239  1515  1283               	bcf	status, 6	;RP1=0, select bank0
 12240  1516  1303               movwf	((??_delay+0)+0+1),f
 12241  1517  00A3               	movlw	124
 12242  1518  307C               movwf	((??_delay+0)+0),f
 12243  1519  00A2               	u4627:
 12244  151A                     decfsz	((??_delay+0)+0),f
 12245  151A  0BA2               	goto	u4627
 12246  151B  2D1A               	decfsz	((??_delay+0)+0+1),f
 12247  151C  0BA3               	goto	u4627
 12248  151D  2D1A               	nop
 12249  151E  0000               opt asmopt_pop
 12250                           
 12251                           	line	15
 12252                           ;delay.c: 15:         --t;
 12253                           	movlw	01h
 12254  151F  3001               	bcf	status, 5	;RP0=0, select bank0
 12255  1520  1283               	bcf	status, 6	;RP1=0, select bank0
 12256  1521  1303               	subwf	(delay@t),f
 12257  1522  02A0               	movlw	0
 12258  1523  3000               	skipc
 12259  1524  1C03               	decf	(delay@t+1),f
 12260  1525  03A1               	subwf	(delay@t+1),f
 12261  1526  02A1               	goto	l4453
 12262  1527  2D28               	line	16
 12263                           ;delay.c: 16:     }
 12264                           	
 12265                           l5:	
 12266  1528                     	line	12
 12267                           	
 12268                           l4453:	
 12269  1528                     ;delay.c: 12:     while( t )
 12270                           	bcf	status, 5	;RP0=0, select bank0
 12271  1528  1283               	bcf	status, 6	;RP1=0, select bank0
 12272  1529  1303               	movf	((delay@t)),w
 12273  152A  0820               iorwf	((delay@t+1)),w
 12274  152B  0421               	btfss	status,2
 12275  152C  1D03               	goto	u3471
 12276  152D  2D2F               	goto	u3470
 12277  152E  2D30               u3471:
 12278  152F                     	goto	l4451
 12279  152F  2D14               u3470:
 12280  1530                     	goto	l8
 12281  1530  2D31               	
 12282                           l7:	
 12283  1531                     	line	17
 12284                           	
 12285                           l8:	
 12286  1531                     	return
 12287  1531  0008               	opt stack 0
 12288                           GLOBAL	__end_of_delay
 12289                           	__end_of_delay:
 12290  1532                     	signat	_delay,4217
 12291                           	global	_dispLCD_clr
 12292                           
 12293 ;; *************** function _dispLCD_clr *****************
 12294 ;; Defined at:
 12295 ;;		line 230 in file "dispLCD4vias.c"
 12296 ;; Parameters:    Size  Location     Type
 12297 ;;		None
 12298 ;; Auto vars:     Size  Location     Type
 12299 ;;		None
 12300 ;; Return value:  Size  Location     Type
 12301 ;;                  1    wreg      void 
 12302 ;; Registers used:
 12303 ;;		wreg, status,2, status,0, pclath, cstack
 12304 ;; Tracked objects:
 12305 ;;		On entry : 0/0
 12306 ;;		On exit  : 0/0
 12307 ;;		Unchanged: 0/0
 12308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12309 ;;      Params:         0       0       0       0       0
 12310 ;;      Locals:         0       0       0       0       0
 12311 ;;      Temps:          0       0       0       0       0
 12312 ;;      Totals:         0       0       0       0       0
 12313 ;;Total ram usage:        0 bytes
 12314 ;; Hardware stack levels used:    1
 12315 ;; Hardware stack levels required when called:    3
 12316 ;; This function calls:
 12317 ;;		_dispLCD_instReg
 12318 ;; This function is called by:
 12319 ;;		_main
 12320 ;; This function uses a non-reentrant model
 12321 ;;
 12322                           psect	text41,local,class=CODE,delta=2,merge=1,group=0
 12323                           	file	"dispLCD4vias.c"
 12324                           	line	230
 12325                           global __ptext41
 12326                           __ptext41:	;psect for function _dispLCD_clr
 12327  13E2                     psect	text41
 12328                           	file	"dispLCD4vias.c"
 12329                           	line	230
 12330                           	global	__size_of_dispLCD_clr
 12331                           	__size_of_dispLCD_clr	equ	__end_of_dispLCD_clr-_dispLCD_clr
 12332  0007                     	
 12333                           _dispLCD_clr:	
 12334  13E2                     ;incstack = 0
 12335                           	opt	stack 4
 12336                           ; Regs used in _dispLCD_clr: [wreg+status,2+status,0+pclath+cstack]
 12337                           	line	232
 12338                           	
 12339                           l4641:	
 12340  13E2                     ;dispLCD4vias.c: 232:     dispLCD_instReg(0x01);
 12341                           	movlw	low(01h)
 12342  13E2  3001               	fcall	_dispLCD_instReg
 12343  13E3  120A  118A  240E  160A  118A  	line	233
 12344                           	
 12345                           l65:	
 12346  13E8                     	return
 12347  13E8  0008               	opt stack 0
 12348                           GLOBAL	__end_of_dispLCD_clr
 12349                           	__end_of_dispLCD_clr:
 12350  13E9                     	signat	_dispLCD_clr,89
 12351                           	global	_dispLCD
 12352                           
 12353 ;; *************** function _dispLCD *****************
 12354 ;; Defined at:
 12355 ;;		line 173 in file "dispLCD4vias.c"
 12356 ;; Parameters:    Size  Location     Type
 12357 ;;  lin             1    wreg     unsigned char 
 12358 ;;  col             1    6[BANK0 ] unsigned char 
 12359 ;;  str             2    7[BANK0 ] PTR const unsigned char 
 12360 ;;		 -> STR_18(17), STR_17(17), STR_16(17), STR_15(17), 
 12361 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(17), 
 12362 ;;		 -> STR_10(17), STR_9(17), STR_8(8), STR_7(17), 
 12363 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(13), 
 12364 ;;		 -> STR_2(2), STR_1(2), 
 12365 ;; Auto vars:     Size  Location     Type
 12366 ;;  lin             1   11[BANK0 ] unsigned char 
 12367 ;;  pos             1   10[BANK0 ] unsigned char 
 12368 ;; Return value:  Size  Location     Type
 12369 ;;                  1    wreg      void 
 12370 ;; Registers used:
 12371 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12372 ;; Tracked objects:
 12373 ;;		On entry : 0/0
 12374 ;;		On exit  : 0/0
 12375 ;;		Unchanged: 0/0
 12376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12377 ;;      Params:         0       3       0       0       0
 12378 ;;      Locals:         0       2       0       0       0
 12379 ;;      Temps:          0       1       0       0       0
 12380 ;;      Totals:         0       6       0       0       0
 12381 ;;Total ram usage:        6 bytes
 12382 ;; Hardware stack levels used:    1
 12383 ;; Hardware stack levels required when called:    4
 12384 ;; This function calls:
 12385 ;;		_dispLCD_dataReg
 12386 ;;		_dispLCD_lincol
 12387 ;; This function is called by:
 12388 ;;		_main
 12389 ;; This function uses a non-reentrant model
 12390 ;;
 12391                           psect	text42,local,class=CODE,delta=2,merge=1,group=0
 12392                           	line	173
 12393                           global __ptext42
 12394                           __ptext42:	;psect for function _dispLCD
 12395  0783                     psect	text42
 12396                           	file	"dispLCD4vias.c"
 12397                           	line	173
 12398                           	global	__size_of_dispLCD
 12399                           	__size_of_dispLCD	equ	__end_of_dispLCD-_dispLCD
 12400  003F                     	
 12401                           _dispLCD:	
 12402  0783                     ;incstack = 0
 12403                           	opt	stack 3
 12404                           ; Regs used in _dispLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 12405                           ;dispLCD@lin stored from wreg
 12406                           	bcf	status, 5	;RP0=0, select bank0
 12407  0783  1283               	bcf	status, 6	;RP1=0, select bank0
 12408  0784  1303               	movwf	(dispLCD@lin)
 12409  0785  00AB               	line	175
 12410                           	
 12411                           l4629:	
 12412  0786                     ;dispLCD4vias.c: 173: void dispLCD( unsigned char lin, unsigned char col, const char * s
                                 tr );dispLCD4vias.c: 174: {;dispLCD4vias.c: 175:     char pos = col;
 12413                           	movf	(dispLCD@col),w
 12414  0786  0826               	movwf	(??_dispLCD+0)+0
 12415  0787  00A9               	movf	(??_dispLCD+0)+0,w
 12416  0788  0829               	movwf	(dispLCD@pos)
 12417  0789  00AA               	line	176
 12418                           	
 12419                           l4631:	
 12420  078A                     ;dispLCD4vias.c: 176:     dispLCD_lincol( lin, col );
 12421                           	movf	(dispLCD@col),w
 12422  078A  0826               	movwf	(??_dispLCD+0)+0
 12423  078B  00A9               	movf	(??_dispLCD+0)+0,w
 12424  078C  0829               	movwf	(dispLCD_lincol@col)
 12425  078D  00A3               	movf	(dispLCD@lin),w
 12426  078E  082B               	fcall	_dispLCD_lincol
 12427  078F  160A  118A  24A8  120A  118A  	line	178
 12428                           ;dispLCD4vias.c: 178:     while( *str )
 12429                           	goto	l4639
 12430  0794  2FB0               	
 12431                           l43:	
 12432  0795                     	line	180
 12433                           	
 12434                           l4633:	
 12435  0795                     ;dispLCD4vias.c: 179:     {;dispLCD4vias.c: 180:         dispLCD_dataReg( *str );
 12436                           	bcf	status, 5	;RP0=0, select bank0
 12437  0795  1283               	bcf	status, 6	;RP1=0, select bank0
 12438  0796  1303               	movf	(dispLCD@str+1),w
 12439  0797  0828               	movwf	btemp+1
 12440  0798  00FF               	movf	(dispLCD@str),w
 12441  0799  0827               	movwf	fsr0
 12442  079A  0084               	fcall	stringtab
 12443  079B  160A  118A  2105  120A  118A  	fcall	_dispLCD_dataReg
 12444  07A0  160A  118A  2725  120A  118A  	line	181
 12445                           	
 12446                           l4635:	
 12447  07A5                     ;dispLCD4vias.c: 181:         ++str;
 12448                           	movlw	01h
 12449  07A5  3001               	bcf	status, 5	;RP0=0, select bank0
 12450  07A6  1283               	bcf	status, 6	;RP1=0, select bank0
 12451  07A7  1303               	addwf	(dispLCD@str),f
 12452  07A8  07A7               	skipnc
 12453  07A9  1803               	incf	(dispLCD@str+1),f
 12454  07AA  0AA8               	line	182
 12455                           	
 12456                           l4637:	
 12457  07AB                     ;dispLCD4vias.c: 182:         ++pos;
 12458                           	movlw	low(01h)
 12459  07AB  3001               	movwf	(??_dispLCD+0)+0
 12460  07AC  00A9               	movf	(??_dispLCD+0)+0,w
 12461  07AD  0829               	addwf	(dispLCD@pos),f
 12462  07AE  07AA               	goto	l4639
 12463  07AF  2FB0               	line	183
 12464                           ;dispLCD4vias.c: 183:     }
 12465                           	
 12466                           l42:	
 12467  07B0                     	line	178
 12468                           	
 12469                           l4639:	
 12470  07B0                     ;dispLCD4vias.c: 178:     while( *str )
 12471                           	bcf	status, 5	;RP0=0, select bank0
 12472  07B0  1283               	bcf	status, 6	;RP1=0, select bank0
 12473  07B1  1303               	movf	(dispLCD@str+1),w
 12474  07B2  0828               	movwf	btemp+1
 12475  07B3  00FF               	movf	(dispLCD@str),w
 12476  07B4  0827               	movwf	fsr0
 12477  07B5  0084               	fcall	stringtab
 12478  07B6  160A  118A  2105  120A  118A  	xorlw	0
 12479  07BB  3A00               	skipz
 12480  07BC  1D03               	goto	u3851
 12481  07BD  2FBF               	goto	u3850
 12482  07BE  2FC0               u3851:
 12483  07BF                     	goto	l4633
 12484  07BF  2F95               u3850:
 12485  07C0                     	goto	l45
 12486  07C0  2FC1               	
 12487                           l44:	
 12488  07C1                     	line	184
 12489                           	
 12490                           l45:	
 12491  07C1                     	return
 12492  07C1  0008               	opt stack 0
 12493                           GLOBAL	__end_of_dispLCD
 12494                           	__end_of_dispLCD:
 12495  07C2                     	signat	_dispLCD,12409
 12496                           	global	_dispLCD_lincol
 12497                           
 12498 ;; *************** function _dispLCD_lincol *****************
 12499 ;; Defined at:
 12500 ;;		line 146 in file "dispLCD4vias.c"
 12501 ;; Parameters:    Size  Location     Type
 12502 ;;  lin             1    wreg     unsigned char 
 12503 ;;  col             1    3[BANK0 ] unsigned char 
 12504 ;; Auto vars:     Size  Location     Type
 12505 ;;  lin             1    5[BANK0 ] unsigned char 
 12506 ;; Return value:  Size  Location     Type
 12507 ;;                  1    wreg      void 
 12508 ;; Registers used:
 12509 ;;		wreg, status,2, status,0, pclath, cstack
 12510 ;; Tracked objects:
 12511 ;;		On entry : 0/0
 12512 ;;		On exit  : 0/0
 12513 ;;		Unchanged: 0/0
 12514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12515 ;;      Params:         0       1       0       0       0
 12516 ;;      Locals:         0       1       0       0       0
 12517 ;;      Temps:          0       1       0       0       0
 12518 ;;      Totals:         0       3       0       0       0
 12519 ;;Total ram usage:        3 bytes
 12520 ;; Hardware stack levels used:    1
 12521 ;; Hardware stack levels required when called:    3
 12522 ;; This function calls:
 12523 ;;		_dispLCD_instReg
 12524 ;; This function is called by:
 12525 ;;		_dispLCD
 12526 ;;		_dispLCD_num
 12527 ;;		_fifo_print
 12528 ;;		_printExec
 12529 ;;		_main
 12530 ;; This function uses a non-reentrant model
 12531 ;;
 12532                           psect	text43,local,class=CODE,delta=2,merge=1,group=0
 12533                           	line	146
 12534                           global __ptext43
 12535                           __ptext43:	;psect for function _dispLCD_lincol
 12536  14A8                     psect	text43
 12537                           	file	"dispLCD4vias.c"
 12538                           	line	146
 12539                           	global	__size_of_dispLCD_lincol
 12540                           	__size_of_dispLCD_lincol	equ	__end_of_dispLCD_lincol-_dispLCD_lincol
 12541  0015                     	
 12542                           _dispLCD_lincol:	
 12543  14A8                     ;incstack = 0
 12544                           	opt	stack 2
 12545                           ; Regs used in _dispLCD_lincol: [wreg+status,2+status,0+pclath+cstack]
 12546                           ;dispLCD_lincol@lin stored from wreg
 12547                           	bcf	status, 5	;RP0=0, select bank0
 12548  14A8  1283               	bcf	status, 6	;RP1=0, select bank0
 12549  14A9  1303               	movwf	(dispLCD_lincol@lin)
 12550  14AA  00A5               	line	148
 12551                           	
 12552                           l4389:	
 12553  14AB                     ;dispLCD4vias.c: 146: void dispLCD_lincol( unsigned char lin, unsigned char col);dispLCD
                                 4vias.c: 147: {;dispLCD4vias.c: 148:     dispLCD_instReg( (0x80+((0x40 * lin) + (col + 0
                                 x00) & 0x7F)) );
 12554                           	movf	(dispLCD_lincol@lin),w
 12555  14AB  0825               	movwf	(??_dispLCD_lincol+0)+0
 12556  14AC  00A4               	movlw	06h
 12557  14AD  3006               u3365:
 12558  14AE                     	clrc
 12559  14AE  1003               	rlf	(??_dispLCD_lincol+0)+0,f
 12560  14AF  0DA4               	addlw	-1
 12561  14B0  3EFF               	skipz
 12562  14B1  1D03               	goto	u3365
 12563  14B2  2CAE               	movf	(dispLCD_lincol@col),w
 12564  14B3  0823               	addwf	0+(??_dispLCD_lincol+0)+0,w
 12565  14B4  0724               	andlw	07Fh
 12566  14B5  397F               	addlw	080h
 12567  14B6  3E80               	fcall	_dispLCD_instReg
 12568  14B7  120A  118A  240E  160A  118A  	line	149
 12569                           	
 12570                           l36:	
 12571  14BC                     	return
 12572  14BC  0008               	opt stack 0
 12573                           GLOBAL	__end_of_dispLCD_lincol
 12574                           	__end_of_dispLCD_lincol:
 12575  14BD                     	signat	_dispLCD_lincol,8313
 12576                           	global	_dispLCD_instReg
 12577                           
 12578 ;; *************** function _dispLCD_instReg *****************
 12579 ;; Defined at:
 12580 ;;		line 97 in file "dispLCD4vias.c"
 12581 ;; Parameters:    Size  Location     Type
 12582 ;;  i               1    wreg     unsigned char 
 12583 ;; Auto vars:     Size  Location     Type
 12584 ;;  i               1    2[BANK0 ] unsigned char 
 12585 ;; Return value:  Size  Location     Type
 12586 ;;                  1    wreg      void 
 12587 ;; Registers used:
 12588 ;;		wreg, status,2, status,0
 12589 ;; Tracked objects:
 12590 ;;		On entry : 0/0
 12591 ;;		On exit  : 0/0
 12592 ;;		Unchanged: 0/0
 12593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12594 ;;      Params:         0       0       0       0       0
 12595 ;;      Locals:         0       1       0       0       0
 12596 ;;      Temps:          0       2       0       0       0
 12597 ;;      Totals:         0       3       0       0       0
 12598 ;;Total ram usage:        3 bytes
 12599 ;; Hardware stack levels used:    1
 12600 ;; Hardware stack levels required when called:    2
 12601 ;; This function calls:
 12602 ;;		Nothing
 12603 ;; This function is called by:
 12604 ;;		_dispLCD_lincol
 12605 ;;		_dispLCD_init
 12606 ;;		_dispLCD_clr
 12607 ;; This function uses a non-reentrant model
 12608 ;;
 12609                           psect	text44,local,class=CODE,delta=2,merge=1,group=0
 12610                           	line	97
 12611                           global __ptext44
 12612                           __ptext44:	;psect for function _dispLCD_instReg
 12613  040E                     psect	text44
 12614                           	file	"dispLCD4vias.c"
 12615                           	line	97
 12616                           	global	__size_of_dispLCD_instReg
 12617                           	__size_of_dispLCD_instReg	equ	__end_of_dispLCD_instReg-_dispLCD_instReg
 12618  0084                     	
 12619                           _dispLCD_instReg:	
 12620  040E                     ;incstack = 0
 12621                           	opt	stack 2
 12622                           ; Regs used in _dispLCD_instReg: [wreg+status,2+status,0]
 12623                           ;dispLCD_instReg@i stored from wreg
 12624                           	bcf	status, 5	;RP0=0, select bank0
 12625  040E  1283               	bcf	status, 6	;RP1=0, select bank0
 12626  040F  1303               	movwf	(dispLCD_instReg@i)
 12627  0410  00A2               	line	99
 12628                           	
 12629                           l4285:	
 12630  0411                     ;dispLCD4vias.c: 97: void dispLCD_instReg( unsigned char i );dispLCD4vias.c: 98: {;dispL
                                 CD4vias.c: 99:     LCDbits.RS = 0;
 12631                           	bcf	(6),4	;volatile
 12632  0411  1206               	line	100
 12633                           	
 12634                           l4287:	
 12635  0412                     ;dispLCD4vias.c: 100:     LCDbits.BUS = (i>>4);
 12636                           	movf	(dispLCD_instReg@i),w
 12637  0412  0822               	movwf	(??_dispLCD_instReg+0)+0
 12638  0413  00A0               	movlw	04h
 12639  0414  3004               u3185:
 12640  0415                     	clrc
 12641  0415  1003               	rrf	(??_dispLCD_instReg+0)+0,f
 12642  0416  0CA0               	addlw	-1
 12643  0417  3EFF               	skipz
 12644  0418  1D03               	goto	u3185
 12645  0419  2C15               	movf	(6),w	;volatile
 12646  041A  0806               	xorwf	0+(??_dispLCD_instReg+0)+0,w
 12647  041B  0620               	andlw	not ((1<<4)-1)
 12648  041C  39F0               	xorwf	0+(??_dispLCD_instReg+0)+0,w
 12649  041D  0620               	movwf	(6)	;volatile
 12650  041E  0086               	line	102
 12651                           	
 12652                           l4289:	
 12653  041F                     ;dispLCD4vias.c: 102:     LCDbits.EN = 0;
 12654                           	bcf	(6),5	;volatile
 12655  041F  1286               	line	103
 12656                           ;dispLCD4vias.c: 103:     if( i == 0x01 || i == 0x02 )
 12657                           		decf	((dispLCD_instReg@i)),w
 12658  0420  0322               	btfsc	status,2
 12659  0421  1903               	goto	u3191
 12660  0422  2C24               	goto	u3190
 12661  0423  2C25               u3191:
 12662  0424                     	goto	l4293
 12663  0424  2C2C               u3190:
 12664  0425                     	
 12665                           l4291:	
 12666  0425                     		movlw	2
 12667  0425  3002               	xorwf	((dispLCD_instReg@i)),w
 12668  0426  0622               	btfss	status,2
 12669  0427  1D03               	goto	u3201
 12670  0428  2C2A               	goto	u3200
 12671  0429  2C2B               u3201:
 12672  042A                     	goto	l4295
 12673  042A  2C37               u3200:
 12674  042B                     	goto	l4293
 12675  042B  2C2C               	
 12676                           l23:	
 12677  042C                     	line	104
 12678                           	
 12679                           l4293:	
 12680  042C                     ;dispLCD4vias.c: 104:         _delay((unsigned long)((2)*(20000000/4000.0)));
 12681                           	opt asmopt_push
 12682                           opt asmopt_off
 12683                           movlw	13
 12684  042C  300D               	bcf	status, 5	;RP0=0, select bank0
 12685  042D  1283               	bcf	status, 6	;RP1=0, select bank0
 12686  042E  1303               movwf	((??_dispLCD_instReg+0)+0+1),f
 12687  042F  00A1               	movlw	251
 12688  0430  30FB               movwf	((??_dispLCD_instReg+0)+0),f
 12689  0431  00A0               	u4637:
 12690  0432                     decfsz	((??_dispLCD_instReg+0)+0),f
 12691  0432  0BA0               	goto	u4637
 12692  0433  2C32               	decfsz	((??_dispLCD_instReg+0)+0+1),f
 12693  0434  0BA1               	goto	u4637
 12694  0435  2C32               opt asmopt_pop
 12695                           
 12696                           	goto	l4297
 12697  0436  2C3F               	line	105
 12698                           ;dispLCD4vias.c: 105:     else
 12699                           	
 12700                           l21:	
 12701  0437                     	line	106
 12702                           	
 12703                           l4295:	
 12704  0437                     ;dispLCD4vias.c: 106:         _delay((unsigned long)((40)*(20000000/4000000.0)));
 12705                           	opt asmopt_push
 12706                           opt asmopt_off
 12707                           	movlw	65
 12708  0437  3041               	bcf	status, 5	;RP0=0, select bank0
 12709  0438  1283               	bcf	status, 6	;RP1=0, select bank0
 12710  0439  1303               movwf	((??_dispLCD_instReg+0)+0),f
 12711  043A  00A0               	u4647:
 12712  043B                     decfsz	(??_dispLCD_instReg+0)+0,f
 12713  043B  0BA0               	goto	u4647
 12714  043C  2C3B               	nop2
 12715  043D  2C3E               opt asmopt_pop
 12716                           
 12717                           	goto	l4297
 12718  043E  2C3F               	
 12719                           l24:	
 12720  043F                     	line	107
 12721                           	
 12722                           l4297:	
 12723  043F                     ;dispLCD4vias.c: 107:     LCDbits.EN = 1;
 12724                           	bcf	status, 5	;RP0=0, select bank0
 12725  043F  1283               	bcf	status, 6	;RP1=0, select bank0
 12726  0440  1303               	bsf	(6),5	;volatile
 12727  0441  1686               	line	110
 12728                           	
 12729                           l4299:	
 12730  0442                     ;dispLCD4vias.c: 110:     if( (i & 0xF0) == (0x20 | 0x00) )
 12731                           	movlw	low(0F0h)
 12732  0442  30F0               	andwf	(dispLCD_instReg@i),w
 12733  0443  0522               	movwf	(??_dispLCD_instReg+0)+0
 12734  0444  00A0               		movlw	32
 12735  0445  3020               	xorwf	((??_dispLCD_instReg+0)+0),w
 12736  0446  0620               	btfss	status,2
 12737  0447  1D03               	goto	u3211
 12738  0448  2C4A               	goto	u3210
 12739  0449  2C4B               u3211:
 12740  044A                     	goto	l4311
 12741  044A  2C65               u3210:
 12742  044B                     	line	112
 12743                           	
 12744                           l4301:	
 12745  044B                     ;dispLCD4vias.c: 111:     {;dispLCD4vias.c: 112:         LCDbits.RS = 0;
 12746                           	bcf	(6),4	;volatile
 12747  044B  1206               	line	113
 12748                           	
 12749                           l4303:	
 12750  044C                     ;dispLCD4vias.c: 113:         LCDbits.BUS = i>>4;
 12751                           	movf	(dispLCD_instReg@i),w
 12752  044C  0822               	movwf	(??_dispLCD_instReg+0)+0
 12753  044D  00A0               	movlw	04h
 12754  044E  3004               u3225:
 12755  044F                     	clrc
 12756  044F  1003               	rrf	(??_dispLCD_instReg+0)+0,f
 12757  0450  0CA0               	addlw	-1
 12758  0451  3EFF               	skipz
 12759  0452  1D03               	goto	u3225
 12760  0453  2C4F               	movf	(6),w	;volatile
 12761  0454  0806               	xorwf	0+(??_dispLCD_instReg+0)+0,w
 12762  0455  0620               	andlw	not ((1<<4)-1)
 12763  0456  39F0               	xorwf	0+(??_dispLCD_instReg+0)+0,w
 12764  0457  0620               	movwf	(6)	;volatile
 12765  0458  0086               	line	114
 12766                           	
 12767                           l4305:	
 12768  0459                     ;dispLCD4vias.c: 114:         LCDbits.EN = 0;
 12769                           	bcf	(6),5	;volatile
 12770  0459  1286               	line	115
 12771                           	
 12772                           l4307:	
 12773  045A                     ;dispLCD4vias.c: 115:         _delay((unsigned long)((40)*(20000000/4000000.0)));
 12774                           	opt asmopt_push
 12775                           opt asmopt_off
 12776                           	movlw	65
 12777  045A  3041               	bcf	status, 5	;RP0=0, select bank0
 12778  045B  1283               	bcf	status, 6	;RP1=0, select bank0
 12779  045C  1303               movwf	((??_dispLCD_instReg+0)+0),f
 12780  045D  00A0               	u4657:
 12781  045E                     decfsz	(??_dispLCD_instReg+0)+0,f
 12782  045E  0BA0               	goto	u4657
 12783  045F  2C5E               	nop2
 12784  0460  2C61               opt asmopt_pop
 12785                           
 12786                           	line	116
 12787                           	
 12788                           l4309:	
 12789  0461                     ;dispLCD4vias.c: 116:         LCDbits.EN = 1;
 12790                           	bcf	status, 5	;RP0=0, select bank0
 12791  0461  1283               	bcf	status, 6	;RP1=0, select bank0
 12792  0462  1303               	bsf	(6),5	;volatile
 12793  0463  1686               	goto	l4311
 12794  0464  2C65               	line	117
 12795                           ;dispLCD4vias.c: 117:     }
 12796                           	
 12797                           l25:	
 12798  0465                     	line	119
 12799                           	
 12800                           l4311:	
 12801  0465                     ;dispLCD4vias.c: 119:     LCDbits.RS = 0;
 12802                           	bcf	(6),4	;volatile
 12803  0465  1206               	line	120
 12804                           	
 12805                           l4313:	
 12806  0466                     ;dispLCD4vias.c: 120:     LCDbits.BUS = i & 0x0F;
 12807                           	movlw	low(0Fh)
 12808  0466  300F               	andwf	(dispLCD_instReg@i),w
 12809  0467  0522               	movwf	(??_dispLCD_instReg+0)+0
 12810  0468  00A0               	movf	(6),w	;volatile
 12811  0469  0806               	xorwf	0+(??_dispLCD_instReg+0)+0,w
 12812  046A  0620               	andlw	not ((1<<4)-1)
 12813  046B  39F0               	xorwf	0+(??_dispLCD_instReg+0)+0,w
 12814  046C  0620               	movwf	(6)	;volatile
 12815  046D  0086               	line	121
 12816                           	
 12817                           l4315:	
 12818  046E                     ;dispLCD4vias.c: 121:     LCDbits.EN = 0;
 12819                           	bcf	(6),5	;volatile
 12820  046E  1286               	line	122
 12821                           	
 12822                           l4317:	
 12823  046F                     ;dispLCD4vias.c: 122:     if( i == 0x01 || i == 0x02 )
 12824                           		decf	((dispLCD_instReg@i)),w
 12825  046F  0322               	btfsc	status,2
 12826  0470  1903               	goto	u3231
 12827  0471  2C73               	goto	u3230
 12828  0472  2C74               u3231:
 12829  0473                     	goto	l4321
 12830  0473  2C7B               u3230:
 12831  0474                     	
 12832                           l4319:	
 12833  0474                     		movlw	2
 12834  0474  3002               	xorwf	((dispLCD_instReg@i)),w
 12835  0475  0622               	btfss	status,2
 12836  0476  1D03               	goto	u3241
 12837  0477  2C79               	goto	u3240
 12838  0478  2C7A               u3241:
 12839  0479                     	goto	l4323
 12840  0479  2C86               u3240:
 12841  047A                     	goto	l4321
 12842  047A  2C7B               	
 12843                           l28:	
 12844  047B                     	line	123
 12845                           	
 12846                           l4321:	
 12847  047B                     ;dispLCD4vias.c: 123:         _delay((unsigned long)((2)*(20000000/4000.0)));
 12848                           	opt asmopt_push
 12849                           opt asmopt_off
 12850                           movlw	13
 12851  047B  300D               	bcf	status, 5	;RP0=0, select bank0
 12852  047C  1283               	bcf	status, 6	;RP1=0, select bank0
 12853  047D  1303               movwf	((??_dispLCD_instReg+0)+0+1),f
 12854  047E  00A1               	movlw	251
 12855  047F  30FB               movwf	((??_dispLCD_instReg+0)+0),f
 12856  0480  00A0               	u4667:
 12857  0481                     decfsz	((??_dispLCD_instReg+0)+0),f
 12858  0481  0BA0               	goto	u4667
 12859  0482  2C81               	decfsz	((??_dispLCD_instReg+0)+0+1),f
 12860  0483  0BA1               	goto	u4667
 12861  0484  2C81               opt asmopt_pop
 12862                           
 12863                           	goto	l4325
 12864  0485  2C8E               	line	124
 12865                           ;dispLCD4vias.c: 124:     else
 12866                           	
 12867                           l26:	
 12868  0486                     	line	125
 12869                           	
 12870                           l4323:	
 12871  0486                     ;dispLCD4vias.c: 125:         _delay((unsigned long)((40)*(20000000/4000000.0)));
 12872                           	opt asmopt_push
 12873                           opt asmopt_off
 12874                           	movlw	65
 12875  0486  3041               	bcf	status, 5	;RP0=0, select bank0
 12876  0487  1283               	bcf	status, 6	;RP1=0, select bank0
 12877  0488  1303               movwf	((??_dispLCD_instReg+0)+0),f
 12878  0489  00A0               	u4677:
 12879  048A                     decfsz	(??_dispLCD_instReg+0)+0,f
 12880  048A  0BA0               	goto	u4677
 12881  048B  2C8A               	nop2
 12882  048C  2C8D               opt asmopt_pop
 12883                           
 12884                           	goto	l4325
 12885  048D  2C8E               	
 12886                           l29:	
 12887  048E                     	line	126
 12888                           	
 12889                           l4325:	
 12890  048E                     ;dispLCD4vias.c: 126:     LCDbits.EN = 1;
 12891                           	bcf	status, 5	;RP0=0, select bank0
 12892  048E  1283               	bcf	status, 6	;RP1=0, select bank0
 12893  048F  1303               	bsf	(6),5	;volatile
 12894  0490  1686               	line	127
 12895                           	
 12896                           l30:	
 12897  0491                     	return
 12898  0491  0008               	opt stack 0
 12899                           GLOBAL	__end_of_dispLCD_instReg
 12900                           	__end_of_dispLCD_instReg:
 12901  0492                     	signat	_dispLCD_instReg,4217
 12902                           	global	_dispLCD_dataReg
 12903                           
 12904 ;; *************** function _dispLCD_dataReg *****************
 12905 ;; Defined at:
 12906 ;;		line 130 in file "dispLCD4vias.c"
 12907 ;; Parameters:    Size  Location     Type
 12908 ;;  d               1    wreg     unsigned char 
 12909 ;; Auto vars:     Size  Location     Type
 12910 ;;  d               1    1[BANK0 ] unsigned char 
 12911 ;; Return value:  Size  Location     Type
 12912 ;;                  1    wreg      void 
 12913 ;; Registers used:
 12914 ;;		wreg, status,2, status,0
 12915 ;; Tracked objects:
 12916 ;;		On entry : 0/0
 12917 ;;		On exit  : 0/0
 12918 ;;		Unchanged: 0/0
 12919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12920 ;;      Params:         0       0       0       0       0
 12921 ;;      Locals:         0       1       0       0       0
 12922 ;;      Temps:          0       1       0       0       0
 12923 ;;      Totals:         0       2       0       0       0
 12924 ;;Total ram usage:        2 bytes
 12925 ;; Hardware stack levels used:    1
 12926 ;; Hardware stack levels required when called:    2
 12927 ;; This function calls:
 12928 ;;		Nothing
 12929 ;; This function is called by:
 12930 ;;		_dispLCD
 12931 ;;		_dispLCD_num
 12932 ;;		_fifo_print
 12933 ;;		_printExec
 12934 ;;		_main
 12935 ;; This function uses a non-reentrant model
 12936 ;;
 12937                           psect	text45,local,class=CODE,delta=2,merge=1,group=0
 12938                           	line	130
 12939                           global __ptext45
 12940                           __ptext45:	;psect for function _dispLCD_dataReg
 12941  1725                     psect	text45
 12942                           	file	"dispLCD4vias.c"
 12943                           	line	130
 12944                           	global	__size_of_dispLCD_dataReg
 12945                           	__size_of_dispLCD_dataReg	equ	__end_of_dispLCD_dataReg-_dispLCD_dataReg
 12946  0031                     	
 12947                           _dispLCD_dataReg:	
 12948  1725                     ;incstack = 0
 12949                           	opt	stack 3
 12950                           ; Regs used in _dispLCD_dataReg: [wreg+status,2+status,0]
 12951                           ;dispLCD_dataReg@d stored from wreg
 12952                           	bcf	status, 5	;RP0=0, select bank0
 12953  1725  1283               	bcf	status, 6	;RP1=0, select bank0
 12954  1726  1303               	movwf	(dispLCD_dataReg@d)
 12955  1727  00A1               	line	132
 12956                           	
 12957                           l4371:	
 12958  1728                     ;dispLCD4vias.c: 130: void dispLCD_dataReg( unsigned char d );dispLCD4vias.c: 131: {;dis
                                 pLCD4vias.c: 132:     LCDbits.RS = 1;
 12959                           	bsf	(6),4	;volatile
 12960  1728  1606               	line	133
 12961                           	
 12962                           l4373:	
 12963  1729                     ;dispLCD4vias.c: 133:     LCDbits.BUS = d >> 4;
 12964                           	movf	(dispLCD_dataReg@d),w
 12965  1729  0821               	movwf	(??_dispLCD_dataReg+0)+0
 12966  172A  00A0               	movlw	04h
 12967  172B  3004               u3355:
 12968  172C                     	clrc
 12969  172C  1003               	rrf	(??_dispLCD_dataReg+0)+0,f
 12970  172D  0CA0               	addlw	-1
 12971  172E  3EFF               	skipz
 12972  172F  1D03               	goto	u3355
 12973  1730  2F2C               	movf	(6),w	;volatile
 12974  1731  0806               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
 12975  1732  0620               	andlw	not ((1<<4)-1)
 12976  1733  39F0               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
 12977  1734  0620               	movwf	(6)	;volatile
 12978  1735  0086               	line	134
 12979                           	
 12980                           l4375:	
 12981  1736                     ;dispLCD4vias.c: 134:     LCDbits.EN = 0;
 12982                           	bcf	(6),5	;volatile
 12983  1736  1286               	line	135
 12984                           	
 12985                           l4377:	
 12986  1737                     ;dispLCD4vias.c: 135:     _delay((unsigned long)((40)*(20000000/4000000.0)));
 12987                           	opt asmopt_push
 12988                           opt asmopt_off
 12989                           	movlw	65
 12990  1737  3041               	bcf	status, 5	;RP0=0, select bank0
 12991  1738  1283               	bcf	status, 6	;RP1=0, select bank0
 12992  1739  1303               movwf	((??_dispLCD_dataReg+0)+0),f
 12993  173A  00A0               	u4687:
 12994  173B                     decfsz	(??_dispLCD_dataReg+0)+0,f
 12995  173B  0BA0               	goto	u4687
 12996  173C  2F3B               	nop2
 12997  173D  2F3E               opt asmopt_pop
 12998                           
 12999                           	line	136
 13000                           	
 13001                           l4379:	
 13002  173E                     ;dispLCD4vias.c: 136:     LCDbits.EN = 1;
 13003                           	bcf	status, 5	;RP0=0, select bank0
 13004  173E  1283               	bcf	status, 6	;RP1=0, select bank0
 13005  173F  1303               	bsf	(6),5	;volatile
 13006  1740  1686               	line	138
 13007                           	
 13008                           l4381:	
 13009  1741                     ;dispLCD4vias.c: 138:     LCDbits.RS = 1;
 13010                           	bsf	(6),4	;volatile
 13011  1741  1606               	line	139
 13012                           	
 13013                           l4383:	
 13014  1742                     ;dispLCD4vias.c: 139:     LCDbits.BUS = d & 0x0F;
 13015                           	movlw	low(0Fh)
 13016  1742  300F               	andwf	(dispLCD_dataReg@d),w
 13017  1743  0521               	movwf	(??_dispLCD_dataReg+0)+0
 13018  1744  00A0               	movf	(6),w	;volatile
 13019  1745  0806               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
 13020  1746  0620               	andlw	not ((1<<4)-1)
 13021  1747  39F0               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
 13022  1748  0620               	movwf	(6)	;volatile
 13023  1749  0086               	line	140
 13024                           	
 13025                           l4385:	
 13026  174A                     ;dispLCD4vias.c: 140:     LCDbits.EN = 0;
 13027                           	bcf	(6),5	;volatile
 13028  174A  1286               	line	141
 13029                           ;dispLCD4vias.c: 141:     _delay((unsigned long)((40)*(20000000/4000000.0)));
 13030                           	opt asmopt_push
 13031                           opt asmopt_off
 13032                           	movlw	65
 13033  174B  3041               	bcf	status, 5	;RP0=0, select bank0
 13034  174C  1283               	bcf	status, 6	;RP1=0, select bank0
 13035  174D  1303               movwf	((??_dispLCD_dataReg+0)+0),f
 13036  174E  00A0               	u4697:
 13037  174F                     decfsz	(??_dispLCD_dataReg+0)+0,f
 13038  174F  0BA0               	goto	u4697
 13039  1750  2F4F               	nop2
 13040  1751  2F52               opt asmopt_pop
 13041                           
 13042                           	line	142
 13043                           	
 13044                           l4387:	
 13045  1752                     ;dispLCD4vias.c: 142:     LCDbits.EN = 1;
 13046                           	bcf	status, 5	;RP0=0, select bank0
 13047  1752  1283               	bcf	status, 6	;RP1=0, select bank0
 13048  1753  1303               	bsf	(6),5	;volatile
 13049  1754  1686               	line	143
 13050                           	
 13051                           l33:	
 13052  1755                     	return
 13053  1755  0008               	opt stack 0
 13054                           GLOBAL	__end_of_dispLCD_dataReg
 13055                           	__end_of_dispLCD_dataReg:
 13056  1756                     	signat	_dispLCD_dataReg,4217
 13057                           	global	_dignum_conc
 13058                           
 13059 ;; *************** function _dignum_conc *****************
 13060 ;; Defined at:
 13061 ;;		line 301 in file "fifo.c"
 13062 ;; Parameters:    Size  Location     Type
 13063 ;;  dig             1    wreg     unsigned char 
 13064 ;;  ptrNum          1    6[BANK0 ] PTR unsigned int 
 13065 ;;		 -> main@ciclos(2), main@num(2), 
 13066 ;; Auto vars:     Size  Location     Type
 13067 ;;  dig             1   11[BANK0 ] unsigned char 
 13068 ;; Return value:  Size  Location     Type
 13069 ;;                  1    wreg      void 
 13070 ;; Registers used:
 13071 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13072 ;; Tracked objects:
 13073 ;;		On entry : 0/0
 13074 ;;		On exit  : 0/0
 13075 ;;		Unchanged: 0/0
 13076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13077 ;;      Params:         0       1       0       0       0
 13078 ;;      Locals:         0       1       0       0       0
 13079 ;;      Temps:          0       4       0       0       0
 13080 ;;      Totals:         0       6       0       0       0
 13081 ;;Total ram usage:        6 bytes
 13082 ;; Hardware stack levels used:    1
 13083 ;; Hardware stack levels required when called:    3
 13084 ;; This function calls:
 13085 ;;		___wmul
 13086 ;; This function is called by:
 13087 ;;		_main
 13088 ;; This function uses a non-reentrant model
 13089 ;;
 13090                           psect	text46,local,class=CODE,delta=2,merge=1,group=0
 13091                           	file	"fifo.c"
 13092                           	line	301
 13093                           global __ptext46
 13094                           __ptext46:	;psect for function _dignum_conc
 13095  1697                     psect	text46
 13096                           	file	"fifo.c"
 13097                           	line	301
 13098                           	global	__size_of_dignum_conc
 13099                           	__size_of_dignum_conc	equ	__end_of_dignum_conc-_dignum_conc
 13100  002E                     	
 13101                           _dignum_conc:	
 13102  1697                     ;incstack = 0
 13103                           	opt	stack 4
 13104                           ; Regs used in _dignum_conc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13105                           ;dignum_conc@dig stored from wreg
 13106                           	bcf	status, 5	;RP0=0, select bank0
 13107  1697  1283               	bcf	status, 6	;RP1=0, select bank0
 13108  1698  1303               	movwf	(dignum_conc@dig)
 13109  1699  00AB               	line	303
 13110                           	
 13111                           l4845:	
 13112  169A                     ;fifo.c: 301: void dignum_conc(char dig, unsigned int * ptrNum );fifo.c: 302: {;fifo.c: 
                                 303:     *ptrNum = (*ptrNum * 10) + (dig - '0');
 13113                           	movf	(dignum_conc@ptrNum),w
 13114  169A  0826               	movwf	fsr0
 13115  169B  0084               	bcf	status, 7	;select IRP bank0
 13116  169C  1383               	movf	indf,w
 13117  169D  0800               	movwf	(___wmul@multiplier)
 13118  169E  00A0               	incf	fsr0,f
 13119  169F  0A84               	movf	indf,w
 13120  16A0  0800               	movwf	(___wmul@multiplier+1)
 13121  16A1  00A1               	movlw	0Ah
 13122  16A2  300A               	movwf	(___wmul@multiplicand)
 13123  16A3  00A2               	movlw	0
 13124  16A4  3000               	movwf	((___wmul@multiplicand))+1
 13125  16A5  00A3               	fcall	___wmul
 13126  16A6  160A  118A  263F  160A  118A  	bcf	status, 5	;RP0=0, select bank0
 13127  16AB  1283               	bcf	status, 6	;RP1=0, select bank0
 13128  16AC  1303               	movf	(dignum_conc@dig),w
 13129  16AD  082B               	addwf	(0+(?___wmul)),w
 13130  16AE  0720               	movwf	(??_dignum_conc+0)+0
 13131  16AF  00A7               	movf	(1+(?___wmul)),w
 13132  16B0  0821               	skipnc
 13133  16B1  1803               	incf	(1+(?___wmul)),w
 13134  16B2  0A21               	movwf	((??_dignum_conc+0)+0)+1
 13135  16B3  00A8               	movf	0+(??_dignum_conc+0)+0,w
 13136  16B4  0827               	addlw	low(0FFD0h)
 13137  16B5  3ED0               	movwf	(??_dignum_conc+2)+0
 13138  16B6  00A9               	movf	1+(??_dignum_conc+0)+0,w
 13139  16B7  0828               	skipnc
 13140  16B8  1803               	addlw	1
 13141  16B9  3E01               	addlw	high(0FFD0h)
 13142  16BA  3EFF               	movwf	1+(??_dignum_conc+2)+0
 13143  16BB  00AA               	movf	(dignum_conc@ptrNum),w
 13144  16BC  0826               	movwf	fsr0
 13145  16BD  0084               	movf	0+(??_dignum_conc+2)+0,w
 13146  16BE  0829               	bcf	status, 7	;select IRP bank0
 13147  16BF  1383               	movwf	indf
 13148  16C0  0080               	incf	fsr0,f
 13149  16C1  0A84               	movf	1+(??_dignum_conc+2)+0,w
 13150  16C2  082A               	movwf	indf
 13151  16C3  0080               	line	304
 13152                           	
 13153                           l218:	
 13154  16C4                     	return
 13155  16C4  0008               	opt stack 0
 13156                           GLOBAL	__end_of_dignum_conc
 13157                           	__end_of_dignum_conc:
 13158  16C5                     	signat	_dignum_conc,8313
 13159                           	global	___wmul
 13160                           
 13161 ;; *************** function ___wmul *****************
 13162 ;; Defined at:
 13163 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
 13164 ;; Parameters:    Size  Location     Type
 13165 ;;  multiplier      2    0[BANK0 ] unsigned int 
 13166 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 13167 ;; Auto vars:     Size  Location     Type
 13168 ;;  product         2    4[BANK0 ] unsigned int 
 13169 ;; Return value:  Size  Location     Type
 13170 ;;                  2    0[BANK0 ] unsigned int 
 13171 ;; Registers used:
 13172 ;;		wreg, status,2, status,0
 13173 ;; Tracked objects:
 13174 ;;		On entry : 0/0
 13175 ;;		On exit  : 0/0
 13176 ;;		Unchanged: 0/0
 13177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13178 ;;      Params:         0       4       0       0       0
 13179 ;;      Locals:         0       2       0       0       0
 13180 ;;      Temps:          0       0       0       0       0
 13181 ;;      Totals:         0       6       0       0       0
 13182 ;;Total ram usage:        6 bytes
 13183 ;; Hardware stack levels used:    1
 13184 ;; Hardware stack levels required when called:    2
 13185 ;; This function calls:
 13186 ;;		Nothing
 13187 ;; This function is called by:
 13188 ;;		_dignum_conc
 13189 ;; This function uses a non-reentrant model
 13190 ;;
 13191                           psect	text47,local,class=CODE,delta=2,merge=1,group=1
 13192                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
 13193                           	line	15
 13194                           global __ptext47
 13195                           __ptext47:	;psect for function ___wmul
 13196  163F                     psect	text47
 13197                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
 13198                           	line	15
 13199                           	global	__size_of___wmul
 13200                           	__size_of___wmul	equ	__end_of___wmul-___wmul
 13201  002A                     	
 13202                           ___wmul:	
 13203  163F                     ;incstack = 0
 13204                           	opt	stack 4
 13205                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13206                           	line	43
 13207                           	
 13208                           l4563:	
 13209  163F                     	bcf	status, 5	;RP0=0, select bank0
 13210  163F  1283               	bcf	status, 6	;RP1=0, select bank0
 13211  1640  1303               	clrf	(___wmul@product)
 13212  1641  01A4               	clrf	(___wmul@product+1)
 13213  1642  01A5               	goto	l4565
 13214  1643  2E44               	line	44
 13215                           	
 13216                           l695:	
 13217  1644                     	line	45
 13218                           	
 13219                           l4565:	
 13220  1644                     	btfss	(___wmul@multiplier),(0)&7
 13221  1644  1C20               	goto	u3741
 13222  1645  2E47               	goto	u3740
 13223  1646  2E48               u3741:
 13224  1647                     	goto	l696
 13225  1647  2E4E               u3740:
 13226  1648                     	line	46
 13227                           	
 13228                           l4567:	
 13229  1648                     	movf	(___wmul@multiplicand),w
 13230  1648  0822               	addwf	(___wmul@product),f
 13231  1649  07A4               	skipnc
 13232  164A  1803               	incf	(___wmul@product+1),f
 13233  164B  0AA5               	movf	(___wmul@multiplicand+1),w
 13234  164C  0823               	addwf	(___wmul@product+1),f
 13235  164D  07A5               	
 13236                           l696:	
 13237  164E                     	line	47
 13238                           	movlw	01h
 13239  164E  3001               	
 13240                           u3755:
 13241  164F                     	clrc
 13242  164F  1003               	rlf	(___wmul@multiplicand),f
 13243  1650  0DA2               	rlf	(___wmul@multiplicand+1),f
 13244  1651  0DA3               	addlw	-1
 13245  1652  3EFF               	skipz
 13246  1653  1D03               	goto	u3755
 13247  1654  2E4F               	line	48
 13248                           	
 13249                           l4569:	
 13250  1655                     	movlw	01h
 13251  1655  3001               	
 13252                           u3765:
 13253  1656                     	clrc
 13254  1656  1003               	rrf	(___wmul@multiplier+1),f
 13255  1657  0CA1               	rrf	(___wmul@multiplier),f
 13256  1658  0CA0               	addlw	-1
 13257  1659  3EFF               	skipz
 13258  165A  1D03               	goto	u3765
 13259  165B  2E56               	line	49
 13260                           	
 13261                           l4571:	
 13262  165C                     	movf	((___wmul@multiplier)),w
 13263  165C  0820               iorwf	((___wmul@multiplier+1)),w
 13264  165D  0421               	btfss	status,2
 13265  165E  1D03               	goto	u3771
 13266  165F  2E61               	goto	u3770
 13267  1660  2E62               u3771:
 13268  1661                     	goto	l4565
 13269  1661  2E44               u3770:
 13270  1662                     	goto	l4573
 13271  1662  2E63               	
 13272                           l697:	
 13273  1663                     	line	52
 13274                           	
 13275                           l4573:	
 13276  1663                     	movf	(___wmul@product+1),w
 13277  1663  0825               	movwf	(?___wmul+1)
 13278  1664  00A1               	movf	(___wmul@product),w
 13279  1665  0824               	movwf	(?___wmul)
 13280  1666  00A0               	goto	l698
 13281  1667  2E68               	
 13282                           l4575:	
 13283  1668                     	line	53
 13284                           	
 13285                           l698:	
 13286  1668                     	return
 13287  1668  0008               	opt stack 0
 13288                           GLOBAL	__end_of___wmul
 13289                           	__end_of___wmul:
 13290  1669                     	signat	___wmul,8314
 13291                           	global	_dignum_apagar
 13292                           
 13293 ;; *************** function _dignum_apagar *****************
 13294 ;; Defined at:
 13295 ;;		line 306 in file "fifo.c"
 13296 ;; Parameters:    Size  Location     Type
 13297 ;;  ptrNum          1    wreg     PTR unsigned int 
 13298 ;;		 -> main@ciclos(2), main@num(2), 
 13299 ;; Auto vars:     Size  Location     Type
 13300 ;;  ptrNum          1    8[BANK0 ] PTR unsigned int 
 13301 ;;		 -> main@ciclos(2), main@num(2), 
 13302 ;; Return value:  Size  Location     Type
 13303 ;;                  1    wreg      void 
 13304 ;; Registers used:
 13305 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13306 ;; Tracked objects:
 13307 ;;		On entry : 0/0
 13308 ;;		On exit  : 0/0
 13309 ;;		Unchanged: 0/0
 13310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13311 ;;      Params:         0       0       0       0       0
 13312 ;;      Locals:         0       1       0       0       0
 13313 ;;      Temps:          0       0       0       0       0
 13314 ;;      Totals:         0       1       0       0       0
 13315 ;;Total ram usage:        1 bytes
 13316 ;; Hardware stack levels used:    1
 13317 ;; Hardware stack levels required when called:    3
 13318 ;; This function calls:
 13319 ;;		___lwdiv
 13320 ;; This function is called by:
 13321 ;;		_main
 13322 ;; This function uses a non-reentrant model
 13323 ;;
 13324                           psect	text48,local,class=CODE,delta=2,merge=1,group=0
 13325                           	file	"fifo.c"
 13326                           	line	306
 13327                           global __ptext48
 13328                           __ptext48:	;psect for function _dignum_apagar
 13329  14F4                     psect	text48
 13330                           	file	"fifo.c"
 13331                           	line	306
 13332                           	global	__size_of_dignum_apagar
 13333                           	__size_of_dignum_apagar	equ	__end_of_dignum_apagar-_dignum_apagar
 13334  001F                     	
 13335                           _dignum_apagar:	
 13336  14F4                     ;incstack = 0
 13337                           	opt	stack 4
 13338                           ; Regs used in _dignum_apagar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13339                           ;dignum_apagar@ptrNum stored from wreg
 13340                           	bcf	status, 5	;RP0=0, select bank0
 13341  14F4  1283               	bcf	status, 6	;RP1=0, select bank0
 13342  14F5  1303               	movwf	(dignum_apagar@ptrNum)
 13343  14F6  00A8               	line	308
 13344                           	
 13345                           l4847:	
 13346  14F7                     ;fifo.c: 306: void dignum_apagar(unsigned int * ptrNum );fifo.c: 307: {;fifo.c: 308:    
                                  *ptrNum /= 10;
 13347                           	movlw	0Ah
 13348  14F7  300A               	movwf	(___lwdiv@divisor)
 13349  14F8  00A0               	movlw	0
 13350  14F9  3000               	movwf	((___lwdiv@divisor))+1
 13351  14FA  00A1               	movf	(dignum_apagar@ptrNum),w
 13352  14FB  0828               	movwf	fsr0
 13353  14FC  0084               	bcf	status, 7	;select IRP bank0
 13354  14FD  1383               	movf	indf,w
 13355  14FE  0800               	movwf	(___lwdiv@dividend)
 13356  14FF  00A2               	incf	fsr0,f
 13357  1500  0A84               	movf	indf,w
 13358  1501  0800               	movwf	(___lwdiv@dividend+1)
 13359  1502  00A3               	fcall	___lwdiv
 13360  1503  120A  118A  26EA  160A  118A  	bcf	status, 5	;RP0=0, select bank0
 13361  1508  1283               	bcf	status, 6	;RP1=0, select bank0
 13362  1509  1303               	movf	(dignum_apagar@ptrNum),w
 13363  150A  0828               	movwf	fsr0
 13364  150B  0084               	movf	(0+(?___lwdiv)),w
 13365  150C  0820               	bcf	status, 7	;select IRP bank0
 13366  150D  1383               	movwf	indf
 13367  150E  0080               	incf	fsr0,f
 13368  150F  0A84               	movf	(1+(?___lwdiv)),w
 13369  1510  0821               	movwf	indf
 13370  1511  0080               	line	309
 13371                           	
 13372                           l221:	
 13373  1512                     	return
 13374  1512  0008               	opt stack 0
 13375                           GLOBAL	__end_of_dignum_apagar
 13376                           	__end_of_dignum_apagar:
 13377  1513                     	signat	_dignum_apagar,4217
 13378                           	global	___lwdiv
 13379                           
 13380 ;; *************** function ___lwdiv *****************
 13381 ;; Defined at:
 13382 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 13383 ;; Parameters:    Size  Location     Type
 13384 ;;  divisor         2    0[BANK0 ] unsigned int 
 13385 ;;  dividend        2    2[BANK0 ] unsigned int 
 13386 ;; Auto vars:     Size  Location     Type
 13387 ;;  quotient        2    6[BANK0 ] unsigned int 
 13388 ;;  counter         1    5[BANK0 ] unsigned char 
 13389 ;; Return value:  Size  Location     Type
 13390 ;;                  2    0[BANK0 ] unsigned int 
 13391 ;; Registers used:
 13392 ;;		wreg, status,2, status,0
 13393 ;; Tracked objects:
 13394 ;;		On entry : 0/0
 13395 ;;		On exit  : 0/0
 13396 ;;		Unchanged: 0/0
 13397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13398 ;;      Params:         0       4       0       0       0
 13399 ;;      Locals:         0       3       0       0       0
 13400 ;;      Temps:          0       1       0       0       0
 13401 ;;      Totals:         0       8       0       0       0
 13402 ;;Total ram usage:        8 bytes
 13403 ;; Hardware stack levels used:    1
 13404 ;; Hardware stack levels required when called:    2
 13405 ;; This function calls:
 13406 ;;		Nothing
 13407 ;; This function is called by:
 13408 ;;		_dignum_apagar
 13409 ;; This function uses a non-reentrant model
 13410 ;;
 13411                           psect	text49,local,class=CODE,delta=2,merge=1,group=1
 13412                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 13413                           	line	5
 13414                           global __ptext49
 13415                           __ptext49:	;psect for function ___lwdiv
 13416  06EA                     psect	text49
 13417                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 13418                           	line	5
 13419                           	global	__size_of___lwdiv
 13420                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
 13421  004D                     	
 13422                           ___lwdiv:	
 13423  06EA                     ;incstack = 0
 13424                           	opt	stack 4
 13425                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 13426                           	line	13
 13427                           	
 13428                           l4577:	
 13429  06EA                     	bcf	status, 5	;RP0=0, select bank0
 13430  06EA  1283               	bcf	status, 6	;RP1=0, select bank0
 13431  06EB  1303               	clrf	(___lwdiv@quotient)
 13432  06EC  01A6               	clrf	(___lwdiv@quotient+1)
 13433  06ED  01A7               	line	14
 13434                           	
 13435                           l4579:	
 13436  06EE                     	movf	((___lwdiv@divisor)),w
 13437  06EE  0820               iorwf	((___lwdiv@divisor+1)),w
 13438  06EF  0421               	btfsc	status,2
 13439  06F0  1903               	goto	u3781
 13440  06F1  2EF3               	goto	u3780
 13441  06F2  2EF4               u3781:
 13442  06F3                     	goto	l4599
 13443  06F3  2F31               u3780:
 13444  06F4                     	line	15
 13445                           	
 13446                           l4581:	
 13447  06F4                     	clrf	(___lwdiv@counter)
 13448  06F4  01A5               	incf	(___lwdiv@counter),f
 13449  06F5  0AA5               	line	16
 13450                           	goto	l4587
 13451  06F6  2F03               	
 13452                           l963:	
 13453  06F7                     	line	17
 13454                           	
 13455                           l4583:	
 13456  06F7                     	movlw	01h
 13457  06F7  3001               	
 13458                           u3795:
 13459  06F8                     	clrc
 13460  06F8  1003               	rlf	(___lwdiv@divisor),f
 13461  06F9  0DA0               	rlf	(___lwdiv@divisor+1),f
 13462  06FA  0DA1               	addlw	-1
 13463  06FB  3EFF               	skipz
 13464  06FC  1D03               	goto	u3795
 13465  06FD  2EF8               	line	18
 13466                           	
 13467                           l4585:	
 13468  06FE                     	movlw	low(01h)
 13469  06FE  3001               	movwf	(??___lwdiv+0)+0
 13470  06FF  00A4               	movf	(??___lwdiv+0)+0,w
 13471  0700  0824               	addwf	(___lwdiv@counter),f
 13472  0701  07A5               	goto	l4587
 13473  0702  2F03               	line	19
 13474                           	
 13475                           l962:	
 13476  0703                     	line	16
 13477                           	
 13478                           l4587:	
 13479  0703                     	btfss	(___lwdiv@divisor+1),(15)&7
 13480  0703  1FA1               	goto	u3801
 13481  0704  2F06               	goto	u3800
 13482  0705  2F07               u3801:
 13483  0706                     	goto	l4583
 13484  0706  2EF7               u3800:
 13485  0707                     	goto	l4589
 13486  0707  2F09               	
 13487                           l964:	
 13488  0708                     	goto	l4589
 13489  0708  2F09               	line	20
 13490                           	
 13491                           l965:	
 13492  0709                     	line	21
 13493                           	
 13494                           l4589:	
 13495  0709                     	movlw	01h
 13496  0709  3001               	
 13497                           u3815:
 13498  070A                     	clrc
 13499  070A  1003               	rlf	(___lwdiv@quotient),f
 13500  070B  0DA6               	rlf	(___lwdiv@quotient+1),f
 13501  070C  0DA7               	addlw	-1
 13502  070D  3EFF               	skipz
 13503  070E  1D03               	goto	u3815
 13504  070F  2F0A               	line	22
 13505                           	movf	(___lwdiv@divisor+1),w
 13506  0710  0821               	subwf	(___lwdiv@dividend+1),w
 13507  0711  0223               	skipz
 13508  0712  1D03               	goto	u3825
 13509  0713  2F16               	movf	(___lwdiv@divisor),w
 13510  0714  0820               	subwf	(___lwdiv@dividend),w
 13511  0715  0222               u3825:
 13512  0716                     	skipc
 13513  0716  1C03               	goto	u3821
 13514  0717  2F19               	goto	u3820
 13515  0718  2F1A               u3821:
 13516  0719                     	goto	l4595
 13517  0719  2F22               u3820:
 13518  071A                     	line	23
 13519                           	
 13520                           l4591:	
 13521  071A                     	movf	(___lwdiv@divisor),w
 13522  071A  0820               	subwf	(___lwdiv@dividend),f
 13523  071B  02A2               	movf	(___lwdiv@divisor+1),w
 13524  071C  0821               	skipc
 13525  071D  1C03               	decf	(___lwdiv@dividend+1),f
 13526  071E  03A3               	subwf	(___lwdiv@dividend+1),f
 13527  071F  02A3               	line	24
 13528                           	
 13529                           l4593:	
 13530  0720                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
 13531  0720  1426               	goto	l4595
 13532  0721  2F22               	line	25
 13533                           	
 13534                           l966:	
 13535  0722                     	line	26
 13536                           	
 13537                           l4595:	
 13538  0722                     	movlw	01h
 13539  0722  3001               	
 13540                           u3835:
 13541  0723                     	clrc
 13542  0723  1003               	rrf	(___lwdiv@divisor+1),f
 13543  0724  0CA1               	rrf	(___lwdiv@divisor),f
 13544  0725  0CA0               	addlw	-1
 13545  0726  3EFF               	skipz
 13546  0727  1D03               	goto	u3835
 13547  0728  2F23               	line	27
 13548                           	
 13549                           l4597:	
 13550  0729                     	movlw	01h
 13551  0729  3001               	subwf	(___lwdiv@counter),f
 13552  072A  02A5               	btfss	status,2
 13553  072B  1D03               	goto	u3841
 13554  072C  2F2E               	goto	u3840
 13555  072D  2F2F               u3841:
 13556  072E                     	goto	l4589
 13557  072E  2F09               u3840:
 13558  072F                     	goto	l4599
 13559  072F  2F31               	
 13560                           l967:	
 13561  0730                     	goto	l4599
 13562  0730  2F31               	line	28
 13563                           	
 13564                           l961:	
 13565  0731                     	line	29
 13566                           	
 13567                           l4599:	
 13568  0731                     	movf	(___lwdiv@quotient+1),w
 13569  0731  0827               	movwf	(?___lwdiv+1)
 13570  0732  00A1               	movf	(___lwdiv@quotient),w
 13571  0733  0826               	movwf	(?___lwdiv)
 13572  0734  00A0               	goto	l968
 13573  0735  2F36               	
 13574                           l4601:	
 13575  0736                     	line	30
 13576                           	
 13577                           l968:	
 13578  0736                     	return
 13579  0736  0008               	opt stack 0
 13580                           GLOBAL	__end_of___lwdiv
 13581                           	__end_of___lwdiv:
 13582  0737                     	signat	___lwdiv,8314
 13583                           	global	_addIndicePassos
 13584                           
 13585 ;; *************** function _addIndicePassos *****************
 13586 ;; Defined at:
 13587 ;;		line 17 in file "fifo.c"
 13588 ;; Parameters:    Size  Location     Type
 13589 ;;		None
 13590 ;; Auto vars:     Size  Location     Type
 13591 ;;		None
 13592 ;; Return value:  Size  Location     Type
 13593 ;;                  1    wreg      void 
 13594 ;; Registers used:
 13595 ;;		wreg, status,2, status,0
 13596 ;; Tracked objects:
 13597 ;;		On entry : 0/0
 13598 ;;		On exit  : 0/0
 13599 ;;		Unchanged: 0/0
 13600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13601 ;;      Params:         0       0       0       0       0
 13602 ;;      Locals:         0       0       0       0       0
 13603 ;;      Temps:          0       1       0       0       0
 13604 ;;      Totals:         0       1       0       0       0
 13605 ;;Total ram usage:        1 bytes
 13606 ;; Hardware stack levels used:    1
 13607 ;; Hardware stack levels required when called:    2
 13608 ;; This function calls:
 13609 ;;		Nothing
 13610 ;; This function is called by:
 13611 ;;		_main
 13612 ;; This function uses a non-reentrant model
 13613 ;;
 13614                           psect	text50,local,class=CODE,delta=2,merge=1,group=0
 13615                           	file	"fifo.c"
 13616                           	line	17
 13617                           global __ptext50
 13618                           __ptext50:	;psect for function _addIndicePassos
 13619  1442                     psect	text50
 13620                           	file	"fifo.c"
 13621                           	line	17
 13622                           	global	__size_of_addIndicePassos
 13623                           	__size_of_addIndicePassos	equ	__end_of_addIndicePassos-_addIndicePassos
 13624  000E                     	
 13625                           _addIndicePassos:	
 13626  1442                     ;incstack = 0
 13627                           	opt	stack 5
 13628                           ; Regs used in _addIndicePassos: [wreg+status,2+status,0]
 13629                           	line	19
 13630                           	
 13631                           l4643:	
 13632  1442                     ;fifo.c: 19:     if(indice_passos < ind_fila)
 13633                           	bcf	status, 5	;RP0=0, select bank0
 13634  1442  1283               	bcf	status, 6	;RP1=0, select bank0
 13635  1443  1303               	movf	(_ind_fila),w
 13636  1444  0859               	subwf	(_indice_passos),w
 13637  1445  027B               	skipnc
 13638  1446  1803               	goto	u3861
 13639  1447  2C49               	goto	u3860
 13640  1448  2C4A               u3861:
 13641  1449                     	goto	l89
 13642  1449  2C4F               u3860:
 13643  144A                     	line	20
 13644                           	
 13645                           l4645:	
 13646  144A                     ;fifo.c: 20:         indice_passos++;
 13647                           	movlw	low(01h)
 13648  144A  3001               	movwf	(??_addIndicePassos+0)+0
 13649  144B  00A0               	movf	(??_addIndicePassos+0)+0,w
 13650  144C  0820               	addwf	(_indice_passos),f
 13651  144D  07FB               	goto	l89
 13652  144E  2C4F               	
 13653                           l88:	
 13654  144F                     	line	21
 13655                           	
 13656                           l89:	
 13657  144F                     	return
 13658  144F  0008               	opt stack 0
 13659                           GLOBAL	__end_of_addIndicePassos
 13660                           	__end_of_addIndicePassos:
 13661  1450                     	signat	_addIndicePassos,89
 13662                           	global	_addContCiclos
 13663                           
 13664 ;; *************** function _addContCiclos *****************
 13665 ;; Defined at:
 13666 ;;		line 57 in file "fifo.c"
 13667 ;; Parameters:    Size  Location     Type
 13668 ;;		None
 13669 ;; Auto vars:     Size  Location     Type
 13670 ;;		None
 13671 ;; Return value:  Size  Location     Type
 13672 ;;                  1    wreg      void 
 13673 ;; Registers used:
 13674 ;;		wreg
 13675 ;; Tracked objects:
 13676 ;;		On entry : 0/0
 13677 ;;		On exit  : 0/0
 13678 ;;		Unchanged: 0/0
 13679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13680 ;;      Params:         0       0       0       0       0
 13681 ;;      Locals:         0       0       0       0       0
 13682 ;;      Temps:          0       0       0       0       0
 13683 ;;      Totals:         0       0       0       0       0
 13684 ;;Total ram usage:        0 bytes
 13685 ;; Hardware stack levels used:    1
 13686 ;; Hardware stack levels required when called:    2
 13687 ;; This function calls:
 13688 ;;		Nothing
 13689 ;; This function is called by:
 13690 ;;		_main
 13691 ;; This function uses a non-reentrant model
 13692 ;;
 13693                           psect	text51,local,class=CODE,delta=2,merge=1,group=0
 13694                           	line	57
 13695                           global __ptext51
 13696                           __ptext51:	;psect for function _addContCiclos
 13697  13DB                     psect	text51
 13698                           	file	"fifo.c"
 13699                           	line	57
 13700                           	global	__size_of_addContCiclos
 13701                           	__size_of_addContCiclos	equ	__end_of_addContCiclos-_addContCiclos
 13702  0007                     	
 13703                           _addContCiclos:	
 13704  13DB                     ;incstack = 0
 13705                           	opt	stack 5
 13706                           ; Regs used in _addContCiclos: [wreg]
 13707                           	line	59
 13708                           	
 13709                           l4659:	
 13710  13DB                     ;fifo.c: 59:     cont_ciclos++;
 13711                           	movlw	01h
 13712  13DB  3001               	addwf	(_cont_ciclos),f
 13713  13DC  07F6               	skipnc
 13714  13DD  1803               	incf	(_cont_ciclos+1),f
 13715  13DE  0AF7               	movlw	0
 13716  13DF  3000               	addwf	(_cont_ciclos+1),f
 13717  13E0  07F7               	line	60
 13718                           	
 13719                           l111:	
 13720  13E1                     	return
 13721  13E1  0008               	opt stack 0
 13722                           GLOBAL	__end_of_addContCiclos
 13723                           	__end_of_addContCiclos:
 13724  13E2                     	signat	_addContCiclos,89
 13725                           	global	___lmul
 13726                           
 13727 ;; *************** function ___lmul *****************
 13728 ;; Defined at:
 13729 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 13730 ;; Parameters:    Size  Location     Type
 13731 ;;  multiplier      4    0[BANK0 ] unsigned long 
 13732 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 13733 ;; Auto vars:     Size  Location     Type
 13734 ;;  product         4    9[BANK0 ] unsigned long 
 13735 ;; Return value:  Size  Location     Type
 13736 ;;                  4    0[BANK0 ] unsigned long 
 13737 ;; Registers used:
 13738 ;;		wreg, status,2, status,0
 13739 ;; Tracked objects:
 13740 ;;		On entry : 0/0
 13741 ;;		On exit  : 0/0
 13742 ;;		Unchanged: 0/0
 13743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13744 ;;      Params:         0       8       0       0       0
 13745 ;;      Locals:         0       4       0       0       0
 13746 ;;      Temps:          0       1       0       0       0
 13747 ;;      Totals:         0      13       0       0       0
 13748 ;;Total ram usage:       13 bytes
 13749 ;; Hardware stack levels used:    1
 13750 ;; Hardware stack levels required when called:    2
 13751 ;; This function calls:
 13752 ;;		Nothing
 13753 ;; This function is called by:
 13754 ;;		_main
 13755 ;; This function uses a non-reentrant model
 13756 ;;
 13757                           psect	text52,local,class=CODE,delta=2,merge=1,group=1
 13758                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 13759                           	line	15
 13760                           global __ptext52
 13761                           __ptext52:	;psect for function ___lmul
 13762  0737                     psect	text52
 13763                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 13764                           	line	15
 13765                           	global	__size_of___lmul
 13766                           	__size_of___lmul	equ	__end_of___lmul-___lmul
 13767  004C                     	
 13768                           ___lmul:	
 13769  0737                     ;incstack = 0
 13770                           	opt	stack 5
 13771                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 13772                           	line	119
 13773                           	
 13774                           l5057:	
 13775  0737                     	movlw	high highword(0)
 13776  0737  3000               	bcf	status, 5	;RP0=0, select bank0
 13777  0738  1283               	bcf	status, 6	;RP1=0, select bank0
 13778  0739  1303               	movwf	(___lmul@product+3)
 13779  073A  00AC               	movlw	low highword(0)
 13780  073B  3000               	movwf	(___lmul@product+2)
 13781  073C  00AB               	movlw	high(0)
 13782  073D  3000               	movwf	(___lmul@product+1)
 13783  073E  00AA               	movlw	low(0)
 13784  073F  3000               	movwf	(___lmul@product)
 13785  0740  00A9               
 13786                           	goto	l5059
 13787  0741  2F42               	line	120
 13788                           	
 13789                           l707:	
 13790  0742                     	line	121
 13791                           	
 13792                           l5059:	
 13793  0742                     	btfss	(___lmul@multiplier),(0)&7
 13794  0742  1C20               	goto	u4151
 13795  0743  2F45               	goto	u4150
 13796  0744  2F46               u4151:
 13797  0745                     	goto	l5063
 13798  0745  2F5E               u4150:
 13799  0746                     	line	122
 13800                           	
 13801                           l5061:	
 13802  0746                     	movf	(___lmul@multiplicand),w
 13803  0746  0824               	addwf	(___lmul@product),f
 13804  0747  07A9               	movf	(___lmul@multiplicand+1),w
 13805  0748  0825               	clrz
 13806  0749  1103               	skipnc
 13807  074A  1803               	addlw	1
 13808  074B  3E01               	skipnz
 13809  074C  1903               	goto	u4161
 13810  074D  2F4F               	addwf	(___lmul@product+1),f
 13811  074E  07AA               u4161:
 13812  074F                     	movf	(___lmul@multiplicand+2),w
 13813  074F  0826               	clrz
 13814  0750  1103               	skipnc
 13815  0751  1803               	addlw	1
 13816  0752  3E01               	skipnz
 13817  0753  1903               	goto	u4162
 13818  0754  2F56               	addwf	(___lmul@product+2),f
 13819  0755  07AB               u4162:
 13820  0756                     	movf	(___lmul@multiplicand+3),w
 13821  0756  0827               	clrz
 13822  0757  1103               	skipnc
 13823  0758  1803               	addlw	1
 13824  0759  3E01               	skipnz
 13825  075A  1903               	goto	u4163
 13826  075B  2F5D               	addwf	(___lmul@product+3),f
 13827  075C  07AC               u4163:
 13828  075D                     
 13829                           	goto	l5063
 13830  075D  2F5E               	
 13831                           l708:	
 13832  075E                     	line	123
 13833                           	
 13834                           l5063:	
 13835  075E                     	movlw	01h
 13836  075E  3001               	movwf	(??___lmul+0)+0
 13837  075F  00A8               u4175:
 13838  0760                     	clrc
 13839  0760  1003               	rlf	(___lmul@multiplicand),f
 13840  0761  0DA4               	rlf	(___lmul@multiplicand+1),f
 13841  0762  0DA5               	rlf	(___lmul@multiplicand+2),f
 13842  0763  0DA6               	rlf	(___lmul@multiplicand+3),f
 13843  0764  0DA7               	decfsz	(??___lmul+0)+0
 13844  0765  0BA8               	goto	u4175
 13845  0766  2F60               	line	124
 13846                           	
 13847                           l5065:	
 13848  0767                     	movlw	01h
 13849  0767  3001               u4185:
 13850  0768                     	clrc
 13851  0768  1003               	rrf	(___lmul@multiplier+3),f
 13852  0769  0CA3               	rrf	(___lmul@multiplier+2),f
 13853  076A  0CA2               	rrf	(___lmul@multiplier+1),f
 13854  076B  0CA1               	rrf	(___lmul@multiplier),f
 13855  076C  0CA0               	addlw	-1
 13856  076D  3EFF               	skipz
 13857  076E  1D03               	goto	u4185
 13858  076F  2F68               
 13859                           	line	125
 13860                           	movf	(___lmul@multiplier+3),w
 13861  0770  0823               	iorwf	(___lmul@multiplier+2),w
 13862  0771  0422               	iorwf	(___lmul@multiplier+1),w
 13863  0772  0421               	iorwf	(___lmul@multiplier),w
 13864  0773  0420               	skipz
 13865  0774  1D03               	goto	u4191
 13866  0775  2F77               	goto	u4190
 13867  0776  2F78               u4191:
 13868  0777                     	goto	l5059
 13869  0777  2F42               u4190:
 13870  0778                     	goto	l5067
 13871  0778  2F79               	
 13872                           l709:	
 13873  0779                     	line	128
 13874                           	
 13875                           l5067:	
 13876  0779                     	movf	(___lmul@product+3),w
 13877  0779  082C               	movwf	(?___lmul+3)
 13878  077A  00A3               	movf	(___lmul@product+2),w
 13879  077B  082B               	movwf	(?___lmul+2)
 13880  077C  00A2               	movf	(___lmul@product+1),w
 13881  077D  082A               	movwf	(?___lmul+1)
 13882  077E  00A1               	movf	(___lmul@product),w
 13883  077F  0829               	movwf	(?___lmul)
 13884  0780  00A0               
 13885                           	goto	l710
 13886  0781  2F82               	
 13887                           l5069:	
 13888  0782                     	line	129
 13889                           	
 13890                           l710:	
 13891  0782                     	return
 13892  0782  0008               	opt stack 0
 13893                           GLOBAL	__end_of___lmul
 13894                           	__end_of___lmul:
 13895  0783                     	signat	___lmul,8316
 13896                           	global	_irq
 13897                           
 13898 ;; *************** function _irq *****************
 13899 ;; Defined at:
 13900 ;;		line 32 in file "main.c"
 13901 ;; Parameters:    Size  Location     Type
 13902 ;;		None
 13903 ;; Auto vars:     Size  Location     Type
 13904 ;;		None
 13905 ;; Return value:  Size  Location     Type
 13906 ;;                  1    wreg      void 
 13907 ;; Registers used:
 13908 ;;		wreg, status,2, status,0, pclath, cstack
 13909 ;; Tracked objects:
 13910 ;;		On entry : 0/0
 13911 ;;		On exit  : 0/0
 13912 ;;		Unchanged: 0/0
 13913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13914 ;;      Params:         0       0       0       0       0
 13915 ;;      Locals:         0       0       0       0       0
 13916 ;;      Temps:          2       0       0       0       0
 13917 ;;      Totals:         2       0       0       0       0
 13918 ;;Total ram usage:        2 bytes
 13919 ;; Hardware stack levels used:    1
 13920 ;; Hardware stack levels required when called:    1
 13921 ;; This function calls:
 13922 ;;		_intt1_1ms
 13923 ;; This function is called by:
 13924 ;;		Interrupt level 1
 13925 ;; This function uses a non-reentrant model
 13926 ;;
 13927                           psect	text53,local,class=CODE,delta=2,merge=1,group=0
 13928                           	file	"main.c"
 13929                           	line	32
 13930                           global __ptext53
 13931                           __ptext53:	;psect for function _irq
 13932  14D6                     psect	text53
 13933                           	file	"main.c"
 13934                           	line	32
 13935                           	global	__size_of_irq
 13936                           	__size_of_irq	equ	__end_of_irq-_irq
 13937  001E                     	
 13938                           _irq:	
 13939  14D6                     ;incstack = 0
 13940                           	opt	stack 2
 13941                           ; Regs used in _irq: [wreg+status,2+status,0+pclath+cstack]
 13942                           psect	intentry,class=CODE,delta=2
 13943                           global __pintentry
 13944                           __pintentry:
 13945  0004                     global interrupt_function
 13946                           interrupt_function:
 13947  0004                     	global saved_w
 13948                           	saved_w	set	btemp+0
 13949  007E                     	movwf	saved_w
 13950  0004  00FE               	swapf	status,w
 13951  0005  0E03               	movwf	(??_irq+0)
 13952  0006  00F4               	movf	pclath,w
 13953  0007  080A               	movwf	(??_irq+1)
 13954  0008  00F5               	ljmp	_irq
 13955  0009  160A  118A  2CD6   psect	text53
 13956                           	line	34
 13957                           	
 13958                           i1l3573:	
 13959  14D6                     ;main.c: 34:     INTCONbits.GIE = 0;
 13960                           	bcf	(11),7	;volatile
 13961  14D6  138B               	line	35
 13962                           ;main.c: 35:     if(PIR1bits.TMR1IF && PIE1bits.TMR1IE)
 13963                           	bcf	status, 5	;RP0=0, select bank0
 13964  14D7  1283               	bcf	status, 6	;RP1=0, select bank0
 13965  14D8  1303               	btfss	(12),0	;volatile
 13966  14D9  1C0C               	goto	u274_21
 13967  14DA  2CDC               	goto	u274_20
 13968  14DB  2CDD               u274_21:
 13969  14DC                     	goto	i1l3581
 13970  14DC  2CEC               u274_20:
 13971  14DD                     	
 13972                           i1l3575:	
 13973  14DD                     	bsf	status, 5	;RP0=1, select bank1
 13974  14DD  1683               	bcf	status, 6	;RP1=0, select bank1
 13975  14DE  1303               	btfss	(140)^080h,0	;volatile
 13976  14DF  1C0C               	goto	u275_21
 13977  14E0  2CE2               	goto	u275_20
 13978  14E1  2CE3               u275_21:
 13979  14E2                     	goto	i1l3581
 13980  14E2  2CEC               u275_20:
 13981  14E3                     	line	37
 13982                           	
 13983                           i1l3577:	
 13984  14E3                     ;main.c: 36:     {;main.c: 37:         PIR1bits.TMR1IF = 0;
 13985                           	bcf	status, 5	;RP0=0, select bank0
 13986  14E3  1283               	bcf	status, 6	;RP1=0, select bank0
 13987  14E4  1303               	bcf	(12),0	;volatile
 13988  14E5  100C               	line	39
 13989                           	
 13990                           i1l3579:	
 13991  14E6                     ;main.c: 39:         intt1_1ms();
 13992                           	fcall	_intt1_1ms
 13993  14E6  160A  118A  2669  160A  118A  	goto	i1l3581
 13994  14EB  2CEC               	line	40
 13995                           ;main.c: 40:     }
 13996                           	
 13997                           i1l344:	
 13998  14EC                     	line	41
 13999                           	
 14000                           i1l3581:	
 14001  14EC                     ;main.c: 41:     INTCONbits.GIE = 1;
 14002                           	bsf	(11),7	;volatile
 14003  14EC  178B               	line	42
 14004                           	
 14005                           i1l345:	
 14006  14ED                     	movf	(??_irq+1),w
 14007  14ED  0875               	movwf	pclath
 14008  14EE  008A               	swapf	(??_irq+0)^0FFFFFF80h,w
 14009  14EF  0E74               	movwf	status
 14010  14F0  0083               	swapf	saved_w,f
 14011  14F1  0EFE               	swapf	saved_w,w
 14012  14F2  0E7E               	retfie
 14013  14F3  0009               	opt stack 0
 14014                           GLOBAL	__end_of_irq
 14015                           	__end_of_irq:
 14016  14F4                     	signat	_irq,89
 14017                           	global	_intt1_1ms
 14018                           
 14019 ;; *************** function _intt1_1ms *****************
 14020 ;; Defined at:
 14021 ;;		line 5 in file "timer1.c"
 14022 ;; Parameters:    Size  Location     Type
 14023 ;;		None
 14024 ;; Auto vars:     Size  Location     Type
 14025 ;;		None
 14026 ;; Return value:  Size  Location     Type
 14027 ;;                  1    wreg      void 
 14028 ;; Registers used:
 14029 ;;		wreg
 14030 ;; Tracked objects:
 14031 ;;		On entry : 0/0
 14032 ;;		On exit  : 0/0
 14033 ;;		Unchanged: 0/0
 14034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14035 ;;      Params:         0       0       0       0       0
 14036 ;;      Locals:         0       0       0       0       0
 14037 ;;      Temps:          4       0       0       0       0
 14038 ;;      Totals:         4       0       0       0       0
 14039 ;;Total ram usage:        4 bytes
 14040 ;; Hardware stack levels used:    1
 14041 ;; This function calls:
 14042 ;;		Nothing
 14043 ;; This function is called by:
 14044 ;;		_irq
 14045 ;; This function uses a non-reentrant model
 14046 ;;
 14047                           psect	text54,local,class=CODE,delta=2,merge=1,group=0
 14048                           	file	"timer1.c"
 14049                           	line	5
 14050                           global __ptext54
 14051                           __ptext54:	;psect for function _intt1_1ms
 14052  1669                     psect	text54
 14053                           	file	"timer1.c"
 14054                           	line	5
 14055                           	global	__size_of_intt1_1ms
 14056                           	__size_of_intt1_1ms	equ	__end_of_intt1_1ms-_intt1_1ms
 14057  002E                     	
 14058                           _intt1_1ms:	
 14059  1669                     ;incstack = 0
 14060                           	opt	stack 2
 14061                           ; Regs used in _intt1_1ms: [wreg]
 14062                           	line	7
 14063                           	
 14064                           i1l3357:	
 14065  1669                     ;timer1.c: 7:     TMR1H = ((65536-625)>>8) & 0x00FF;
 14066                           	movlw	low(0FDh)
 14067  1669  30FD               	bcf	status, 5	;RP0=0, select bank0
 14068  166A  1283               	bcf	status, 6	;RP1=0, select bank0
 14069  166B  1303               	movwf	(15)	;volatile
 14070  166C  008F               	line	8
 14071                           ;timer1.c: 8:     TMR1L = (65536-625) & 0x00FF;
 14072                           	movlw	low(08Fh)
 14073  166D  308F               	movwf	(14)	;volatile
 14074  166E  008E               	line	10
 14075                           ;timer1.c: 10:     if(t1cont)
 14076                           	movf	(_t1cont+3),w
 14077  166F  085D               	iorwf	(_t1cont+2),w
 14078  1670  045C               	iorwf	(_t1cont+1),w
 14079  1671  045B               	iorwf	(_t1cont),w
 14080  1672  045A               	skipnz
 14081  1673  1903               	goto	u262_21
 14082  1674  2E76               	goto	u262_20
 14083  1675  2E77               u262_21:
 14084  1676                     	goto	i1l599
 14085  1676  2E94               u262_20:
 14086  1677                     	line	11
 14087                           	
 14088                           i1l3359:	
 14089  1677                     ;timer1.c: 11:         --t1cont;
 14090                           	movlw	01h
 14091  1677  3001               	movwf	((??_intt1_1ms+0)+0)
 14092  1678  00F0               	movlw	0
 14093  1679  3000               	movwf	((??_intt1_1ms+0)+0+1)
 14094  167A  00F1               	movlw	0
 14095  167B  3000               	movwf	((??_intt1_1ms+0)+0+2)
 14096  167C  00F2               	movlw	0
 14097  167D  3000               	movwf	((??_intt1_1ms+0)+0+3)
 14098  167E  00F3               	movf	0+(??_intt1_1ms+0)+0,w
 14099  167F  0870               	subwf	(_t1cont),f
 14100  1680  02DA               	movf	1+(??_intt1_1ms+0)+0,w
 14101  1681  0871               	skipc
 14102  1682  1C03               	incfsz	1+(??_intt1_1ms+0)+0,w
 14103  1683  0F71               	goto	u263_25
 14104  1684  2E86               	goto	u263_26
 14105  1685  2E87               u263_25:
 14106  1686                     	subwf	(_t1cont+1),f
 14107  1686  02DB               u263_26:
 14108  1687                     	movf	2+(??_intt1_1ms+0)+0,w
 14109  1687  0872               	skipc
 14110  1688  1C03               	incfsz	2+(??_intt1_1ms+0)+0,w
 14111  1689  0F72               	goto	u263_27
 14112  168A  2E8C               	goto	u263_28
 14113  168B  2E8D               u263_27:
 14114  168C                     	subwf	(_t1cont+2),f
 14115  168C  02DC               u263_28:
 14116  168D                     	movf	3+(??_intt1_1ms+0)+0,w
 14117  168D  0873               	skipc
 14118  168E  1C03               	incfsz	3+(??_intt1_1ms+0)+0,w
 14119  168F  0F73               	goto	u263_29
 14120  1690  2E92               	goto	u263_20
 14121  1691  2E93               u263_29:
 14122  1692                     	subwf	(_t1cont+3),f
 14123  1692  02DD               u263_20:
 14124  1693                     
 14125                           	goto	i1l601
 14126  1693  2E96               	line	12
 14127                           ;timer1.c: 12:     else
 14128                           	
 14129                           i1l599:	
 14130  1694                     	line	13
 14131                           ;timer1.c: 13:         T1CONbits.TMR1ON = 0;
 14132                           	bcf	(16),0	;volatile
 14133  1694  1010               	goto	i1l601
 14134  1695  2E96               	
 14135                           i1l600:	
 14136  1696                     	line	14
 14137                           	
 14138                           i1l601:	
 14139  1696                     	return
 14140  1696  0008               	opt stack 0
 14141                           GLOBAL	__end_of_intt1_1ms
 14142                           	__end_of_intt1_1ms:
 14143  1697                     	signat	_intt1_1ms,89
 14144                           global	___latbits
 14145                           ___latbits	equ	2
 14146  0002                     	global	btemp
 14147                           	btemp set 07Eh
 14148  007E                     
 14149                           	DABS	1,126,2	;btemp
 14150                           	global	wtemp0
 14151                           	wtemp0 set btemp+0
 14152  007E                     	end
 14153  0FFD  120A  118A  29ED   


Data Sizes:
    Strings     261
    Constant    0
    Data        36
    BSS         77
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     40      66
    BANK1            80     50      69
    BANK3            96      0      62
    BANK2            96      0       0

Pointer List with Targets:

    initSerialIO@ptrOut	PTR unsigned char  size(1) Largest target is 1
		 -> main@vetorOut(BANK1[1]), 

    initSerialIO@ptrIn	PTR unsigned char  size(1) Largest target is 1
		 -> main@vetorIn(BANK1[1]), 

    ptrSerialOut	PTR unsigned char  size(1) Largest target is 1
		 -> NULL(NULL[0]), main@vetorOut(BANK1[1]), 

    ptrSerialIn	PTR unsigned char  size(1) Largest target is 1
		 -> NULL(NULL[0]), main@vetorIn(BANK1[1]), 

    ler_sensor@ptr	PTR unsigned char  size(1) Largest target is 1
		 -> main@vetorIn(BANK1[1]), 

    set_passo@ptr	PTR unsigned char  size(1) Largest target is 1
		 -> main@vetorOut(BANK1[1]), 

    dignum_apagar@ptrNum	PTR unsigned int  size(1) Largest target is 2
		 -> main@ciclos(BANK1[2]), main@num(BANK1[2]), 

    dignum_conc@ptrNum	PTR unsigned int  size(1) Largest target is 2
		 -> main@ciclos(BANK1[2]), main@num(BANK1[2]), 

    sp__fifo_adrs	PTR unsigned char  size(1) Largest target is 62
		 -> fila(BANK3[62]), 

    dispLCD@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[17]), STR_17(CODE[17]), STR_16(CODE[17]), STR_15(CODE[17]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[17]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[8]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[13]), 
		 -> STR_2(CODE[2]), STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _irq in COMMON

    _irq->_intt1_1ms

Critical Paths under _main in BANK0

    _main->_printExec
    _teclado_borda->_teclado_scan
    _setT1->___lmul
    _serialIOscan->_serialIObyteShift
    _printExec->_dispLCD_num
    _posAtual->_fifo_lerPos
    _dispLCD_num->_dignum_tam
    _fifo_print->___awdiv
    _fifo_delete->_fifo_alinharPrint
    _fifo_add_tempo->_fifo_alinharPrint
    _fifo_add->_fifo_alinharPrint
    _fifo_alinharPrint->_dignum_tam
    _dignum_tam->___awdiv
    _dispLCD_init->_delay
    _dispLCD_clr->_dispLCD_instReg
    _dispLCD->_dispLCD_lincol
    _dispLCD_lincol->_dispLCD_instReg
    _dignum_conc->___wmul
    _dignum_apagar->___lwdiv

Critical Paths under _irq in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _irq in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _irq in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _irq in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                57    57      0   40509
                                             36 BANK0      4     4      0
                                              0 BANK1     50    50      0
                             ___lmul
                      _addContCiclos
                    _addIndicePassos
                        _alt_atuador
                              _delay
                      _dignum_apagar
                        _dignum_conc
                            _dispLCD
                        _dispLCD_clr
                    _dispLCD_dataReg
                       _dispLCD_init
                     _dispLCD_lincol
                        _dispLCD_num
                           _fifo_add
                     _fifo_add_ciclo
                     _fifo_add_tempo
                        _fifo_delete
                    _fifo_disponivel
                        _fifo_indice
               _fifo_indicePrint_dec
               _fifo_indicePrint_inc
                        _fifo_lerPos
                         _fifo_print
                           _fifo_tam
                          _getCiclos
                      _getContCiclos
                    _getIndicePassos
                       _initSerialIO
                     _init_atuadores
                        _ler_atuador
                         _ler_sensor
                          _printExec
                    _resetContCiclos
                  _resetIndicePassos
                       _serialIOscan
                              _setT1
                          _set_passo
                           _statusT1
                      _teclado_borda
                       _teclado_init
                        _timer1_init
 ---------------------------------------------------------------------------------
 (1) _timer1_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _teclado_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _teclado_borda                                        3     3      0     340
                                              7 BANK0      3     3      0
                       _teclado_scan
 ---------------------------------------------------------------------------------
 (2) _teclado_scan                                         7     7      0     204
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) _statusT1                                             4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _set_passo                                            4     3      1     369
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _setT1                                                4     0      4     481
                                             13 BANK0      4     0      4
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _serialIOscan                                         5     5      0     300
                                              4 BANK0      5     5      0
                  _serialIObyteShift
                       _serialIOload
 ---------------------------------------------------------------------------------
 (2) _serialIOload                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _serialIObyteShift                                    4     4      0     167
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _resetIndicePassos                                    1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _resetContCiclos                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printExec                                           11    10      1   10142
                                             25 BANK0     11    10      1
                         _dignum_tam
                    _dispLCD_dataReg
                     _dispLCD_lincol
                        _dispLCD_num
                           _posAtual
 ---------------------------------------------------------------------------------
 (2) _posAtual                                             3     3      0      99
                                              1 BANK0      3     3      0
                        _fifo_lerPos
                    _getIndicePassos
 ---------------------------------------------------------------------------------
 (3) _getIndicePassos                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _fifo_lerPos                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _dispLCD_num                                         12     8      4    6397
                                             13 BANK0     12     8      4
                            ___awdiv
                            ___awmod
                         _dignum_tam (ARG)
                    _dispLCD_dataReg
                     _dispLCD_lincol
                        _fifo_indice (ARG)
                           _fifo_tam (ARG)
                      _getContCiclos (ARG)
                    _getIndicePassos (ARG)
 ---------------------------------------------------------------------------------
 (1) _ler_sensor                                           4     3      1     369
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _ler_atuador                                          3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _init_atuadores                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSerialIO                                         4     2      2     309
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _getContCiclos                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _getCiclos                                            6     4      2      40
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _fifo_tam                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fifo_print                                          10    10      0    4180
                                              9 BANK0     10    10      0
                            ___awdiv
                            ___awmod
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     973
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _fifo_indicePrint_inc                                 2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _fifo_indicePrint_dec                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fifo_indice                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fifo_disponivel                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fifo_delete                                          0     0      0    2225
                        _alt_atuador
                  _fifo_alinharPrint
 ---------------------------------------------------------------------------------
 (2) _alt_atuador                                          3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _fifo_add_tempo                                       2     2      0    2256
                                             19 BANK0      2     2      0
                  _fifo_alinharPrint
 ---------------------------------------------------------------------------------
 (1) _fifo_add_ciclo                                       3     1      2     152
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _fifo_add                                             2     2      0    2256
                                             19 BANK0      2     2      0
                  _fifo_alinharPrint
 ---------------------------------------------------------------------------------
 (2) _fifo_alinharPrint                                    6     6      0    2194
                                             13 BANK0      6     6      0
                         _dignum_tam
 ---------------------------------------------------------------------------------
 (2) _dignum_tam                                           4     2      2    1897
                                              9 BANK0      4     2      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1525
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _dispLCD_init                                         0     0      0     552
                              _delay
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (2) _delay                                                4     2      2     304
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _dispLCD_clr                                          0     0      0     248
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (1) _dispLCD                                              6     3      3    4496
                                              6 BANK0      6     3      3
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (3) _dispLCD_lincol                                       3     2      1    1030
                                              3 BANK0      3     2      1
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (4) _dispLCD_instReg                                      3     3      0     248
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _dispLCD_dataReg                                      2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _dignum_conc                                          6     5      1     589
                                              6 BANK0      6     5      1
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _dignum_apagar                                        1     1      0     555
                                              8 BANK0      1     1      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _addIndicePassos                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _addContCiclos                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8     316
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _irq                                                  2     2      0       0
                                              4 COMMON     2     2      0
                          _intt1_1ms
 ---------------------------------------------------------------------------------
 (6) _intt1_1ms                                            4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lmul
   _addContCiclos
   _addIndicePassos
   _alt_atuador
   _delay
   _dignum_apagar
     ___lwdiv
   _dignum_conc
     ___wmul
   _dispLCD
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
   _dispLCD_clr
     _dispLCD_instReg
   _dispLCD_dataReg
   _dispLCD_init
     _delay
     _dispLCD_instReg
   _dispLCD_lincol
     _dispLCD_instReg
   _dispLCD_num
     ___awdiv
     ___awmod
     _dignum_tam (ARG)
       ___awdiv
     _dispLCD_dataReg (ARG)
     _dispLCD_lincol (ARG)
       _dispLCD_instReg
     _fifo_indice (ARG)
     _fifo_tam (ARG)
     _getContCiclos (ARG)
     _getIndicePassos (ARG)
   _fifo_add
     _fifo_alinharPrint
       _dignum_tam
         ___awdiv
   _fifo_add_ciclo
   _fifo_add_tempo
     _fifo_alinharPrint
       _dignum_tam
         ___awdiv
   _fifo_delete
     _alt_atuador
     _fifo_alinharPrint
       _dignum_tam
         ___awdiv
   _fifo_disponivel
   _fifo_indice
   _fifo_indicePrint_dec
   _fifo_indicePrint_inc
   _fifo_lerPos
   _fifo_print
     ___awdiv
     ___awmod
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
   _fifo_tam
   _getCiclos
   _getContCiclos
   _getIndicePassos
   _initSerialIO
   _init_atuadores
   _ler_atuador
   _ler_sensor
   _printExec
     _dignum_tam
       ___awdiv
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
     _dispLCD_num
       ___awdiv
       ___awmod
       _dignum_tam (ARG)
         ___awdiv
       _dispLCD_dataReg (ARG)
       _dispLCD_lincol (ARG)
         _dispLCD_instReg
       _fifo_indice (ARG)
       _fifo_tam (ARG)
       _getContCiclos (ARG)
       _getIndicePassos (ARG)
     _posAtual
       _fifo_lerPos
       _getIndicePassos
   _resetContCiclos
   _resetIndicePassos
   _serialIOscan
     _serialIObyteShift
     _serialIOload
   _setT1
     ___lmul (ARG)
   _set_passo
   _statusT1
   _teclado_borda
     _teclado_scan
   _teclado_init
   _timer1_init

 _irq (ROOT)
   _intt1_1ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      3E       9       64.6%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     32      45       7       86.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     28      42       5       82.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      D1      12        0.0%
ABS                  0      0      D1       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Nov 30 08:24:06 2020

             ??_fifo_add_tempo 0033  __size_of_fifo_indicePrint_dec 000C  __size_of_fifo_indicePrint_inc 0030  
                            l5 1528                              l6 1514                              l7 1531  
                            l8 1531                              pc 0002                    __CFG_CP$OFF 0000  
                           l21 0437                             l30 0491                             l23 042C  
                           l24 043F                             l33 1755                             l25 0465  
                           l26 0486                             l42 07B0                             l50 02B9  
                           l43 0795                             l51 02D3                             l28 047B  
                           l36 14BC                             l44 07C1                             l60 032E  
                           l52 02D4                             l29 048E                             l45 07C1  
                           l61 037C                             l53 02F6                             l62 037C  
                           l54 0302                             l39 16F4                             l55 02F7  
                           l48 02A4                             l65 13E8                             l57 031F  
                           l49 02E8                             l58 0320                             l59 032E  
                           l88 144F                             l96 13CB                             l89 144F  
                           l99 13EF                   ___awdiv@sign 0026        __end_of_dispLCD_dataReg 1756  
                           fsr 0004            ___wmul@multiplicand 0022                   printExec@col 0042  
                 printExec@ind 0039                            l102 1579                            l111 13E1  
                          l200 0155                            l120 1796                            l201 0125  
                          l105 13F7                            l121 179B                            l130 17D8  
                          l210 0142                            l202 0126                            l122 17A2  
                          l131 17DF                            l203 0127                            l123 17AA  
                          l132 17FF                            l212 0147                            l204 0128  
                          l116 17AF                            l108 07FF                            l221 1512  
                          l213 0177                            l205 0129                            l117 1791  
                          l230 06A0                            l126 17E7                            l214 0181  
                          l206 012A                            l118 17C5                            l231 06E9  
                          l127 17CA                            l215 0181                            l207 012B  
                          l135 13D5                            l119 17C5                            l143 1411  
                          l224 1596                            l232 06C0                            l128 17FF  
                          l152 1610                            l208 012C                            l240 14D5  
                          l400 09B9                            l225 157E                            l233 06D2  
                          l129 17D1                            l153 15FD                            l401 09D4  
                          l218 16C4                            l226 159D                            l234 06D1  
                          l162 15E7                            l154 1615                            l170 13D0  
                          l250 0405                            l402 0A68                            l227 159F  
                          l235 06DB                            l163 15E6                            l243 03D4  
                          l251 040D                            l411 0A1D                            l403 09E1  
                          l236 06E0                            l164 15EC                            l180 1716  
                          l244 03A9                            l500 0633                            l420 0AEB  
                          l412 0A8F                            l404 09E2                            l237 06E9  
                          l157 15C0                            l173 141D                            l181 171E  
                          l245 040D                            l421 0AF5                            l413 0A2D  
                          l405 09E3                            l158 15BF                            l182 1724  
                          l190 0061                            l246 040C                            l430 0BD8  
                          l422 0B94                            l414 0A3B                            l406 09E4  
                          l159 15C5                            l167 1460                            l183 1724  
                          l191 0075                            l431 0BF3                            l423 0BA9  
                          l415 0A49                            l407 0A2C                            l192 017A  
                          l176 13C8                            l248 0400                            l440 0D1A  
                          l432 0C31                            l424 0BDA                            l416 0A57  
                          l360 023C                            l193 0089                            l505 154E  
                          l441 0D1B                            l433 0C28                            l425 0BB6  
                          l417 0A5F                            l409 0A0B                            l361 0201  
                          l186 1429                            l194 0179                            l530 064A  
                          l610 1441                            l506 1554                            l450 0D7B  
                          l442 0D38                            l434 0C46                            l426 0BF2  
                          l418 0A90                            l370 083E                            l362 022D  
                          l187 1429                            l179 171F                            l195 0124  
                          l531 0652                            l451 0DC6                            l443 0D39  
                          l435 0C55                            l427 0BBB                            l419 0A9E  
                          l371 083F                            l363 0245                            l196 00CE  
                          l540 0570                            l532 0657                            l604 1471  
                          l460 0E8E                            l452 0D90                            l444 0D77  
                          l436 0C56                            l428 0BC3                            l380 08E9  
                          l372 0876                            l364 0288                            l356 01EA  
                          l197 00CD                            l541 0570                            l525 066D  
                          l533 065F                            l461 0EB9                            l357 0E21  
                          l453 0D98                            l445 0D6E                            l437 0C87  
                          l429 0BC7                            l373 088C                            l365 024E  
                          l710 0782                            l198 010A                            l542 0511  
                          l534 0664                            l526 0638                            l470 0F3F  
                          l454 0DC7                            l446 0DA8                            l438 0C9D  
                          l382 08F0                            l374 088D                            l366 027A  
                          l358 01ED                            l199 0178                            l543 0519  
                          l607 1435                            l527 068F                            l535 068F  
                          l471 0F40                            l463 0EB0                            l367 0E74  
                          l455 0E04                            l447 0D78                            l439 0CD4  
                          l383 09B8                            l391 0951                            l375 089B  
                          l359 01F8                            l544 0521                            l528 063D  
                          l456 0FCF                            l480 0FCD                            l472 0F50  
                          l464 0EBA                            l448 0D79                            l384 08F7  
                          l376 08B6                            l368 0801                            l545 0529  
                          l529 0645                            l481 0FF9                            l473 0F59  
                          l465 0EF5                            l457 0E7A                            l449 0D7A  
                          l377 099D                            l393 0958                            l369 0828  
                          l538 054E                            l546 0531                            l570 161F  
                          l490 13FF                            l482 0FFA                            l458 0FF8  
                          l474 0F7B                            l466 0F0C                            l394 095F  
                          l386 091D                            l378 08C3                            l707 0742  
                          l547 0539                            l539 0509                            l571 1628  
                          l483 0FFA                            l475 0F89                            l467 0F0D  
                          l459 0E7B                            l708 075E                            l548 0541  
                          l572 1629                            l580 07F7                            l476 0F8A  
                          l468 0F23                            l396 0985                            l388 0924  
                          l709 0779                            l549 0549                            l573 1632  
                          l581 07FC                            l477 0FC9                            l469 0F24  
                          l389 092B                            l574 163B                            l566 13DA  
                          l398 098C                            l575 163E                            l495 05E2  
                          l479 0FBB                            l399 0993                            l840 04AF  
                          l584 178C                            l496 0631                            l841 04F4  
                          l569 1636                            l497 05F6                            l842 04C6  
                          l578 07F0                            l498 0626                            l843 04BA  
                          l579 07D2                            l499 061B                            l844 04CB  
                          l860 05C4                            l852 0580                            l845 04CC  
                          l861 05D0                            l853 058A                            l846 04E5  
                          l862 05D5                            l854 05C5                            l695 1644  
                          l847 04F3                            l839 04A1                            l855 059F  
                          l696 164E                            l848 04FF                            l856 0593  
                          l961 0731                            l697 1663                            l849 0504  
                          l857 05A4                            l962 0703                            l698 1668  
                          l858 05A5                            l963 06F7                            l859 05B6  
                          l964 0708                            l965 0709                            l966 0722  
                          l967 0730                            l968 0736                   __CFG_CPD$OFF 0000  
                          _irq 14D6                            fsr0 0004                            indf 0000  
      __end_of_dispLCD_instReg 0492                   ___awmod@sign 0026                   __CFG_FOSC$HS 0000  
                  main@meAtAux 00B7               alt_atuador@tecla 0022                   __CFG_LVP$OFF 0000  
                         l3001 05EE                           l3011 061F                           l3003 05F5  
                         l3013 0626                           l3005 05F6                           l3015 062A  
                         l3007 0605                           l3009 061B                           l3017 0631  
                         l3019 0633                           l5001 0517                           l5011 0521  
                         l5003 0518                           l4301 044B                           l5021 0530  
                         l5013 0527                           l5005 0519                           l5101 01E4  
                         l4303 044C                           l4311 0465                           l5031 053F  
                         l5023 0531                           l5015 0528                           l5007 051F  
                         l5111 01ED                           l5103 01E5                           l4321 047B  
                         l4313 0466                           l4305 0459                           l4401 157E  
                         l5041 0549                           l5033 0540                           l5025 0537  
                         l5017 0529                           l5009 0520                           l5201 08E9  
                         l5121 0200                           l5113 01F0                           l5105 01E6  
                         l4323 0486                           l4315 046E                           l4307 045A  
                         l4331 0499                           l4403 1591                           l4411 0571  
                         l5043 054B                           l5035 0541                           l5027 0538  
                         l5019 052F                           l5211 0916                           l5203 08F0  
                         l5131 022D                           l5123 0201                           l5115 01F7  
                         l5107 01E7                           l5061 0746                           l4325 048E  
                         l4317 046F                           l4309 0461                           l4341 04AF  
                         l4333 049E                           l4405 1596                           l4501 0690  
                         l4421 0584                           l4413 0574                           l5045 054C  
                         l5037 0547                           l5029 0539                           l5301 0AF2  
                         l5221 093F                           l5213 091D                           l5205 08F7  
                         l5141 0245                           l5133 0235                           l5125 0213  
                         l5117 01F8                           l5109 01E8                           l5063 075E  
                         l4319 0474                           l4351 04C6                           l4343 04B1  
                         l4335 04A1                           l4327 0492                           l4407 159D  
                         l4511 06A8                           l4503 0693                           l4431 059F  
                         l4423 058A                           l4415 0578                           l5047 054D  
                         l5039 0548                           l5311 0B59                           l5303 0AF5  
                         l5231 0967                           l5223 094A                           l5215 0924  
                         l5207 08FF                           l5151 026B                           l5143 0246  
                         l5127 021E                           l5119 01F9                           l5135 023C  
                         l5071 0182                           l5065 0767                           l5057 0737  
                         l4601 0736                           l4361 04EC                           l4353 04CC  
                         l4345 04B7                           l4337 04A5                           l4329 0495  
                         l4409 159F                           l4521 06D2                           l4513 06AC  
                         l4505 0698                           l4433 05A5                           l4425 0590  
                         l4441 05C5                           l4417 057D                           l5049 054E  
                         l5401 0D5F                           l5321 0BA9                           l5313 0B74  
                         l5305 0AFD                           l5241 0993                           l5233 0973  
                         l5225 0951                           l5217 092B                           l5209 090B  
                         l5161 0810                           l5153 0273                           l5145 024D  
                         l5137 023D                           l5129 0226                           l5081 01AF  
                         l5073 0191                           l5067 0779                           l5059 0742  
                         l4371 1728                           l4291 0425                           l4451 1514  
                         l4611 16CD                           l4603 16C5                           l4355 04DD  
                         l4347 04BA                           l4363 04F4                           l4339 04AA  
                         l4531 06E2                           l4523 06D9                           l4515 06C0  
                         l4507 069F                           l4443 05CA                           l4435 05AF  
                         l4427 0593                           l4419 0580                           l5411 0D98  
                         l5403 0D6A                           l5331 0BD9                           l5323 0BBB  
                         l5307 0B03                           l5315 0B94                           l5251 09CB  
                         l5243 099C                           l5235 097E                           l5227 0958  
                         l5219 0933                           l5171 0844                           l5163 081F  
                         l5155 027A                           l5147 024E                           l5139 0244  
                         l5091 01D6                           l5083 01B7                           l5075 0194  
                         l5069 0782                           l4381 1741                           l4373 1729  
                         l4293 042C                           l4285 0411                           l4453 1528  
                         l4621 16DC                           l4613 16CE                           l4605 16C8  
                         l4365 04F9                           l4357 04E3                           l4349 04C1  
                         l4525 06DA                           l4517 06C6                           l4509 06A0  
                         l4445 05D0                           l4437 05B6                           l4429 059A  
                         l4461 02A4                           l4533 14C0                           l4541 13D6  
                         l5421 0DD2                           l5413 0D9E                           l5405 0D7B  
                         l5341 0C0B                           l5325 0BC3                           l5333 0BDA  
                         l5317 0B9B                           l5309 0B3C                           l5261 0A0B  
                         l5253 09D4                           l5237 0985                           l5229 095F  
                         l5245 099D                           l5181 088D                           l5173 0851  
                         l5165 0828                           l5157 0282                           l5149 0260  
                         l5093 01DE                           l5085 01BF                           l5077 0195  
                         l4383 1742                           l4375 1736                           l4295 0437  
                         l4287 0412                           l4631 078A                           l4623 16E2  
                         l4615 16CF                           l4607 16CB                           l4367 04FF  
                         l4359 04E5                           l4527 06DB                           l4519 06CC  
                         l4711 15FD                           l4447 05D5                           l4439 05BD  
                         l4703 13D1                           l4471 02D4                           l4463 02AE  
                         l4455 0290                           l4391 13C9                           l4535 14C1  
                         l4551 162D                           l4543 1619                           l5431 0E1D  
                         l5423 0DEE                           l5415 0DA7                           l5407 0D87  
                         l5351 0C3D                           l5343 0C19                           l5335 0BF3  
                         l5327 0BC7                           l5319 0BA3                           l5271 0A3B  
                         l5263 0A1D                           l5255 09E4                           l5247 09B9  
                         l5239 098C                           l5191 08B6                           l5183 0892  
                         l5175 086D                           l5167 0837                           l5159 0801  
                         l5095 01E0                           l5087 01CD                           l5079 01AC  
                         l4385 174A                           l4377 1737                           l4297 043F  
                         l4289 041F                           l4633 0795                           l4641 13E2  
                         l4449 1513                           l4625 16E8                           l4617 16D0  
                         l4609 16CC                           l4369 0504                           l4529 06E0  
                         l4721 15AE                           l4713 1608                           l4705 15ED  
                         l4801 00BA                           l4481 0316                           l4473 02E8  
                         l4465 02B4                           l4457 0299                           l4393 13CB  
                         l4537 14D3                           l4561 163E                           l4553 1632  
                         l4545 161D                           l5441 0E80                           l5433 0E20  
                         l5425 0DFB                           l5409 0D90                           l5417 0DA8  
                         l5361 0C7E                           l5353 0C46                           l5345 0C24  
                         l5337 0BFF                           l5329 0BCF                           l5281 0A5F  
                         l5273 0A40                           l5265 0A23                           l5257 09EE  
                         l5249 09BE                           l5193 08C3                           l5185 089B  
                         l5177 0876                           l5169 083F                           l5097 01E2  
                         l5089 01D5                           l4643 1442                           l4571 165C  
                         l4563 163F                           l4387 1752                           l4379 173E  
                         l4299 0442                           l4635 07A5                           l4627 16EE  
                         l4619 16D3                           l4723 15B6                           l4731 15CF  
                         l4491 17E6                           l4707 15F4                           l4715 1610  
                         l4811 00ED                           l4803 00C0                           l4651 1579  
                         l4483 0320                           l4475 02F7                           l4467 02B9  
                         l4459 029E                           l4395 140B                           l4539 14D5  
                         l4555 1633                           l4547 1620                           l5451 0EB0  
                         l5443 0E8E                           l5427 0E04                           l5419 0DC7  
                         l5371 0CA2                           l5363 0C87                           l5355 0C4C  
                         l5339 0C05                           l5347 0C31                           l5291 0A9E  
                         l5283 0A67                           l5275 0A49                           l5267 0A2D  
                         l5259 0A03                           l5195 08CB                           l5187 08A0  
                         l5179 0885                           l5435 0E21                           l5099 01E3  
                         l4645 144A                           l4581 06F4                           l4573 1663  
                         l4565 1644                           l4389 14AB                           l4637 07AB  
                         l4629 0786                           l4725 15BA                           l4717 15A3  
                         l4741 1450                           l4733 15D4                           l4493 17E7  
                         l4709 15FA                           l4821 012C                           l4813 00F3  
                         l4805 00C6                           l4653 13F0                           l4901 1765  
                         l4661 1790                           l4485 0327                           l4477 02FD  
                         l4469 02D0                           l4397 1411                           l4549 1626  
                         l4557 1636                           l5461 0F0D                           l5453 0EC0  
                         l5445 0E9F                           l5429 0E15                           l5381 0CE8  
                         l5373 0CAF                           l5365 0C8F                           l5357 0C56  
                         l5349 0C37                           l5293 0AAA                           l5277 0A4E  
                         l5269 0A32                           l5285 0A68                           l5197 08D7  
                         l5189 08AD                           l5437 0E74                           l4591 071A  
                         l4583 06F7                           l4575 1668                           l4567 1648  
                         l4639 07B0                           l4399 157A                           l4719 15A9  
                         l4727 15C0                           l4743 1458                           l4735 15DD  
                         l4751 141D                           l4831 0147                           l4823 0133  
                         l4815 010A                           l4807 00CE                           l4655 13F7  
                         l4911 1772                           l4903 1766                           l4671 1799  
                         l4663 1791                           l4487 036E                           l4479 0302  
                         l4647 13E9                           l4559 163C                           l2991 05D6  
                         l5471 0F48                           l5463 0F1C                           l5455 0EEC  
                         l5447 0EA4                           l5439 0E7B                           l5391 0D2F  
                         l5383 0CF5                           l5375 0CCB                           l5367 0C94  
                         l5359 0C62                           l5295 0AC5                           l5287 0A90  
                         l5279 0A57                           l5199 08E2                           l4593 0720  
                         l4585 06FE                           l4577 06EA                           l4569 1655  
                         l4737 15E1                           l4729 15C9                           l4489 17C9  
                         l4745 13CC                           l4761 170F                           l5801 015D  
                         l4833 014D                           l4825 0139                           l4817 0111  
                         l4809 00D4                           l4753 13C6                           l4649 1555  
                         l4921 1784                           l4913 1775                           l4905 1769  
                         l4681 17A2                           l4673 179A                           l4665 1794  
                         l4657 07FD                           l2993 05DA                           l5481 0F80  
                         l5473 0F59                           l5465 0F24                           l5457 0EF5  
                         l5449 0EAA                           l5393 0D39                           l5385 0D11  
                         l5377 0CD4                           l5369 0C9D                           l5297 0AE2  
                         l5289 0A95                           l4659 13DB                           l4595 0722  
                         l4587 0703                           l4579 06EE                           l4739 15E7  
                         l5803 17F1                           l4747 13D0                           l4763 1716  
                         l4835 0154                           l4827 013D                           l4819 011D  
                         l4771 004F                           l4755 13C8                           l4923 1787  
                         l4915 1778                           l4907 176C                           l4691 17AD  
                         l4683 17A8                           l4675 179B                           l4667 1795  
                         l4851 038B                           l4931 1434                           l2995 05E1  
                         l5491 0FC0                           l5483 0F8A                           l5475 0F5E  
                         l5467 0F36                           l5459 0F03                           l5395 0D45  
                         l5387 0D1B                           l5379 0CE3                           l5299 0AEB  
                         l4597 0729                           l4589 0709                           l4845 169A  
                         l4749 1412                           l4765 171F                           l4757 16F5  
                         l4829 0142                           l4837 0155                           l4781 006E  
                         l4773 0055                           l4925 178A                           l4917 177B  
                         l4909 176F                           l4693 17AE                           l4685 17A9  
                         l4677 17A0                           l4669 1796                           l4861 03CD  
                         l4853 038F                           l4933 1436                           l2997 05E2  
                         l4941 1540                           l5485 0F91                           l5493 0FC9  
                         l5477 0F74                           l5469 0F40                           l5397 0D4B  
                         l5389 0D2A                           l4599 0731                           l4847 14F7  
                         l4767 141E                           l4759 16FD                           l4791 008D  
                         l4839 017A                           l4783 0075                           l4775 0059  
                         l4927 178B                           l4919 1781                           l4687 17AA  
                         l4679 17A1                           l4695 17AF                           l4871 03FB  
                         l4855 0393                           l4863 03D4                           l4951 07C9  
                         l4935 1441                           l2999 05ED                           l4943 1545  
                         l5495 0FCE                           l5487 0FAD                           l5479 0F7B  
                         l5399 0D51                           l4769 1426                           l4793 0092  
                         l4785 007D                           l4777 0061                           l4689 17AC  
                         l4873 0400                           l4865 03DC                           l4857 03A4  
                         l4849 0380                           l4961 07F7                           l4953 07CE  
                         l4929 142A                           l4945 154A                           l4937 1532  
                         l4881 1461                           l5489 0FBB                           l5497 0FCF  
                         ?_irq 0070                           l4795 0098                           l4787 0081  
                         l4779 0068                           l4875 0405                           l4867 03E2  
                         l4859 03A9                           l4955 07D2                           l4971 064A  
                         l4963 0637                           l4947 1554                           l4939 1536  
                         l4891 146B                           l4883 1464                           l4797 009E  
                         l4789 0086                           l4869 03F5                           l4957 07EB  
                         l4949 07C2                           l4981 066C                           l4973 0652  
                         l4965 0638                           l4877 13F8                           l4893 146C  
                         l4885 1466                           l4799 00A4                           l4991 0508  
                         l4959 07F0                           l4975 0657                           l4967 063D  
                         l4983 066D                           l4879 13FB                           l4895 146F  
                         l4887 1467                           l5791 0E2D                           l5783 09A7  
                         l4993 0509                           l4977 065F                           l4969 0645  
                         l4897 1470                           l4889 1469                           l5793 0FDB  
                         l5785 0A72                           l4899 1759                           l4995 050F  
                         l5795 0675                           l4979 0664                           l5787 0BE4  
                         l5797 0556                           l4997 0510                           l5789 0DB2  
                         l5799 17B7                           l4999 0511        __end_of_getIndicePassos 13CC  
                         STR_1 1103                           STR_2 100F                           STR_3 10EE  
                         STR_4 1099                           STR_5 1066                           STR_6 1077  
                         STR_7 10DD                           STR_8 10FB                           STR_9 1033  
                         u2200 0630                           u2201 062F                           u2130 05E0  
                         u2131 05DF                           u2150 05F4                           u2151 05F3  
                         u3200 042B                           u4000 0086                           u2144 05E8  
                         u3201 042A                           u4001 0085                           u2145 05E6  
                         u3210 044B                           u4010 008D                           u2170 0605  
                         u3211 044A                           u4011 008C                           u2171 0604  
                         u4020 0098                           u4100 03E2                           u2164 05FC  
                         u4021 0097                           u4101 03E1                           u2165 05FA  
                         u3230 0474                           u3310 04DD                           u4030 00C0  
                         u4110 03FB                           u2190 0625                           u3231 0473  
                         u3311 04DC                           u4031 00BF                           u4111 03FA  
                         u2191 0624                           u3240 047A                           u3400 0590  
                         u4040 00D4                           u4120 1545                           u4200 019F  
                         u3241 0479                           u3225 044F                           u3305 04CD  
                         u3401 058F                           u4041 00D3                           u2185 0608  
                         u4121 1544                           u3330 04F2                           u3250 0499  
                         u4050 013D                           u4130 154A                           u4210 01F6  
                         u3331 04F1                           u3315 04D9                           u3251 0498  
                         u4051 013C                           u4131 1549                           u4211 01F5  
                         u3340 04F9                           u3260 04A5                           u3420 05A3  
                         u4060 0180                           u3500 029E                           u4140 07F6  
                         u4300 0885                           u4220 01FF                           u3341 04F8  
                         u3325 04E6                           u3261 04A4                           u3421 05A2  
                         u4061 017F                           u3501 029D                           u4141 07F5  
                         u4301 0884                           u4221 01FE                           u4150 0746  
                         u3190 0425                           u3270 04B7                           u3430 05AF  
                         u3510 02D0                           u4070 038F                           u4310 08E2  
                         u4230 022C                           u4151 0745                           u3191 0424  
                         u3271 04B6                           u3431 05AE                           u3415 0594  
                         u3511 02CF                           u4071 038E                           u4311 08E1  
                         u4231 022B                           u3520 02F5                           u4080 03A4  
                         u4400 0BCF                           u4320 0916                           u4240 023B  
                         u4161 074F                           u3185 0415                           u3521 02F4  
                         u4081 03A3                           u4401 0BCE                           u4321 0915  
                         u4241 023A                           u4162 0756                           u3290 04CA  
                         u3370 159C                           u3610 17DD                           u3450 05C3  
                         u3530 0316                           u4090 03DC                           u4410 0C05  
                         u4330 094A                           u4250 0243                           u4163 075D  
                         u3355 172C                           u3291 04C9                           u3371 159B  
                         u3611 17DB                           u3451 05C2                           u3435 05AB  
                         u3531 0315                           u4091 03DB                           u4411 0C04  
                         u4331 0949                           u4251 0242                           u3700 06E8  
                         u3604 17D7                           u3460 05CA                           u3380 0578  
                         u3540 031E                           u4500 0D6A                           u4420 0C0B  
                         u4340 097E                           u4260 024C                           u3365 14AE  
                         u3285 04BB                           u3701 06E7                           u3461 05C9  
                         u3445 05B7                           u3381 0577                           u3541 031D  
                         u3525 02F1                           u4501 0D69                           u4421 0C0A  
                         u4341 097D                           u4261 024B                           u4190 0778  
                         u3470 1530                           u3630 17E4                           u3390 0584  
                         u3550 0327                           u3710 1626                           u4510 0EA4  
                         u4430 0C24                           u4350 09EE                           u4270 0279  
                         u4191 0777                           u4175 0760                           u3471 152F  
                         u3631 17E2                           u3391 0583                           u3551 0326  
                         u3535 0312                           u3711 1625                           u4511 0EA3  
                         u4431 0C23                           u4351 09ED                           u4271 0278  
                         u3800 0707                           u3624 17DE                           u3560 037B  
                         u3480 0295                           u3720 162D                           u4600 0FAD  
                         u4520 0EAA                           u4440 0C37                           u4360 0A03  
                         u4280 0288                           u4185 0768                           u3801 0706  
                         u3561 037A                           u3481 0293                           u3721 162C  
                         u4601 0FAC                           u4521 0EA9                           u4441 0C36  
                         u4361 0A02                           u4281 0287                           u3650 069E  
                         u3570 17CF                           u3490 0296                           u3730 163B  
                         u4610 0FBA                           u4530 0EAF                           u4450 0C4C  
                         u4370 0AFD                           u4290 0837                           u3651 069D  
                         u3571 17CD                           u3731 163A                           u4611 0FB9  
                         u4531 0EAE                           u4451 0C4B                           u4371 0AFC  
                         u4291 0836                           u3820 071A                           u3740 1648  
                         u3660 06AC                           u3900 15A9                           u3644 17E5  
                         u4540 0EC0                           u4460 0CE3                           u4380 0B03  
                         u3821 0719                           u3741 1647                           u3661 06AB  
                         u3901 15A8                           u3565 0377                           u4605 0FA9  
                         u4541 0EBF                           u4461 0CE2                           u4381 0B02  
                         u3670 06C6                           u3910 15AE                           u3590 17D6  
                         u4550 0F1C                           u4470 0D2A                           u4390 0B9B  
                         u3815 070A                           u3671 06C5                           u3911 15AD  
                         u3591 17D4                           u4551 0F1B                           u4471 0D29  
                         u4391 0B9A                           u3840 072F                           u3680 06CC  
                         u3920 15CF                           u3584 17D0                           u4560 0F36  
                         u4480 0D4B                           u3841 072E                           u3825 0716  
                         u3681 06CB                           u3921 15CE                           u4561 0F35  
                         u4481 0D4A                           u3770 1662                           u3850 07C0  
                         u3690 06D8                           u3930 15D4                           u4570 0F48  
                         u4490 0D51                           u3835 0723                           u3771 1661  
                         u3755 164F                           u3851 07BF                           u4627 151A  
                         u3691 06D7                           u3931 15D3                           u4571 0F47  
                         u4491 0D50                           u3860 144A                           u3780 06F4  
                         u3940 141B                           u4580 0F74                           u3861 1449  
                         u3781 06F3                           u3765 1656                           u4637 0432  
                         u3941 1419                           u4581 0F73                           u3950 141C  
                         u4590 0F91                           u4647 043B                           u4591 0F90  
                         u3880 15F4                           u3960 16FD                           u4657 045E  
                         u3881 15F3                           u3961 16FC                           u3890 15FA  
                         u3970 170F                           u3795 06F8                           u4667 0481  
                         u3891 15F9                           u3971 170E                           u3875 1561  
                         u3980 1426                           u4677 048A                           u3981 1425  
                         u3990 0068                           u4687 173B                           u3975 170B  
                         u3991 0067                           u4697 174F                   __CFG_WRT$OFF 0000  
                         _fila 0190                           _main 0182                           btemp 007E  
               ?_addContCiclos 0070                    main@vetorIn 00C8                           start 000C  
                __CFG_IESO$OFF 0000                   ?_ler_atuador 0070                 printExec@passo 0043  
                        ??_irq 0074                   main@boolStop 00B4                _addIndicePassos 1442  
                 main@auxPasso 00C7                          ?_main 0070                __end_of___awdiv 0505  
                        STR_10 1022                          STR_11 10CC                          STR_12 1044  
                        STR_13 1055                          STR_14 10AA                          STR_15 1088  
                        STR_16 1000                          STR_17 1011                  __CFG_WDTE$OFF 0000  
                        STR_18 10BB                __end_of___awmod 05D6                ___awdiv@divisor 0020  
              __end_of___lwdiv 0737                          i1l600 1696                          i1l344 14EC  
                        i1l601 1696                          i1l345 14ED                          i1l599 1694  
              ___awdiv@counter 0025                          _TMR1H 000F                          _TMR1L 000E  
                        _PORTD 0008                          _TRISD 0088            ___lmul@multiplicand 0024  
                __CFG_PWRTE$ON 0000                __end_of_dispLCD 07C2                 __CFG_FCMEN$OFF 0000  
            ??_fifo_disponivel 0020          __end_of_teclado_borda 1555                          _delay 1513  
                        _setT1 142A                          main@i 00C3                          main@j 00C4  
               __CFG_BOREN$OFF 0000                          pclath 000A                   main@vetorOut 00CE  
                        status 0003                          wtemp0 007E                  _indice_passos 007B  
         __end_of_dispLCD_init 16F5                 __CFG_MCLRE$OFF 0000                __initialization 000F  
                 __end_of_main 0FFD               ?_dispLCD_dataReg 0070                         ??_main 0044  
                ?_initSerialIO 0020           __size_of_dispLCD_clr 0007           __size_of_dispLCD_num 00F0  
                main@boolPause 00B3           __size_of_alt_atuador 003A               ?_dispLCD_instReg 0070  
                       ?_delay 0020                         ?_setT1 002D               ___awdiv@dividend 0022  
         __size_of_dignum_conc 002E                         _ANSELH 0189               ?_getIndicePassos 0070  
                       i1l3357 1669                         i1l3359 1677                         i1l3581 14EC  
                       i1l3573 14D6                         i1l3575 14DD                         i1l3577 14E3  
                       i1l3579 14E6                         u262_20 1677                         u262_21 1676  
                       u263_20 1693           __size_of_fifo_delete 0029                         u263_25 1686  
                       u263_26 1687                         u263_27 168C                         u263_28 168D  
                       u263_29 1692                         u274_20 14DD                         u274_21 14DC  
                       u275_20 14E3                         u275_21 14E2                ??_addContCiclos 0020  
         __size_of_fifo_indice 0005           __size_of_fifo_lerPos 000A                ler_sensor@passo 0023  
             __end_of_fifo_add 15C6               __end_of_fifo_tam 13C9        __end_of_addIndicePassos 1450  
                main@pauseLeft 00B5                         _t1cont 005A                         ___lmul 0737  
                       ___wmul 163F                      ??___awdiv 0024                      ??___awmod 0024  
                       _ciclos 0078              _fifo_alinharPrint 0690                   ?_timer1_init 0070  
                    ??___lwdiv 0024                         delay@t 0020               ___awdiv@quotient 0027  
                       _teclas 0048                ___awmod@divisor 0020             ?_fifo_alinharPrint 0070  
                    ??_dispLCD 0029                ___awmod@counter 0025                 ??_initSerialIO 0022  
             __end_of_posAtual 14D6                         setT1@c 002D                   __pdataCOMMON 007B  
                       saved_w 007E            ??_fifo_alinharPrint 002D          __end_of_getContCiclos 13F8  
             __end_of_statusT1 1442        __end_of__initialization 004B              _serialIObyteShift 1616  
      __size_of_dispLCD_lincol 0015             ?_serialIObyteShift 0070      __end_of_fifo_alinharPrint 06EA  
               __pcstackCOMMON 0070       __size_of_resetContCiclos 0003                   __pidataBANK0 1483  
                 __pidataBANK1 1472                  __end_of_delay 1532                  __end_of_setT1 1436  
         __size_of_ler_atuador 0039            ??_serialIObyteShift 0020             __size_of_getCiclos 0025  
            initSerialIO@ptrIn 0023   __end_of_fifo_indicePrint_dec 142A   __end_of_fifo_indicePrint_inc 1725  
                      ??_delay 0022                        ??_setT1 0031             teclado_borda@tecla 0029  
                   __pbssBANK0 005A                     __pbssBANK1 00E3                     __pbssBANK3 0190  
        __size_of_dispLCD_init 0030      __end_of_serialIObyteShift 163F                  ?_teclado_init 0070  
                ?_teclado_scan 0070             __size_of_intt1_1ms 002E               teclado_borda@aux 0028  
        __end_of_dignum_apagar 1513                     __pmaintext 0182               ?_addIndicePassos 0070  
               main@contPassos 00B1                        ?___lmul 0020                        ?___wmul 0020  
                   __pintentry 0004                _fifo_disponivel 1412                 ___lmul@product 0029  
      serialIObyteShift@dataIn 0021                     _dignum_tam 157A             __size_of_set_passo 005C  
                   _fifo_print 004F             __size_of_printExec 0091                        _LCDbits 0006  
                 _dispLCD_init 16C5                      ?_fifo_add 0070                      ?_fifo_tam 0070  
                   __stringtab 1105                 ??_teclado_init 0020                 ??_teclado_scan 0020  
                ?_serialIOload 0070                  ?_serialIOscan 0070              __end_of_getCiclos 157A  
         __end_of_initSerialIO 178D                    posAtual@ind 0022                      ?_posAtual 0070  
   __size_of_fifo_alinharPrint 005A                 main@pauseRight 00B6                        ___awdiv 0492  
              __size_of___lmul 004C                        ___awmod 0571                     _ler_sensor 0505  
              __size_of___wmul 002A        __size_of_init_atuadores 0005                        ___lwdiv 06EA  
                    ?_statusT1 0020                      _ANSELbits 0188                        _dispLCD 0783  
         __size_of_timer1_init 0011                        __ptext1 1461                        __ptext2 13F8  
                      __ptext3 1532                        __ptext4 05D6                        __ptext5 1436  
                      __ptext6 0634                        __ptext7 142A                        __ptext8 07C2  
                      __ptext9 13D6                  teclado_scan@c 0026                  teclado_scan@l 0025  
            __end_of_intt1_1ms 1697              ??_resetContCiclos 0020                        _atuador 007A  
      __size_of_fifo_add_ciclo 0011                      _T1CONbits 0010                   __size_of_irq 001E  
      __size_of_fifo_add_tempo 0027               ___awmod@dividend 0022                     ??_fifo_add 0033  
                   ??_fifo_tam 0020                        main@aux 00B2                        clrloop0 1401  
                      main@num 00CA           end_of_initialization 004B                 ??_serialIOload 0020  
               ??_serialIOscan 0024     __size_of_serialIObyteShift 0029                 dispLCD_num@col 002D  
               dispLCD_num@div 0037                 dispLCD_num@lin 0034                 dispLCD_num@tam 0030  
               dispLCD_num@num 002E                 _dispLCD_lincol 14A8              __end_of_set_passo 0690  
                   dispLCD@col 0026                     dispLCD@lin 002B                     dispLCD@pos 002A  
                   dispLCD@str 0027        __end_of_fifo_disponivel 141E              __end_of_printExec 040E  
                   ??_posAtual 0021           _fifo_indicePrint_dec 141E           _fifo_indicePrint_inc 16F5  
                      psplit$0 14004C         __size_of_teclado_borda 0023                   __pstringtext 1000  
           fifo_alinharPrint@i 0032                     ??_statusT1 0024                  ??_dispLCD_clr 0023  
                ??_dispLCD_num 0031                  ??_alt_atuador 0020                    ?_dignum_tam 0029  
                    _PORTAbits 0005                    ?_fifo_print 0070                  ??_dignum_conc 0027  
                    _TRISAbits 0085                      _TRISBbits 0086       __size_of_dispLCD_dataReg 0031  
                ??_fifo_delete 0033           pnum$maintext_split_1 004C                  ??_fifo_indice 0020  
                ??_fifo_lerPos 0020                  _teclaAnterior 0061         __end_of_dispLCD_lincol 14BD  
     __size_of_dispLCD_instReg 0084                     main@ciclos 00CC            dignum_apagar@ptrNum 0028  
                   main@estado 00D0          __end_of_addContCiclos 13E2       __size_of_getIndicePassos 0003  
        ?_fifo_indicePrint_dec 0070          ?_fifo_indicePrint_inc 0070                    ?_ler_sensor 0020  
               __end_of___lmul 0783                 __end_of___wmul 1669                  __pidataCOMMON 0003  
               set_passo@passo 0023           __end_of_teclado_init 1400           __end_of_teclado_scan 0634  
          start_initialization 000F            __end_of_dispLCD_clr 13E9                  posAtual@passo 0023  
          __end_of_dispLCD_num 037D            __end_of_alt_atuador 1800                    __end_of_irq 14F4  
                _teclado_borda 1532          __size_of_initSerialIO 0037                fifo_add_tempo@t 0034  
              ?_dispLCD_lincol 0023            __end_of_dignum_conc 16C5             initSerialIO@length 0021  
          __size_of_dignum_tam 0026            __end_of_fifo_delete 1616             initSerialIO@ptrOut 0020  
          __end_of_fifo_indice 13D1            __end_of_fifo_lerPos 1412            __size_of_fifo_print 0133  
             ?_fifo_disponivel 0070              dispLCD_lincol@col 0023              dispLCD_lincol@lin 0025  
              main@meAtuadores 00C9                  ??_ler_atuador 0020                       ??___lmul 0028  
                     ??___wmul 0024                 _init_atuadores 13D1         __size_of_getContCiclos 0008  
                   init_fetch0 1495                    __pdataBANK0 0048                    __pdataBANK1 00D2  
         __end_of_serialIOload 13DB           __end_of_serialIOscan 07FD                 _fifo_add_ciclo 1450  
             ler_atuador@tecla 0022                   _initSerialIO 1756                 _fifo_add_tempo 15C6  
                  __pbssCOMMON 0076                      ___latbits 0002                  __pcstackBANK0 0020  
                __pcstackBANK1 00A0                 ?_teclado_borda 0070            __size_of_ler_sensor 006C  
            __size_of_fifo_add 0026              __size_of_fifo_tam 0003              ??_dispLCD_dataReg 0020  
       ??_fifo_indicePrint_dec 0020         ??_fifo_indicePrint_inc 0020               ___lwdiv@dividend 0022  
       __end_of_init_atuadores 13D6                _resetContCiclos 07FD                      _getCiclos 1555  
            ??_dispLCD_instReg 0020                       ?___awdiv 0020              __size_of_posAtual 0019  
                     ?___awmod 0020                       ?___lwdiv 0020                  serialIOscan@i 0028  
                serialIOscan@j 0027         __end_of_fifo_add_ciclo 1461                    _dispLCD_clr 13E2  
                  _dispLCD_num 028D              ??_getIndicePassos 0020         __end_of_fifo_add_tempo 15ED  
                     ?_dispLCD 0026                      __pstrings 1105                    _alt_atuador 17C6  
          __end_of_ler_atuador 17C6              __size_of_statusT1 000C       __size_of_addIndicePassos 000E  
                    _ind_print 0058       serialIObyteShift@dataBit 0023         __size_of_dignum_apagar 001F  
                  _dignum_conc 1697       serialIObyteShift@dataOut 0022                      _intt1_1ms 1669  
             ___lwdiv@quotient 0026                  _getContCiclos 13F0                 __size_of_delay 001F  
                  _fifo_delete 15ED                 __size_of_setT1 000C                    _fifo_indice 13CC  
                  _fifo_lerPos 1408              teclado_scan@tecla 0024                 _fifo_print$183 002C  
            interrupt_function 0004                 ___wmul@product 0024                      clear_ram0 1400  
                     _PIE1bits 008C                       _PIR1bits 000C                ?_init_atuadores 0070  
                     _SERIALIO 0005                     ?_getCiclos 0020                      _set_passo 0634  
        __size_of_teclado_init 0008                      main@F1361 00E4                      main@F1363 00E3  
                    main@F1358 00D2          __size_of_teclado_scan 005E                 dignum_conc@dig 002B  
                ??_timer1_init 0020                      _printExec 037D               dispLCD_dataReg@d 0021  
              ?_fifo_add_ciclo 0020                   ??_dignum_tam 002B                    _cont_ciclos 0076  
              ?_fifo_add_tempo 0070                    __stringbase 1117                      main@i_418 00C5  
                    main@j_419 00C6              ___wmul@multiplier 0020            fifo_print@completar 002E  
                 ??_fifo_print 0029                      main@botao 00CF                    _lenSerialIO 005E  
              ??_teclado_borda 0027                      main@tecla 00D1                     ?_intt1_1ms 0070  
               ?_getContCiclos 0020              _resetIndicePassos 13E9              ___lmul@multiplier 0020  
           ?_resetIndicePassos 0070        __end_of_resetContCiclos 0800                   _teclado_init 13F8  
                 _teclado_scan 05D6             __end_of_dignum_tam 15A0            ??_resetIndicePassos 0020  
                _dignum_apagar 14F4                  ler_sensor@ptr 0020             __end_of_fifo_print 0182  
                   ?_set_passo 0020          __size_of_serialIOload 0005          __size_of_serialIOscan 003B  
                 getCiclos@aux 0024               dispLCD_instReg@i 0022                    _ler_atuador 178D  
                 ??_ler_sensor 0021                     ?_printExec 0039                   pnum$maintext 0014  
             __size_of___awdiv 0073               __size_of___awmod 0065               __size_of___lwdiv 004D  
             dispLCD_num@sinal 0036          fifo_alinharPrint@cont 0030             __end_of__stringtab 1117  
             __size_of_dispLCD 003F            __end_of_timer1_init 1472      __end_of_resetIndicePassos 13F0  
                     _main$430 00BD                       _main$431 00BF                       _main$435 00C1  
                     _main$428 00B9                       _main$429 00BB               ??_dispLCD_lincol 0024  
              ___lwdiv@divisor 0020                ___lwdiv@counter 0025                       __ptext10 1616  
                     __ptext11 13E9                       __ptext20 13D1                       __ptext12 07FD  
                     __ptext21 1756                       __ptext13 037D                       __ptext30 1412  
                     __ptext22 13F0                       __ptext14 14BD                       __ptext31 15ED  
                     __ptext23 1555                       __ptext15 13C9                       __ptext40 1513  
                     __ptext32 17C6                       __ptext24 13C6                       __ptext16 1408  
                     __ptext41 13E2                       __ptext33 15C6                       __ptext25 004F  
                     __ptext17 028D                       __ptext50 1442                       __ptext42 0783  
                     __ptext34 1450                       __ptext26 0571                       __ptext18 0505  
                     __ptext51 13DB                       __ptext43 14A8                       __ptext35 15A0  
                     __ptext27 16F5                       __ptext19 178D                       __ptext52 0737  
                     __ptext44 040E                       __ptext36 0690                       __ptext28 141E  
                     __ptext53 14D6                       __ptext45 1725                       __ptext37 157A  
                     __ptext29 13CC                       __ptext54 1669                       __ptext46 1697  
                     __ptext38 0492                       __ptext47 163F                       __ptext39 16C5  
                     __ptext48 14F4                       __ptext49 06EA                       _fifo_add 15A0  
            __CFG_BOR4V$BOR40V 0000              ??_addIndicePassos 0020                       _fifo_tam 13C6  
                     _ind_fila 0059             __end_of_ler_sensor 0571                   _serialIOload 13D6  
                 _serialIOscan 07C2                  __size_of_main 0E7B                 ?_dignum_apagar 0070  
                     _posAtual 14BD                    ??_getCiclos 0022                  _printExec$208 0040  
           fifo_print@indPrint 002F                  fifo_add@passo 0034                       _statusT1 1436  
                dignum_tam@tam 002C                  dignum_tam@num 0029                       main@lin2 00A0  
                     main@next 00B8                   set_passo@ptr 0020                ??_getContCiclos 0022  
                   _INTCONbits 000B                  ?_dispLCD_init 0070         __size_of_addContCiclos 0007  
              _dispLCD_dataReg 1725                    ??_intt1_1ms 0070                       init_ram0 1499  
              dispLCD_num@size 0035           fifo_alinharPrint@aux 0031                _dispLCD_instReg 040E  
                     intlevel1 0000               ?_resetContCiclos 0070                _getIndicePassos 13C9  
            dignum_conc@ptrNum 0026                      stringcode 110F                    ??_set_passo 0021  
            fifo_print@comando 0031                    ??_printExec 003A                    _timer1_init 1461  
                 _ptrSerialOut 005F                   ?_dispLCD_clr 0070                   ?_dispLCD_num 002D  
     __size_of_fifo_disponivel 000C                   ?_alt_atuador 0070           fifo_add_ciclo@ciclos 0020  
               ??_dispLCD_init 0024     __size_of_resetIndicePassos 0007                       stringtab 1105  
                 ?_dignum_conc 0026               fifo_print@atraso 0032                   ?_fifo_delete 0070  
                  _ptrSerialIn 0060                   fifo_lerPos@i 0020                   ?_fifo_indice 0070  
                 ?_fifo_lerPos 0070               ??_init_atuadores 0020                ??_dignum_apagar 0028  
                _addContCiclos 13DB               ??_fifo_add_ciclo 0022                    fifo_print@i 0030  
